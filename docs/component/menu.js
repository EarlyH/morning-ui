!function(n){function e(e){for(var i,m,a=e[0],r=e[1],l=e[2],c=0,d=[];c<a.length;c++)m=a[c],o[m]&&d.push(o[m][0]),o[m]=0;for(i in r)Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);for(s&&s(e);d.length;)d.shift()();return u.push.apply(u,l||[]),t()}function t(){for(var n,e=0;e<u.length;e++){for(var t=u[e],i=!0,a=1;a<t.length;a++){var r=t[a];0!==o[r]&&(i=!1)}i&&(u.splice(e--,1),n=m(m.s=t[0]))}return n}var i={},o={45:0};var u=[];function m(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,m),t.l=!0,t.exports}m.m=n,m.c=i,m.d=function(n,e,t){m.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:t})},m.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},m.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return m.d(e,"a",e),e},m.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},m.p="/";var a=window.webpackJsonp=window.webpackJsonp||[],r=a.push.bind(a);a.push=e,a=a.slice();for(var l=0;l<a.length;l++)e(a[l]);var s=r;u.push([335,0]),t()}({1:function(n,e){n.exports=Vue},163:function(n,e,t){"use strict";t.d(e,"a",function(){return i}),t.d(e,"b",function(){return o});var i=function(){var n=this.$createElement,e=this._self._c||n;return e("doc-component",{attrs:{page:this.page,hasPadding:!0}},[e("script",{attrs:{type:"text/markdown"}},[this._v("\n# 导航菜单 `<ui-menu>`\n\n<doc-component-status page=\"menu\"></doc-component-status>\n\n[[[开始]]]\n\n定义一个导航菜单，这是一个内联块元素。\n\n#### 使用\n\n通过`menu`配置来设置菜单：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        menu : {\n            'home' : '首页',\n            'order' : '订单',\n            'history' : '历史',\n            'settings' : '设置'\n        }\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\"></ui-menu>\n</div>\n:::\n\n#### 完整的菜单\n\n上面的菜单设置是简写，下面是一个完整的菜单设置\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            menu : {\n                'home' : '首页',                            // 若目录的值是字符串，则此字符串是目录名称，这是一种简写\n                'order' : {\n                    name : '订单'                           // 目录的值为对象时，可以通过`name`来设置目录的名称\n                },\n                'search' : {\n                    name : '搜索',\n                    link : 'https://google.com/'            // 通过`link`设置点击后跳转的链接\n                },\n                'map' : {\n                    name : '地图',\n                    link : 'https://maps.google.com/',\n                    newtab : true                           // 通过`newtab`设置点击后新窗口打开链接\n                },             \n                'settings' : {\n                    name : '设置',\n                    childs : {                              // 通过`child`设置子目录，当一个目录包含`child`后，`link`会失效\n                        'profile' : '个人设置',\n                        'safity' : '账户安全',\n                        'privacy' : '隐私'\n                    }\n                },\n                'logout' : {\n                    name : '注销',\n                    handler : this.logout                   // 通过`handler`为目录指定点击后的处理函数\n                },\n                'help' : {\n                    name : '帮助',\n                    disable : true                          // 禁用菜单项\n                }\n            }\n        };\n    },\n    methods : {\n        logout : function () {\n            alert('注销账户');\n        }\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\"></ui-menu>\n</div>\n:::\n\n#### 绑定处理函数\n\n帮点菜单点击后的处理函数有两种方法，第一方法是绑定在`menu`配置中，通过`handler`为每一个项目绑定处理函数：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            menu : {\n                'home' : {\n                    name : '首页',\n                    handler : this.clickHome\n                },\n                'order' : {\n                    name : '订单',\n                    handler : this.clickOrder\n                },\n                'search' : {\n                    name : '搜索',\n                    hanlder : this.clickSearch\n                }\n            }\n        };\n    },\n    methods : {\n        clickHome : function () {\n            alert('点击首页');\n        },\n        clickOrder : function () {\n            alert('点击订单');\n        },\n        clickSearch : function () {\n            alert('点击搜索');\n        }\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\"></ui-menu>\n</div>\n:::\n\n第二种方法通过监听导航菜单组件的`emit`事件：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            menu : {\n                'home' : '首页',\n                'order' : {\n                    name : '订单',\n                    childs : {\n                        'my' : '我的订单',\n                        'history' : '历史订单'\n                    }\n                },\n                'search' : '搜索'\n            }\n        };\n    },\n    methods : {\n        itemClick : function (item) {\n            // item是点击项目的对象\n            // 包含：\n            // item.key : 项目的KEY\n            // item.name : 项目的名称\n            // item.link : 跳转链接\n            // item.newtab : 是否新窗口打开\n            // item.childs : 子菜单对象\n            alert(`点击${item.name}(${item.key})`);\n        }\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\" @emit=\"itemClick\"></ui-menu>\n</div>\n:::\n\n#### 多级子菜单\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        menu : {\n            'home' : '首页',\n            'order' : '订单',\n            'history' : '历史',\n            'settings' : {\n                name : '设置',\n                childs : {\n                    'common' : {\n                        name : '通用设置',\n                        childs : {\n                            'theme' : {\n                                name : '模板',\n                                childs : {\n                                    'modify' : '编辑',\n                                    'market' : '模板市场'\n                                }\n                            },\n                            'goods' : '商品',\n                            'payment' : '支付'\n                        }\n                    },\n                    'account' : {\n                        name : '账户设置',\n                        childs : {\n                            'email' : '邮箱设置',\n                            'password' : '修改密码'\n                        }\n                    },\n                    'safity' : {\n                        name : '安全设置',\n                        childs : {\n                            'multiple' : '多重认证',\n                            'found' : '账户找回',\n                            'history' : '登录历史',\n                            'help' : '寻求帮助',\n                            'blocked' : '锁定账户'\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\"></ui-menu>\n</div>\n:::\n\n#### 子菜单分组\n\n从二级菜单开始，可以通过`groups`为菜单项目进行分组。需要注意的当指定了`groups`菜单项的顺序将按照`groups`为准，而不是`childs`中的顺序。\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            menu : {\n                'home' : '首页',\n                'order' : {\n                    name : '订单',\n                    childs : {\n                        'all' : '所有',\n                        'notshipped' : '待发货',\n                        'intransit' : '运输中',\n                        'done' : '已完成',\n                        'history' : '历史订单',\n                        'status' : '订单状态',\n                        'data' : '数据统计'\n                    },\n                    groups : {\n                        '订单列表' : ['all', 'done', 'notshipped', 'intransit'],\n                        '更多' : ['history', 'status', 'data']\n                    }\n                }\n            }\n        };\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\"></ui-menu>\n</div>\n:::\n\n#### 带图标的菜单\n\n你可以直接在`name`中增加`<i>`标签来为菜单增加图标：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            menu : {\n                'home' : '<i class=\"mo-icon mo-icon-block-4\"></i>首页',\n                'order' : {\n                    name : '<i class=\"mo-icon mo-icon-menu\"></i>订单',\n                    childs : {\n                        'my' : '<i class=\"mo-icon mo-icon-list\"></i>我的订单',\n                        'history' : '<i class=\"mo-icon mo-icon-time-cf\"></i>历史订单'\n                    }\n                },\n                'search' : '<i class=\"mo-icon mo-icon-more\"></i>搜索'\n            }\n        };\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\"></ui-menu>\n</div>\n:::\n\n#### 菜单禁用\n\n通过`disabled`可以禁用菜单项，当项目被禁用后不会显示子菜单，也不会响应点击：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            menu : {\n                'home' : '<i class=\"mo-icon mo-icon-block-4\"></i>首页',\n                'order' : {\n                    name : '<i class=\"mo-icon mo-icon-menu\"></i>订单',\n                    childs : {\n                        'my' : '<i class=\"mo-icon mo-icon-list\"></i>我的订单',\n                        'history' : {\n                            name : '<i class=\"mo-icon mo-icon-time-cf\"></i>历史订单',\n                            childs : {\n                                'week' : '最近一周',\n                                'month' : '最近一月'\n                            },\n                            disable : true\n                        }\n                    }\n                },\n                'search' : {\n                    name : '<i class=\"mo-icon mo-icon-more\"></i>搜索',\n                    disable : true\n                }\n            }\n        };\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\"></ui-menu>\n</div>\n:::\n\n#### 高亮当前所在菜单\n\n你可以通过`current-menu`配置来高亮当前的菜单，多级菜单用`\\/`来分割每一级：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            menu : {\n                'home' : '首页',\n                'order' : {\n                    name : '订单',\n                    childs : {\n                        'my' : '我的订单',\n                        'history' : {\n                            name : '历史订单',\n                            childs : {\n                                'week' : '最近一周',\n                                'month' : '最近一月'\n                            }\n                        }\n                    }\n                },\n                'search' : '搜索'\n            }\n        };\n    }\n});\n---\n<div style=\"width:600px;\">\n    <ui-menu :menu=\"menu\" current-menu=\"order/history/week\"></ui-menu>\n</div>\n:::\n\n#### 侧边栏菜单\n\n通过将`position`配置设为`side`，可以将菜单位置改为侧栏：\n\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        menu : {\n            'home' : '首页',\n            'order' : '订单',\n            'history' : '历史',\n            'settings' : '设置'\n        }\n    }\n});\n---\n<div style=\"width:220px;\">\n    <ui-menu :menu=\"menu\" position=\"side\"></ui-menu>\n</div>\n:::\n\n有多级子菜单的侧边栏菜单：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        menu : {\n            'home' : '首页',\n            'order' : '订单',\n            'history' : '历史',\n            'settings' : {\n                name : '设置',\n                childs : {\n                    'common' : {\n                        name : '通用设置',\n                        childs : {\n                            'theme' : {\n                                name : '模板',\n                                childs : {\n                                    'modify' : '编辑',\n                                    'market' : '模板市场'\n                                }\n                            },\n                            'goods' : '商品',\n                            'payment' : '支付'\n                        }\n                    },\n                    'account' : {\n                        name : '账户设置',\n                        childs : {\n                            'email' : '邮箱设置',\n                            'password' : '修改密码'\n                        }\n                    },\n                    'safity' : {\n                        name : '安全设置',\n                        childs : {\n                            'multiple' : '多重认证',\n                            'found' : '账户找回',\n                            'history' : '登录历史',\n                            'help' : '寻求帮助',\n                            'blocked' : '锁定账户'\n                        }\n                    }\n                }\n            }\n        }\n    }\n});\n---\n<div style=\"width:220px;\">\n    <ui-menu :menu=\"menu\" position=\"side\"></ui-menu>\n</div>\n:::\n\n带菜单分组的侧边栏菜单：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            menu : {\n                'home' : '首页',\n                'order' : {\n                    name : '订单',\n                    childs : {\n                        'all' : '所有',\n                        'notshipped' : '待发货',\n                        'intransit' : '运输中',\n                        'done' : '已完成',\n                        'history' : '历史订单',\n                        'status' : '订单状态',\n                        'data' : '数据统计'\n                    },\n                    groups : {\n                        '订单列表' : ['all', 'done', 'notshipped', 'intransit'],\n                        '更多' : ['history', 'status', 'data']\n                    }\n                }\n            }\n        };\n    }\n});\n---\n<div style=\"width:220px;\">\n    <ui-menu :menu=\"menu\" position=\"side\"></ui-menu>\n</div>\n:::\n\n[[[源码]]]\n\n<iframe src=\"/report/coverage/lib/components/menu/index.vue.html\" name=\"codeFrame\" frameborder=\"0\" onload=\"this.height=codeFrame.document.body.scrollHeight\"></iframe>\n\n")])])},o=[];i._withStripped=!0},334:function(n,e,t){"use strict";t.r(e);var i=t(48),o=t.n(i);for(var u in i)"default"!==u&&function(n){t.d(e,n,function(){return i[n]})}(u);var m=t(163),a=t(0),r=!1;var l=function(n){r||t(728)},s=Object(a.a)(o.a,m.a,m.b,!1,l,null,null);s.options.__file="src/docs/pages/component/menu/index.vue",e.default=s.exports},335:function(n,e,t){"use strict";var i=u(t(1)),o=u(t(334));function u(n){return n&&n.__esModule?n:{default:n}}new i.default({el:"#root",render:function(n){return n(o.default)}})},48:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,o=t(2),u=(i=o)&&i.__esModule?i:{default:i};e.default={data:function(){return{page:"menu"}},components:{"doc-component":u.default}},n.exports=e.default},728:function(n,e){}});