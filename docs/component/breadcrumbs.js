!function(n){function e(e){for(var t,a,u=e[0],s=e[1],o=e[2],m=0,v=[];m<u.length;m++)a=u[m],i[a]&&v.push(i[a][0]),i[a]=0;for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(n[t]=s[t]);for(d&&d(e);v.length;)v.shift()();return r.push.apply(r,o||[]),l()}function l(){for(var n,e=0;e<r.length;e++){for(var l=r[e],t=!0,u=1;u<l.length;u++){var s=l[u];0!==i[s]&&(t=!1)}t&&(r.splice(e--,1),n=a(a.s=l[0]))}return n}var t={},i={9:0};var r=[];function a(e){if(t[e])return t[e].exports;var l=t[e]={i:e,l:!1,exports:{}};return n[e].call(l.exports,l,l.exports,a),l.l=!0,l.exports}a.m=n,a.c=t,a.d=function(n,e,l){a.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:l})},a.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/";var u=window.webpackJsonp=window.webpackJsonp||[],s=u.push.bind(u);u.push=e,u=u.slice();for(var o=0;o<u.length;o++)e(u[o]);var d=s;r.push([269,0]),l()}({1:function(n,e){n.exports=Vue},130:function(n,e,l){"use strict";l.d(e,"a",function(){return t}),l.d(e,"b",function(){return i});var t=function(){var n=this.$createElement,e=this._self._c||n;return e("doc-component",{attrs:{page:this.page,hasPadding:!0}},[e("script",{attrs:{type:"text/markdown"}},[this._v("\n# 面包屑 `<ui-breadcrumbs>`\n\n<doc-component-status page=\"breadcrumbs\"></doc-component-status>\n\n[[[开始]]]\n\n定义一个模面包屑导航。\n\n#### 使用\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<ui-breadcrumbs :list=\"list\"></ui-breadcrumbs>\n:::\n\n[[[形态]]]\n\n#### 支持\n\n|类型|支持|默认|\n|-|-|-|\n|尺寸|全部|`m`|\n|色彩|不支持|-|\n|状态|不支持|-|\n\n<a href=\"/guide/status.html\">查看形态文档</a>\n\n#### 尺寸\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs :list=\"list\" size=\"xxs\" root-name=\"xxs\"></ui-breadcrumbs>\n</div>\n:::\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs :list=\"list\" size=\"xs\" root-name=\"xs\"></ui-breadcrumbs>\n</div>\n:::\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs :list=\"list\" size=\"s\" root-name=\"s\"></ui-breadcrumbs>\n</div>\n:::\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs :list=\"list\" size=\"m\" root-name=\"m\"></ui-breadcrumbs>\n</div>\n:::\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs :list=\"list\" size=\"l\" root-name=\"l\"></ui-breadcrumbs>\n</div>\n:::\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs :list=\"list\" size=\"xl\" root-name=\"xl\"></ui-breadcrumbs>\n</div>\n:::\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs :list=\"list\" size=\"xxl\" root-name=\"xxl\"></ui-breadcrumbs>\n</div>\n:::\n\n[[[配置]]]\n\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|[root-name](#root-name)|根层级名称|名称<br>`false`|String<br>Boolean|`false`|\n|[choose-root](#choose-root)|可以选择跟层级，选择跟层级将会清空层级列表|`true`<br>`false`|Boolean|`false`|\n|[list](#list)|默认面包屑层级|一个数组，数组中每一个对象代表一个层级，对象的键名是层级的值，对象的键值是层级的名称。对象的键名必须唯一。|Array|`[]`|\n|[max-history](#max-history)|面包屑记录历史步骤最大数，每次切换计一次步骤|步骤数|Boolean|`20`|\n|[separator](#separator)|指定分隔的文字及图标。如果是图标需要使用`<i>`标签，支持所有[图标](/component/iconfont.html)。|文字<br>`<i>`图标|String|`'/'`|\n\n#### root-name\n\n`root-name`不在层级关系中，仅仅作为一个提示存在。\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<ui-breadcrumbs :list=\"list\" root-name=\"首页\"></ui-breadcrumbs>\n:::\n\n#### choose-root\n\n跟层级可被选中，选中时所有层级会被清空。\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<ui-breadcrumbs :list=\"list\" root-name=\"首页\" choose-root></ui-breadcrumbs>\n:::\n\n#### list\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'},\n            {'level4' : '第四级'},\n            {'level5' : '第五级'}\n        ]\n    }\n});\n---\n<ui-breadcrumbs :list=\"list\"></ui-breadcrumbs>\n:::\n\n#### max-history\n\n设置最多可回退步骤数，注意由于操作后立即会记录历史，所以：\n\n- 如果限制最多回退1步，`max-history`设为2\n- 如果限制不准回退，`max-history`设为1\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n\x3c!-- 设置最多回退1步 --\x3e\n<div>\n    <ui-breadcrumbs ref=\"demo6\" :list=\"list\" :max-history=\"2\"></ui-breadcrumbs>\n    <ui-link js=\"morning.findVM('demo6').backLast();\">回退一步</ui-link>\n</div>\n:::\n\n#### separator\n\n使用`>`来分隔：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<ui-breadcrumbs :list=\"list\" separator=\">\"></ui-breadcrumbs>\n:::\n\n使用图标来分隔：\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<ui-breadcrumbs :list=\"list\" separator=\"<i class='mo-icon-arrow-right'></i>\"></ui-breadcrumbs>\n:::\n\n[[[方法]]]\n\n#### toLevel(index)\n\n锁定按钮，锁定后按钮不会触发`emit`事件。\n\n注意由于第1级无法切换，所以：\n\n- 切换到第2级，使用`toLevel(1)`\n- 切换到第n级，使用`toLevel(n - 1)`\n\n|KEY|可选|描述|接受值|值类型|默认值|\n|-|-|-|-|-|-|\n|index|NO|若是数字则切换到指定深度的层级，若是字符串切换到指定键名的层级|数值(指定的层级)<br>字符串(指定键名的层级)|`Number`<br>`String`|`undefined`|\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'},\n            {'level4' : '第四级'},\n            {'level5' : '第五级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs ref=\"demo7\" :list=\"list\"></ui-breadcrumbs>\n    <ui-link js=\"morning.findVM('demo7').toLevel(1);\">切换到第2级</ui-link>\n    <ui-link js=\"morning.findVM('demo7').toLevel('level3');\">切换到level3</ui-link>\n    <ui-link js=\"morning.findVM('demo7').backLast();\">恢复</ui-link>\n</div>\n:::\n\n#### getLevel()\n\n获取当前层级信息，包括：\n\n- keyList : 层级的key数组\n- nameList : 层级的name数组\n- currentKey : 当前选中的key\n- currentName : 当前选中的name\n- length : 层级长度\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs ref=\"demo8\" :list=\"list\"></ui-breadcrumbs>\n    <ui-link js=\"alert(JSON.stringify(morning.findVM('demo8').getLevel()));\">获取层级信息</ui-link>\n</div>\n:::\n\n#### getHistory()\n\n获取当前面包屑历史，返回一个数组，数组中每一项都是一个完整的层级信息，可以通过`setLevel()`方法设置。\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs ref=\"demo9\" :list=\"list\"></ui-breadcrumbs>\n    <ui-link js=\"alert(JSON.stringify(morning.findVM('demo9').getHistory()));\">获取历史步骤</ui-link>\n</div>\n:::\n\n#### backLast([num])\n\n回退步骤。\n\n|KEY|可选|描述|接受值|值类型|默认值|\n|-|-|-|-|-|-|\n|num|YES|指定要返回的步数，从最后开始，从1开始|回退的步骤数|`Number`|`1`|\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'},\n            {'level4' : '第四级'},\n            {'level5' : '第五级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs ref=\"demo10\" :list=\"list\"></ui-breadcrumbs>\n    <ui-link js=\"morning.findVM('demo10').backLast(1);\">回退一步</ui-link>\n    <ui-link js=\"morning.findVM('demo10').backLast(2);\">回退两步</ui-link>\n</div>\n:::\n\n#### addLevel(level)\n\n添加一个层级，注意层级的键名不能重复。\n\n|KEY|可选|描述|接受值|值类型|默认值|\n|-|-|-|-|-|-|\n|level|NO|添加的层级|对象，键名为层级的值，键值为层级的名称|`Object`|`undefined`|\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs ref=\"demo11\" :list=\"list\"></ui-breadcrumbs>\n    <ui-link js=\"morning.findVM('demo11').addLevel({'level4':'新层级'});\">新增一个层级</ui-link>\n</div>\n:::\n\n#### setLevel(levelList)\n\n重设整个层级关系。\n\n|KEY|可选|描述|接受值|值类型|默认值|\n|-|-|-|-|-|-|\n|levelList|NO|添加的层级|一个数组，数组中每一个对象代表一个层级，对象的键名是层级的值，对象的键值是层级的名称|`Array`|`undefined`|\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    }\n});\n---\n<div>\n    <ui-breadcrumbs ref=\"demo12\" :list=\"list\"></ui-breadcrumbs>\n    <ui-link js=\"morning.findVM('demo12').setLevel([{'level6':'第六级'},{'level7':'第七级'}]);\">重设整个层级</ui-link>\n    <ui-link js=\"morning.findVM('demo12').backLast();\">恢复</ui-link>\n</div>\n:::\n\n[[[事件]]]\n\n#### emit\n\n当选择层级改变时触发。\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : {\n        list : [\n            {'level1' : '第一级'},\n            {'level2' : '第二级'},\n            {'level3' : '第三级'}\n        ]\n    },\n    methods : {\n        echo : function (name) {\n            console.log('demo13.console1', `emit event!`);\n        }\n    }\n});\n---\n<ui-breadcrumbs ref=\"demo13\" :list=\"list\" @emit=\"echo\"></ui-breadcrumbs>\n:::\n\n#### 生命周期事件\n\n:::vue/html\nwindow.demoEventLifecycle = new Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            text : '面包屑',\n            show : true,\n            list : [\n                {'level1' : '第一级'},\n                {'level2' : '第二级'},\n                {'level3' : '第三级'}\n            ]\n        };\n    },\n    methods : {\n        echo : function (name) {\n            console.log('demoEventLifecycle.console1', `${name} event!`);\n        }\n    }\n});\n---\n<div>\n    <ui-breadcrumbs\n        :list=\"list\"\n        ref=\"demoEventLifecycle\"\n        v-show=\"show\"\n        @created=\"echo('created')\"\n        @mounted=\"echo('mounted')\"\n        @before-update=\"echo('before-update')\"\n        @updated=\"echo('updated')\"\n        @before-destroy=\"echo('before-destroy')\"\n        @destroyed=\"echo('destroyed')\"\n    >{*text*}</ui-breadcrumbs>\n\n    <br><br>\n\n    <ui-link js=\"window.demoEventLifecycle.text='生命周期事件';\">触发update</ui-link>\n    <ui-link js=\"morning.findVM('demoEventLifecycle').$destroy();\">触发destroy</ui-link>\n</div>\n:::\n\n[[[源码]]]\n\n<iframe src=\"/report/coverage/lib/components/breadcrumbs/index.vue.html\" name=\"codeFrame\" frameborder=\"0\" onload=\"this.height=codeFrame.document.body.scrollHeight\"></iframe>\n\n")])])},i=[];t._withStripped=!0},14:function(n,e,l){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t,i=l(2),r=(t=i)&&t.__esModule?t:{default:t};e.default={data:function(){return{page:"breadcrumbs"}},components:{"doc-component":r.default}},n.exports=e.default},268:function(n,e,l){"use strict";l.r(e);var t=l(14),i=l.n(t);for(var r in t)"default"!==r&&function(n){l.d(e,n,function(){return t[n]})}(r);var a=l(130),u=l(0),s=!1;var o=function(n){s||l(668)},d=Object(u.a)(i.a,a.a,a.b,!1,o,null,null);d.options.__file="src/docs/pages/component/breadcrumbs/index.vue",e.default=d.exports},269:function(n,e,l){"use strict";var t=r(l(1)),i=r(l(268));function r(n){return n&&n.__esModule?n:{default:n}}new t.default({el:"#root",render:function(n){return n(i.default)}})},668:function(n,e){}});