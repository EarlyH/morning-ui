!function(e){function n(n){for(var i,d,m=n[0],o=n[1],c=n[2],u=0,p=[];u<m.length;u++)d=m[u],a[d]&&p.push(a[d][0]),a[d]=0;for(i in o)Object.prototype.hasOwnProperty.call(o,i)&&(e[i]=o[i]);for(l&&l(n);p.length;)p.shift()();return r.push.apply(r,c||[]),t()}function t(){for(var e,n=0;n<r.length;n++){for(var t=r[n],i=!0,m=1;m<t.length;m++){var o=t[m];0!==a[o]&&(i=!1)}i&&(r.splice(n--,1),e=d(d.s=t[0]))}return e}var i={},a={16:0};var r=[];function d(n){if(i[n])return i[n].exports;var t=i[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,d),t.l=!0,t.exports}d.m=e,d.c=i,d.d=function(e,n,t){d.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},d.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},d.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return d.d(n,"a",n),n},d.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},d.p="/";var m=window.webpackJsonp=window.webpackJsonp||[],o=m.push.bind(m);m.push=n,m=m.slice();for(var c=0;c<m.length;c++)n(m[c]);var l=o;r.push([253,0]),t()}({1:function(e,n){e.exports=Vue},122:function(e,n,t){"use strict";t.d(n,"a",function(){return i}),t.d(n,"b",function(){return a});var i=function(){var e=this.$createElement,n=this._self._c||e;return n("doc-component",{attrs:{page:this.page,hasPadding:!0}},[n("script",{attrs:{type:"text/markdown"}},[this._v('\n# 日期时间选择器 `<ui-datetimepicker>`\n\n<doc-component-status page="datetimepicker"></doc-component-status>\n\n[[[开始]]]\n\n定义日期时间选择器。\n\n#### 使用\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间"></ui-datetimepicker>\n</div>\n:::\n\n#### 自定义日期时间格式\n\n日期时间选择器允许用户自定日期时间格式，使用中文时间：\n    \n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" format="YYYY年MM月DD日 HH点mm分ss秒" default-value="2018年03月23日 18点10分18秒"></ui-datetimepicker>\n</div>\n:::\n\n更多自定义格式见：[format配置](/component/datetimepicker.html#format)。\n\n#### 范围日期时间选择\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :is-range="true"></ui-datetimepicker>\n</div>\n:::\n\n[[[形态]]]\n\n:::preset/html\nformStatus\n---\nuikey:datetimepicker\nstatusDefaultValue:\'2018-03-23 18:10:18\'\nstatusMoreAttr::date="+new Date(\'2018-03-23 18:10:18\')"\n:::\n\n[[[配置]]]\n\n:::preset/html\nformConfigTable\n---\n|[date](#date)|日历所在的日期，日历将会切换到`date`所在的月份|时间戳|Number|`+new Date()`|\n|[format](#format)|格式化展示的日期时间|日期时间格式化字符串(支持日期占位符见下方的演示)|String|`\'YYYY-MM-DD\'`|\n|[align](#align)|日期时间对齐方式|`\'left\'` : 左对齐<br>`\'center\'` : 居中对齐<br>`\'right\'` : 右对齐|String|`\'left\'`|\n|[quick-pick](#quick-pick)|显示快速选择项，这个配置是一个数组，数组中的每一项都是一个快速选择项目。<br><br>数组项支持两种类型：<br><br>__关键词__ ：支持字符串格式的快速选择关键词。<br><br>未开启`is-range`情况下包括：`今天`、`昨天`、`明天`、`n 秒前`、`n 分钟前`、`n 小时前`、`n 天前`、`n 周前`、`n 月前`、`n 年前`、`n 秒后`、`n 分钟后`、`n 小时后`、`n 天后`、`n 周后`、`n 月后`、`n 年后`(需要注意`n`后面有空格)，例如：`2 天前`、`3 周前`。<br><br>开启`is-range`情况下包括：`本周`、`本月`、`今年`、`最近 n 秒`、`最近 n 分钟`、`最近 n 小时`、`最近 n 天`、`最近 n 周`、`最近 n 月`、`最近 n 年`、`未来 n 秒`、`未来 n 分钟`、`未来 n 小时`、`未来 n 天`、`未来 n 周`、`未来 n 月`、`未来 n 年`(需要注意`n`前后有空格)，例如：`未来 2 周`、`最近 3 月`。<br><br>__时间设置__：是一个对象。<br><br>未开启`is-range`情况下包含`name`和`pick`两个属性。<br>`name`是快速选择项展现的名称。<br>`pick`支持`数字`或`日期对象`。若`pick`是`数字`则代表相对秒数，会选中当前日期时间和`pick`相加后的日期时间，所以`pick`是负数代表过去的日期时间，正数则代表未来的日期时间。若`pick`是`日期对象`则会选中`pick`所表示的日期时间。<br><br>开启`is-range`情况下包含`name`、`start`、`end`三个属性。<br>`name`是快速选择项展现的名称。<br>`start`和`end`是`日期对象`分别表示选择日期时间段的开始和结束。<br><br>你可以混合使用多种类型的快速选择项(详见[下面的示例](#quick-pick))。|字符串(关键词)<br>对象(时间设置)|Array|`[]`|\n|[date-selectable-range](#date-selectable-range)|可选日期时间范围，是一个连续的时间段，可以限制到的时分秒，若不设置则不限。这是一个数组，支持以下格式：<br><br>`[开始日期, 结束日期]`: 指定单个可选范围<br>`[[开始日期1, 结束日期1], [开始日期2, 结束日期2]]`: 指定多个可选范围<br><br>可选日期将大于等于`开始日期`，小于等于`结束日期`。<br><br>`开始日期`和`结束日期`均为日期字符串需要符合`format`配置的日期格式。|日期范围数组|Array|`undefined`|\n|[time-selectable-range](#time-selectable-range)|可选时间范围，若不设置则不限。这是一个数组，支持以下格式：<br><br>`[开始时间, 结束时间]`: 指定单个可选范围<br><br>可选时间将大于等于`开始时间`，小于等于`结束时间`。<br><br>`开始时间`和`结束时间`均为时间字符串需要符合`format`配置的时间格式。<br><br>此配置用于限制每天可选的时间范围(仅支持一个范围)，若需要限制一个时间段请使用`date-selectable-range`配置。<br><br>如同时配置了`date-selectable-range`则取可选范围的交集。|时间范围数组|Array|`undefined`|\n|[is-range](#is-range)|选择日期时间区间，开启后可以选在一个日期时间段|`true`<br>`false`|Boolean|`false`|\n|[separator](#separator)|日期时间区间选择时中间的分隔内容，只有开启`is-range`才有效|分隔字符串|String|`\'至\'`|\n|[separator-type](#separator-type)|日期时间区间选择时中间的分隔内容的展现类型|`\'block\'`：块状<br>`\'inline\'`：行内|String|`\'block\'`|\n|[start-name](#start-name)|日期时间区间选择时`开始日期时间`表单显示的名称，若设为`false`则显示`form-name`，只有开启`is-range`才有效|任意字符串<br>`false`:显示`form-name`|String<br>Boolean|`\'开始日期时间\'`|\n|[end-name](#end-name)|日期时间区间选择时`结束日期时间`表单显示的名称，若设为`false`则显示`form-name`，只有开启`is-range`才有效。若设置了`hide-name`则不会显示|任意字符串`false`:显示`form-name`|String<br>Boolean|`\'结束日期时间\'`|\n:::\n\n:::preset/html\nformConfigDemo\n---\nuikey:datetimepicker\nconfigDefaultValue:\'2018-03-23 18:10:18\'\nconfigMoreAttr::date="+new Date(\'2018-03-23 18:10:18\')"\n:::\n\n#### date\n\n:::democode/html\n<div style="width:300px">\n    <ui-datetimepicker :date="+new Date(\'2018-03-23\')"></ui-datetimepicker>\n</div>\n:::\n\n#### format\n    \n`format`允许自定义组件展示的日期时间格式，支持以下占位符：\n\n|单位|占位符|示例|\n|-|-|-|\n|年份|YY|00, 01, ..., 99|\n||YYYY|1900, 1901, ..., 2099|\n|季度|Q|1, 2, 3, 4|\n||Qo|1st, 2nd, 3rd, 4th|\n|月份|M|1, 2, ..., 12|\n||Mo|1st, 2nd, ..., 12th|\n||MM|01, 02, ..., 12|\n||MMM|Jan, Feb, ..., Dec|\n||MMMM|January, February, ..., December|\n|一月中第几天|D|1, 2, ..., 31|\n||Do|1st, 2nd, ..., 31st|\n||DD|01, 02, ..., 31|\n|一周中第几天|d|0, 1, ..., 6|\n||do|0th, 1st, ..., 6th|\n||dd|Su, Mo, ..., Sa|\n||ddd|Sun, Mon, ..., Sat|\n||dddd|Sunday, Monday, ..., Saturday|\n|一年中第几天|DDD|1, 2, ..., 366|\n||DDDo|1st, 2nd, ..., 366th|\n||DDDD|001, 002, ..., 366|\n|上午/下午|A|AM, PM|\n||a|am, pm|\n||aa|a.m., p.m.|\n|小时|H|0, 1, ... 23|\n||HH|00, 01, ... 23|\n||h|0, 1, ... 12|\n||hh|00, 01, ... 12|\n|分钟|mm|00, 01, ... 59|\n||m|0, 1, ... 59|\n|秒|ss|00, 01, ... 59|\n||s|0, 1, ... 59|\n\n采用`|`分隔日期时间：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" format="YYYY | MM | DD | HH | mm | ss" default-value="2018 | 03 | 23 | 18 | 10 | 08"></ui-datetimepicker>\n</div>\n:::\n\n同时显示多种日期时间格式(显示多个日期时，最后一个优先级最高)：\n\n:::democode/html\n<div style="width:400px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" format="YYYY-MM-DD HH:mm:ss | HH:m:s, MMM DD, YYYY" default-value="2018-03-23 18:10:08 | 18:10:8, Mar 23, 2018"></ui-datetimepicker>\n</div>\n:::\n\n#### align\n\n居中对齐：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" default-value="2018-03-23 18:10:18" align="center"></ui-datetimepicker>\n</div>\n:::\n\n右对齐：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" default-value="2018-03-23 18:10:18" align="right"></ui-datetimepicker>\n</div>\n:::\n\n#### quick-pick\n    \n你可以通过预设的关键词来设置日期快速选择项：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :quick-pick="[\'30 秒前\', \'5 分钟前\', \'1 小时前\', \'今天\', \'昨天\', \'2 天前\', \'3 天前\', \'1 周前\', \'1 月前\', \'1 年前\']"></ui-datetimepicker>\n</div>\n:::\n\n未来的时间也可以设置：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :quick-pick="[\'30 秒后\', \'5 分钟后\', \'1 小时后\', \'明天\', \'3 天后\', \'3 周后\', \'3 月后\', \'1 年后\']"></ui-datetimepicker>\n</div>\n:::\n\n也可以通过选中日期时间相对与现在的秒数(正数为未来，负数为过去)来设置：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :quick-pick="[{name: \'一分钟后\', pick: 60}, {name: \'半小时前\', pick: -1800}, {name: \'今天\', pick: 0}, {name: \'明天\', pick: 86400}]"></ui-datetimepicker>\n</div>\n:::\n\n也可以通过选中日期的绝对值来设置：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :quick-pick="[{name: \'生日派对\', pick: new Date(\'2018-3-23 19:00:00\')}]"></ui-datetimepicker>\n</div>\n:::\n\n配合`is-range`使用时：\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期" :quick-pick="[\'本周\', \'本月\', \'今年\', \'最近 30 秒\', \'最近 10 分钟\', \'未来 5 分钟\', \'最近 1 小时\', \'最近 7 天\', \'未来 7 天\', \'最近 1 周\', \'最近 2 月\', \'未来 3 年\', {name: \'2015-2017\', start: new Date(\'2015-01-01 00:00:00\'), end: new Date(\'2017-12-31 23:59:59\')}]" is-range></ui-datetimepicker>\n</div>\n:::\n\n#### date-selectable-range\n\n设置单个可选范围(2018-03-08至2018-03-23)：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" :date-selectable-range="[\'2018-03-08 00:00:00\', \'2018-03-23 00:00:00\']"></ui-datetimepicker>\n</div>\n:::\n\n设置具体时间(2018-03-08 12:30:00至2018-03-23 20:59:59)：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" :date-selectable-range="[\'2018-03-08 12:30:00\', \'2018-03-23 20:59:59\']"></ui-datetimepicker>\n</div>\n:::\n\n设置多个可选范围(2018-02-10至2018-02-20, 2018-02-20至2018-03-02, 2018-03-15至2018-03-25, 2018-03-20至2018-03-28, 2018-04-02至2018-04-05)：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" :date-selectable-range="[[\'2018-02-10 00:00:00\', \'2018-02-20 00:00:00\'], [\'2018-02-23 00:00:00\', \'2018-03-02 00:00:00\'], [\'2018-03-15 12:30:00\', \'2018-03-25 20:00:00\'], [\'2018-03-20 00:00:00\', \'2018-03-28 18:00:00\'], [\'2018-04-02 00:00:00\', \'2018-04-05 00:00:00\']]"></ui-datetimepicker>\n</div>\n:::\n\n在使用`selectable-range`的同时开启`is-range`：\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" :date-selectable-range="[\'2018-03-08 00:00:00\', \'2018-03-23 00:00:00\']" is-range></ui-datetimepicker>\n</div>\n:::\n\n如果`default-value`超过`selectable-range`范围：\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" :date-selectable-range="[\'2018-03-08 00:00:00\', \'2018-03-23 00:00:00\']" :default-value="[\'2018-03-04 12:00:00\', \'2018-03-29 12:00:00\']" is-range></ui-datetimepicker>\n</div>\n:::\n\n#### time-selectable-range\n\n设置每天可选时间为(8:00-18:00)：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" :time-selectable-range="[\'08:00:00\', \'18:00:00\']"></ui-datetimepicker>\n</div>\n:::\n\n配合`date-selectable-range`使用时可选时间需要符合两个条件的限制：\n\n:::democode/html\n<div style="width:300px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" :date-selectable-range="[\'2018-03-08 12:30:00\', \'2018-03-23 20:00:00\']" :time-selectable-range="[\'08:00:00\', \'18:00:00\']"></ui-datetimepicker>\n</div>\n:::\n\n#### is-range\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :is-range="true"></ui-datetimepicker>\n</div>\n:::\n\n在开启`is-range`的情况下设置`default-value`:\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :date="+new Date(\'2018-03-23\')" :is-range="true" :default-value="[\'2018-03-10 08:00:00\', \'2018-03-20 21:30:30\']"></ui-datetimepicker>\n</div>\n:::\n\n#### separator\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :is-range="true" separator="~"></ui-datetimepicker>\n</div>\n:::\n\n#### separator-type\n\n`inline`的分隔(一般配合`align`居中一起使用)：\n\n:::democode/html\n<div style="width:400px;">\n    <ui-datetimepicker form-name="日期时间" :is-range="true" separator="~" separator-type="inline" align="center"></ui-datetimepicker>\n</div>\n:::\n\n#### start-name\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :is-range="true" start-name="发车日期"></ui-datetimepicker>\n</div>\n:::\n\n若设为`false`则显示`form-name`：\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :is-range="true" :start-name="false"></ui-datetimepicker>\n</div>\n:::\n\n#### end-name\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :is-range="true" end-name="到达日期"></ui-datetimepicker>\n</div>\n:::\n\n若设为`false`则显示`form-name`：\n\n:::democode/html\n<div style="width:460px;">\n    <ui-datetimepicker form-name="日期时间" :is-range="true" :end-name="false"></ui-datetimepicker>\n</div>\n:::\n\n[[[方法]]]\n\n:::preset/html\nformMethod\n---\nuikey:datetimepicker\nmethodValue:\'2018-03-23 12:13:14\'\nmethodDefaultValue:\'2018-03-23 12:13:14\'\n:::\n\n[[[事件]]]\n\n:::preset/html\nformEvent\n---\nuikey:datetimepicker\neventValue:\'2018-03-23 12:13:14\'\n:::\n\n[[[表单值]]]\n\n#### 值类型\n\n- `Array` : 数组\n- `String` : 字符串(按`format`配置格式化)\n\n#### 值过滤\n\n- 若是范围日期时间选择(开启`isRange`配置)，则数值是一个字符串，则将数值转换成数组，该字符串作为第一项       \n- 若是单一日期时间选择(未开启`isRange`配置)，且数值是一个数组，则取第一项\n- 若数值的类型是字符串则检测字符串的日期时间格式是否符合`format`配置，若不符合尝试转换成符合的格式，若无法转换则转换成`1971-01-01 00:00:00`的符合`format`的日期时间\n- 若使用了`date-selectable-range`或`time-selectable-range`配置，且数值对应的日期时间不在范围内，则会转换成最近的范围内日期时间\n- 若数值的类型是一个数组，且数组长度为`0`则转换为`undefined`\n- 若数值的类型是一个数组，且数组长度大于`2`，则过滤多余的项目，只保留两项\n- 若数值的类型是一个数组，且数组长度大于`0`且小于`3`，会过滤数组中所有不是字符串类型的项目，然后按照第三条规则，对所有字符串项目进行过滤\n- 若数值的类型是一个数组，且第二项代表的日期时间大于第一项，则对换数组的两项\n\n#### 值格式\n\n若是单一日期时间选择，则是日期时间字时间符串(符合`format`的格式化规则)\n若是范围日期时间选择，则是长度为2的数组，数组中第一项是开始日期时间的日期时间字符串(符合`format`的格式化规则)，数组中第二项是结束日期时间的日期时间字符串(符合`format`的格式化规则)。\n\n#### 默认值\n\n`undefined`\n\n#### 输入/输出示例\n\n:::repeat/html\nformValueType:datetimepicker\n---\n<div>\n    <p>{$valueType}类型</p>\n    <div style="width:300px;">\n        <ui-datetimepicker ref="demoType{$valueType}"></ui-datetimepicker>\n    </div>\n    <br>\n    <ui-link js="window.morning.findVM(\'demoType{$valueType}\').set({$&valueContent})">设置{$valueType}类型</ui-link>\n    <ui-link js="alert(window.morning.findVM(\'demoType{$valueType}\').getJson())">获取表单JSON值</ui-link>\n</div>\n<br>\n<br>\n:::\n\n[[[源码]]]\n\n<iframe src="/report/coverage/lib/components/datetimepicker/index.vue.html" name="codeFrame" frameborder="0" onload="this.height=codeFrame.document.body.scrollHeight"></iframe>\n\n')])])},a=[];i._withStripped=!0},19:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i,a=t(2),r=(i=a)&&i.__esModule?i:{default:i};n.default={data:function(){return{page:"datetimepicker"}},components:{"doc-component":r.default}},e.exports=n.default},252:function(e,n,t){"use strict";t.r(n);var i=t(19),a=t.n(i);for(var r in i)"default"!==r&&function(e){t.d(n,e,function(){return i[e]})}(r);var d=t(122),m=t(0),o=!1;var c=function(e){o||t(622)},l=Object(m.a)(a.a,d.a,d.b,!1,c,null,null);l.options.__file="src/docs/pages/component/datetimepicker/index.vue",n.default=l.exports},253:function(e,n,t){"use strict";var i=r(t(1)),a=r(t(252));function r(e){return e&&e.__esModule?e:{default:e}}new i.default({el:"#root",render:function(e){return e(a.default)}})},622:function(e,n){}});