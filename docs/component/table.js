!function(n){function e(e){for(var l,a,s=e[0],c=e[1],d=e[2],m=0,u=[];m<s.length;m++)a=s[m],i[a]&&u.push(i[a][0]),i[a]=0;for(l in c)Object.prototype.hasOwnProperty.call(c,l)&&(n[l]=c[l]);for(r&&r(e);u.length;)u.shift()();return o.push.apply(o,d||[]),t()}function t(){for(var n,e=0;e<o.length;e++){for(var t=o[e],l=!0,s=1;s<t.length;s++){var c=t[s];0!==i[c]&&(l=!1)}l&&(o.splice(e--,1),n=a(a.s=t[0]))}return n}var l={},i={72:0},o=[];function a(e){if(l[e])return l[e].exports;var t=l[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=n,a.c=l,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var l in n)a.d(t,l,function(e){return n[e]}.bind(null,l));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/";var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=e,s=s.slice();for(var d=0;d<s.length;d++)e(s[d]);var r=c;o.push([694,0]),t()}({1:function(n,e){n.exports=Vue},112:function(n,e,t){"use strict";t.r(e);var l=t(113),i=t.n(l);for(var o in l)"default"!==o&&function(n){t.d(e,n,function(){return l[n]})}(o);e.default=i.a},113:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var l,i=t(2),o=(l=i)&&l.__esModule?l:{default:l};e.default={data:function(){return{page:"table"}},created:function(){window.demodata={list:[{name:"Tim Boelaars",age:20,gender:"male",job:"driver"},{name:"Andrew Colin Beck",age:41,gender:"female",job:"engineer"},{name:"Gustavo Zambelli",age:23,gender:"male",job:"teacher"},{name:"Victor Erixon",age:15,gender:"female",job:"doctors"},{name:"Shaun Moynihan",age:27,gender:"female",job:"driver"},{name:"Emir Ayouni",age:21,gender:"male",job:"gardener"}],biglist:[{name:"Tim Boelaars",age:20,gender:"male",job:"driver",country:"England",height:187,weight:160},{name:"Andrew Colin Beck",age:41,gender:"female",job:"engineer",country:"United States",height:165,weight:116},{name:"Gustavo Zambelli",age:23,gender:"male",job:"teacher",country:"Thailand",height:178,weight:132},{name:"Victor Erixon",age:15,gender:"female",job:"doctors",country:"United States",height:159,weight:100},{name:"Shaun Moynihan",age:27,gender:"female",job:"driver",country:"England",height:163,weight:116},{name:"Emir Ayouni",age:21,gender:"male",job:"gardener",country:"United States",height:173,weight:122}]}},components:{"doc-component":o.default}},n.exports=e.default},368:function(n,e,t){"use strict";var l=function(){var n=this.$createElement,e=this._self._c||n;return e("doc-component",{attrs:{page:this.page,hasPadding:!0}},[e("script",{attrs:{type:"text/markdown"}},[this._v("\n# 表格 `<ui-table>`\n\n<doc-component-status page=\"table\"></doc-component-status>\n\n[[[开始]]]\n\n定义一个表格，这是一个块级元素。\n\n:::vue\n@name:使用\n---\n#demo\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', job : 'doctors'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', job : 'driver'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', job : 'gardener'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单列控制\n---\n#demo\n>desc\n`ui-table`通过`col-set`配置，可以设置单列的：\n<br><br>\n- 宽度\n- 最小宽度\n- 最大宽度\n- 样式\n- 禁用状态\n- 对齐方式\n- 是否是标题列(标题列将被聚合在一起)\n<br><br>\n更多单列控制见：[col-set配置](/component/table.html#col-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age', minwidth : '150px'},\n            {col : 'gender', name : 'Gender', disabled : true},\n            {col : 'job', name : 'Job', align : 'right', style : 'success'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单行控制\n---\n#demo\n>desc\n`ui-table`通过`row-set`配置，可以设置行的：\n<br><br>\n- 样式\n- 禁用状态\n- 对齐方式\n<br><br>\n更多单行控制见：[row-set配置](/component/table.html#row-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 1, align : 'left'},\n            {row : 2, style : 'warning'},\n            {row : 4, disabled : true}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单元格控制\n---\n#demo\n>desc\n`ui-table`通过`cell-set`配置，可以设置单元格的：\n<br><br>\n- 样式\n- 禁用状态\n- 对齐方式\n<br><br>\n更多单元格控制见：[cell-set配置](/component/table.html#cell-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', style : 'success'},\n            {row : 2, col : 'gender', disabled : true},\n            {row : 3, col : 'job', style : 'danger'},\n            {row : 4, col : 'job', align : 'left'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:自定义表头内容\n---\n#demo\n>desc\n通过`slot=\"header\"`可以自定义表头内容。\n>tpl\n<ui-table :list=\"window.demodata.list\">\n    <div slot=\"header\">\n        <div style=\"display:inline-block;width:160px\">\n            <ui-textinput size=\"xs\" inside-name=\"填写内容...\"></ui-textinput>\n        </div>\n        <ui-btn size=\"xs\">按钮1</ui-btn>\n        <ui-btn size=\"xs\">按钮2</ui-btn>\n    </div>\n</ui-table>\n---\n#demo\n>desc\n配合`title`和`export-csv`一起使用。\n>tpl\n<ui-table :list=\"window.demodata.list\" title=\"自定义表头内容\" export-csv>\n    <div slot=\"header\">\n        <ui-btn size=\"m\">按钮1</ui-btn>\n    </div>\n</ui-table>\n:::\n\n:::vue\n@name:实现搜索功能\n---\n#demo\n>desc\n使用自定义表头实现搜索功能。\n>tpl\n<ui-table ref=\"demo8\" :list=\"list\">\n    <div slot=\"header\">\n        <div style=\"display:inline-block;width:160px\">\n            <ui-textinput ref=\"demo8input\" size=\"xs\" inside-name=\"关键词...\"></ui-textinput>\n        </div>\n        <ui-btn size=\"xs\" @emit=\"search\">搜索</ui-btn>\n    </div>\n</ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        search : function () {\n\n            let key = this.$refs.demo8input.get();\n\n            if (key) {\n\n                let result = [];\n\n                for (let item of window.demodata.list) {\n\n                    if (Object.values(item).join().search(key) !== -1) {\n\n                        result.push(item);\n\n                    }\n                \n                }\n\n                this.list = result;\n\n            } else {\n\n                this.list = window.demodata.list;\n\n            }\n        }\n    }\n}\n:::\n\n:::vue\n@name:单元格内嵌HTML\n---\n#demo\n>desc\n表格数据列表支持传入HTML内容，在渲染时这些HTML也会被渲染。\n<br>\n列标题同样也支持HTML。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        colset : [\n            {col : 'name', name : '<span class=\"mo-co-font-theme\">Name</span>'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'},\n            {col : 'action', name : 'Action'}\n        ],\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<a href=\"#\">发送</a>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<a href=\"#\">发送</a>'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', action : '<a href=\"#\">发送</a>'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单元格内嵌Vue组件\n---\n#demo\n>desc\n表格数据列表的内容会通过Vue渲染，所以你可以使用Vue组件。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    }\n}\n---\n#demo\n>desc\n但需要注意的是由于在`list`配置中通过字符串模板的形式使用，所以在模板中的组件无法直接使用上下文的`props`、`data`、`methods`等属性或方法。\n<br><br>\n为此表格组件通过`context`来帮你精确定位上下文。\n>tpl\n<div>\n    <ui-table ref=\"demoPropsData\" :list=\"list\"></ui-table>\n    <ui-link js=\"this.btntext = '发送至邮箱'\">修改btntext</ui-link>\n</div>\n>script\n{\n    data : {\n        btntext : '发送',\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    }\n}\n---\n#demo\n>desc\n`methods`也同样可以通过`context`访问上下文。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\" @emit=\"context.send(0);\">第一个发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\" @emit=\"context.send(1);\">第二个发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    },\n    methods : {\n        send : function (id) {\n            alert(`${this.list[id].name}发送成功!`);\n        }\n    }\n}\n---\n#demo\n>desc\n由于表格中使用的Vue模板是动态生成的，所以如果需要使用一些依赖元素绑定的组件（比如：`ui-tip`），则需要将这些组件也写到模板中。\n<br><br>\n>tpl\n<div>\n    <ui-table :list=\"list\"></ui-table>\n    <ui-tip target=\"#demo-tip-1\">这个提示不会显示</ui-tip>\n</div>\n>script\n{\n    data : {\n        list : [\n            {fisrt : '<span id=\"demo-tip-1\">第一个提示不会显示</span>', second : '<span id=\"demo-tip-2\">第二个提示会显示</span><ui-tip target=\"#demo-tip-2\">这个提示可以正常显示</ui-tip>', gender : 'male'},\n        ]\n    }\n}\n:::\n\n:::vue\n@name:无数据\n---\n#demo\n>desc\n当表格无数据时会显示提示信息。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : []\n    }\n}\n---\n#demo\n>desc\n如果设置了表头，表头仍然会显示。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv title=\"无数据演示\"></ui-table>\n>script\n{\n    data : {\n        list : [],\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n[[[形态]]]\n\n#### 支持\n\n|类型|支持|默认|\n|-|-|-|\n|尺寸|`xs` / `s` / `m` / `l` / `xl`|`m`|\n|色彩|全部|`light-gray`|\n|状态|不支持|-|\n\n<a href=\"/guide/status.html\">查看形态文档</a>\n\n:::vue\n@name:尺寸\n---\n#renderer\n>name\nsize-repeat\n>rules\nxl,l,m,s,xs\n>tpl\n<br><br>\n<ui-table :list=\"window.demodata.list\" size=\"{$sizeKey}\" title=\"{$sizeName}的表格\" export-csv></ui-table>\n:::\n\n:::vue\n@layout:color\n---\n<br>\n<p>{$colorName}</p>\n<ui-table :list=\"window.demodata.list\" color=\"{$colorKey}\"></ui-table>\n:::\n\n[[[配置]]]\n\n:::vue\n@name:list\n---\n#config\n>conf-desc\n表格数据，这是一个数组，数组中每个对象是一行。对象的每个键是一列，键名是列的KEY，键值是列的数值。<br><br>表格的列是对象中所有键的合集，若某项缺少键，对应的单元格内会显示为`empty-cell`的内容。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>desc\n用于设置表格的数据，`list`数组内每一个对象是一行，对象的每个键是一列。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', job : 'doctors'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', job : 'driver'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', job : 'gardener'}\n        ]\n    }\n}\n---\n#demo\n>desc\n表格的列是`list`中所有对象键的合集，若`list`中对象的键是不完全。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', job : 'doctors'},\n            {name : 'Shaun Moynihan'},\n            {}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:empty-cell-value\n---\n#config\n>conf-desc\n如果某个单元格的内容是`undefined`，则设置的默认值。\n>conf-accept\n字符串\n>conf-type\nString\n>conf-default\n`'-'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" empty-cell-value=\"空\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', job : 'doctors'},\n            {name : 'Shaun Moynihan'},\n            {}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:title\n---\n#config\n>conf-desc\n表格的标题。\n>conf-accept\n标题字符串\n>conf-type\nString\n>conf-default\n`undefined`\n---\n#demo\n>tpl\n<ui-table :list=\"window.demodata.list\" title=\"这里是表格标题\"></ui-table>\n:::\n\n:::vue\n@name:zebra-pattern\n---\n#config\n>conf-desc\n表格斑马线样式。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n关闭斑马线样式。\n>tpl\n<ui-table :list=\"window.demodata.list\" :zebra-pattern=\"false\"></ui-table>\n:::\n\n:::vue\n@name:vertical-border\n---\n#config\n>conf-desc\n显示表格内的竖直边框。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n隐藏表格内竖直边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :vertical-border=\"false\"></ui-table>\n:::\n\n:::vue\n@name:horizontal-border\n---\n#config\n>conf-desc\n显示表格内的横向边框。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n隐藏表格内横向边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :horizontal-border=\"false\"></ui-table>\n---\n#demo\n>desc\n隐藏表格内所有边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :vertical-border=\"false\" :horizontal-border=\"false\"></ui-table>\n:::\n\n:::vue\n@name:align\n---\n#config\n>conf-desc\n列的对齐方式，这是单个表格的全局设置，可以使用`col-set`来单独设置某一列的对齐方式。\n>conf-accept\n`'left'`: 左对齐<br>`'center'`: 居中对齐<br>`'right'`: 右对齐\n>conf-type\nString\n>conf-default\n`'center'`\n---\n#demo\n>desc\n列内容右对齐。\n>tpl\n<ui-table :list=\"window.demodata.list\" align=\"right\"></ui-table>\n---\n#demo\n>desc\n列内容左对齐。\n>tpl\n<ui-table :list=\"window.demodata.list\" align=\"left\"></ui-table>\n:::\n\n:::vue\n@name:show-col-name\n---\n#config\n>conf-desc\n在标题行显示列的名称，需要先在`col-set`中设置每列的名称。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:fixed-title-col\n---\n#config\n>conf-desc\n标题列的位置，可以设置左侧或右侧。对于列数较多的表格，可以使用固定标题列。\n>conf-accept\n`'left'`: 位于左侧，不固定<br>`'right'`: 位于右侧，不固定<br>`'left-fixed'`: 位于左侧，固定<br>`'right-fixed'`: 位于右侧，固定\n>conf-type\nString\n>conf-default\n`'left'`\n---\n#demo\n>desc\n此配置需要先在`col-set`中设置标题列。\n<br><br>\n将标题列放到右侧。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在左侧。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left-fixed\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在右侧，且导出的表格的列顺序也一样。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right-fixed\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:fixed-title-row\n---\n#config\n>conf-desc\n固定标题行。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table style=\"height: 200px;\" :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" :fixed-title-row=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n配合`fixed-title-col`一起使用。\n>tpl\n<ui-table style=\"height: 200px;\" :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" :fixed-title-row=\"true\" fixed-title-col=\"left-fixed\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', minwidth : '300px'},\n            {col : 'job', name : 'Job', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:title-col-width\n---\n#config\n>conf-desc\n设置标题列的绝对宽度，请谨慎使用此配置，因为此宽度优先于其他配置的宽度。<br>若此配置为`0`，则不会启用。<br><br>此配置一般用来调整标题列与表格整体的占比。\n>conf-accept\n宽度数值(单位为px，无需添加单位)\n>conf-type\nNumber\n>conf-default\n`0`\n---\n#demo\n>desc\n将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'},\n            {col : 'country', name : 'Country'},\n            {col : 'height', name : 'Height'},\n            {col : 'weight', name : 'Body weight'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在左侧并将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left-fixed\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在右侧并将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right-fixed\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:col-set\n---\n#config\n>conf-desc\n列设置可以用来控制单独的一列。\n<br><br>\n`col-set`用于列控制，是一个数组，数组的每项都是一个配置对象。\n<br><br>\n配置对象包含下面这些属性，其中`col`用来定位需要设置列的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|col|需要设置列的KEY|列的KEY(`list`配置中设置)|String|`undefined`|\n|name|列的名称，如果开启`show-col-name`配置，名称会显示在标题行|名称|String|`undefined`|\n|width|列的宽度，此配置会改变列在宽度分配时的权重，但不一定完全符合设置的宽度值，如果需要最小最大宽度使用`minwidth`和`maxwidth`。<br>如果需要设置标题列的宽度请使用`title-col-width`配置。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|minwidth|列的最小宽度，注意列会尽可能遵循此值，但不是绝对一致的。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|maxwidth|列的最小宽度，注意列会尽可能遵循此值，但不是绝对一致的。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|style|设置列的色彩样式|[形态/颜色](/guide/status.html#颜色)中所有的颜色值|String|`undefined`|\n|disabled|是否展示列的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|列的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n|title|此列是否是标题列，根据`fixed-title-col`的设置所有的标题列会被放到最左或最右|`true`<br>`false`|Boolean|`false`|\n|hide|在表格中隐藏列，用于某些在`list`存在但不需要在展示的数据。列隐藏后在导出`.csv`文件时仍然会存在，如在导出`.csv`文件时也要排除，使用`col-set`配置的`export`属性来控制|`true`<br>`false`|Boolean|`false`|\n|export|导出`.csv`文件时，是否包含此列，若设为`false`此列不会被导出。一般包含行动区域的列会将此配置设为`false`|`true`<br>`false`|Boolean|`true`|\n|sort|开启单列排序，必需启用`show-col-name`才有效。多列排序需要启用`multi-sort`配置|`true`<br>`false`|Boolean|`false`|\n|pos|列的位置，这是一个数字，默认为0，表示按照数据输入的顺序。数值越大的列将会显示的越后面，数值也可以为负数。|位置数值|Number|`0`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nname\n>desc\n通过`name`及`show-col-name`设置标题行。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nname\n>desc\n标题行结合表头。\n>tpl\n<ui-table :list=\"list\" title=\"表名\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nwidth、minwidth、maxwidth\n>desc\n设置列的`width` 、 `minwidth` 、 `maxwidth`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', maxwidth : '50px'},\n            {col : 'age', name : 'Age', width : '150px'},\n            {col : 'gender', name : 'Gender', minwidth : '150px'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nstyle\n>desc\n设置指定列的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', style : 'primary'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n将单元格设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', disabled : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来单独设置某一列的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', align : 'right'},\n            {col : 'age', name : 'Age', align : 'left'},\n            {col : 'gender', name : 'Gender', align : 'center'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`来置标题列，标题列会被放置在最左或最右（通过`fixed-title-col`设置）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`设置标题列之后，导出的`csv`的列顺序也会保持一致。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`设置标题列之后，若未开启`show-col-name`，导出的`csv`不会包含标题行。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nhide\n>desc\n在表格中隐藏`Job`和`Gender`列，同时不导出`Gender`列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', hide : true, export : false},\n            {col : 'job', name : 'Job', hide : true}\n        ]\n    }\n}\n---\n#demo\n>title\nexport\n>desc\n不导出`Gender`列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', export : false},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsort\n>desc\n通过`sort`字段可以开启单列排序(多列排序需要开启`multi-sort`配置)，并且导出的`csv`也是排序之后的顺序。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsort\n>desc\n标题列也可以使用`sort`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, title : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\npos\n>desc\n将`Name`的位置放到第三列，将`Age`放到第四列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', pos : 1},\n            {col : 'age', name : 'Age', pos : 2},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:row-set\n---\n#config\n>conf-desc\n单行设置可以用来控制一行。\n<br><br>\n`row-set`用于行控制，是一个数组，数组的每项都是一个配置对象，用来设置单行。\n<br><br>\n配置对象包含下面这些属性，其中`row`用来定位需要设置行的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|row|需要设置的行数(从0开始，0表示标题行)|行数|Number|`undefined`|\n|style|设置行的色彩样式|[形态/颜色](/guide/status.html#颜色)中所有的颜色值|String|`undefined`|\n|disabled|是否展示行的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|行的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nstyle\n>desc\n设置指定行的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 0, style : 'success'},\n            {row : 2, style : 'warning'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n将单行设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :row-set=\"rowset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        rowset : [\n            {row : 1, disabled : true}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来设置单行的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 0, align : 'left'},\n            {row : 1, align : 'right'},\n            {row : 2, align : 'center'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:cell-set\n---\n#config\n>conf-desc\n单元格设置可以用来控制单个单元格。\n<br><br>\n`cell-set`用于单元格控制，是一个数组，数组的每项都是一个配置对象，用来设置单个单元格。\n<br><br>\n配置对象包含下面这些属性，其中`row`和`col`用来定位需要设置单元格的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|row|需要设置单元格的行数(从0开始，0表示标题行)|行数|Number|`undefined`|\n|col|需要设置单元格所在列的KEY|列的KEY(`list`配置中设置)|String|`undefined`|\n|style|设置单元格的色彩样式|[形态/颜色](/guide/status.html#颜色)中所有的颜色值|String|`undefined`|\n|disabled|是否展示单元格的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|单元格的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nstyle\n>desc\n设置指定单元格的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', style : 'success'},\n            {row : 2, col : 'age', style : 'warning'},\n            {row : 3, col : 'job', style : 'danger'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n设将单元格设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :cell-set=\"cellset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        cellset : [\n            {row : 1, col : 'age', disabled : true}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来单独设置单元格的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', align : 'left'},\n            {row : 1, col : 'age', align : 'right'},\n            {row : 2, col : 'age', align : 'center'},\n            {row : 3, col : 'age', align : 'left'},\n            {row : 4, col : 'age', align : 'right'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:export-csv\n---\n#config\n>conf-desc\n开启将表格导出csv文件的功能。<br><br>导出的表格单元格内容中若包含HTML，则会被过滤仅保留文本内容(若存在`<br>`则会被替换成换行符)。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:csv-name\n---\n#config\n>conf-desc\n导出csv文件的名称。\n>conf-accept\n文件名称(不需要加尾缀)\n>conf-type\nString\n>conf-default\n`undefined`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" export-csv csv-name=\"demo\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:multi-sort\n---\n#config\n>conf-desc\n支持多列排序，默认只支持单列排序。多列排序时会根据所选排序列的顺序进行多次排序。使用此配置前需要先通过`col-set`的指定排序列。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n使用`multi-sort`后设置多个排序列，当多个列进行排序时会按照先后顺序对表格进行多次排序。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name multi-sort export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender', sort : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:highlight-row\n---\n#config\n>conf-desc\n是否高亮行，开启后最后点击的行会被高亮，同时也可以通过`setHighlightRow()`方法来高亮指定行，同一时间只能高亮一行。\n<br><br>\n也可以通过`row-set`配置来实现类似的功能，区别在于此配置可以通过`getHighlightRow()`来获取最后点击行，从而实现单选的功能。\n<br>\n同时也可以通过`cleanHighlightRow()`来取消高亮最后点击行。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n开启此配置后，最后点击的行将被高亮。\n>tpl\n<ui-table :list=\"list\" highlight-row></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:multi-select\n---\n#config\n>conf-desc\n表格可多选（多选仅行可用）。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n开启此配置后，最后点击的行将被高亮。\n>tpl\n<ui-table :list=\"list\" multi-select></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n---\n#demo\n>desc\n开启`show-col-name`配置后，会展示全选的复选框。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-select show-col-name></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n开启`fixed-title-col`配置后，复选框也会固定到标题列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-select show-col-name fixed-title-col=\"left\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title: true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:no-hover-effect\n---\n#config\n>conf-desc\n是否显示鼠标`hover`时的效果。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :hover-effect=\"false\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:loading\n---\n#config\n>conf-desc\n表格是否处于数据加载状态。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :loading=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:loading-note\n---\n#config\n>conf-desc\n当表格处于数据加载状态时的提示内容。\n>conf-accept\n提示文案\n>conf-type\nString\n>conf-default\n`'数据加载中...'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :loading=\"true\" loading-note=\"请稍后\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n[[[方法]]]\n\n:::vue\n@name:getHighlightRow()\n---\n#method\n>method-desc\n获取高亮的行号（从`0`开始），需要开启`highlight-row`配置，否则返回`-1`。\n>method-return\n高亮的行号。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo1\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"alert(morning.findVM('demo1').getHighlightRow());\">获取高亮的行号</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:setHighlightRow(rowNum)\n---\n#method\n>method-desc\n高亮指定的行，需要开启`highlight-row`才生效。\n>method-args\n|rowNum|NO|需要高亮的行数|行数(从`0`开始)|`Number`|`undefined`|\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo3\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo3').setHighlightRow(1);\">高亮第二行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:cleanHighlightRow()\n---\n#method\n>method-desc\n清除高亮行，需要开启`highlight-row`配置才有效。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo2\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo2').cleanHighlightRow();\">清除高亮行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:getCheckedRows()\n---\n#method\n>method-desc\n获取选中的行号（从`0`开始），需要开启`multi-select`配置。\n>method-return\n选中的行号组成的数组。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo4\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"alert(morning.findVM('demo4').getCheckedRows().join(','));\">获取选中的行号</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n[[[事件]]]\n\n:::vue\n@name:list-change\n---\n#event\n>event-desc\n当表格数据变化后触发。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo2\" :list=\"list\" @list-change=\"echo\"></ui-table>\n    <br><br>\n    <ui-link js=\"morning.findVM('demo2').conf.list = window.demodata.biglist;\">重新设置表格数据</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function () {\n            console.log('demo2.console1', `list-change event!`);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-click\n---\n#event\n>event-desc\n当单元格被点击时触发。\n>event-args\n|rowNum|被点击单元格所在的行号(从`0`开始)|`Number`|\n|colKey|被点击单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo5\" :list=\"list\" @cell-click=\"echo\"></ui-table>\n    <br><br>\n    <p>点击单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo5.console1', `cell-click event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-enter\n---\n#event\n>event-desc\n当鼠标移入单元格时触发。\n>event-args\n|rowNum|鼠标移入单元格所在的行号(从`0`开始)|`Number`|\n|colKey|鼠标移入单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo6\" :list=\"list\" @cell-enter=\"echo\"></ui-table>\n    <br><br>\n    <p>鼠标移入单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo6.console1', `cell-enter event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-leave\n---\n#event\n>event-desc\n当鼠标移出单元格时触发。\n>event-args\n|rowNum|鼠标移出单元格所在的行号(从`0`开始)|`Number`|\n|colKey|鼠标移出单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo7\" :list=\"list\" @cell-leave=\"echo\"></ui-table>\n    <br><br>\n    <p>鼠标移出单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo7.console1', `cell-leave event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@layout:lifecycle-event\n---\ntable\n表格\n:::\n\n[[[源码]]]\n\n<iframe src=\"/report/coverage/lib/components/table/index.vue.html\" name=\"codeFrame\" frameborder=\"0\" onload=\"this.height=codeFrame.document.body.scrollHeight\"></iframe>\n\n")])])},i=[];l._withStripped=!0,t.d(e,"a",function(){return l}),t.d(e,"b",function(){return i})},694:function(n,e,t){"use strict";var l=o(t(1)),i=o(t(695));function o(n){return n&&n.__esModule?n:{default:n}}new l.default({el:"#root",render:function(n){return n(i.default)}})},695:function(n,e,t){"use strict";t.r(e);var l=t(368),i=t(112);for(var o in i)"default"!==o&&function(n){t.d(e,n,function(){return i[n]})}(o);var a=t(0),s=Object(a.a)(i.default,l.a,l.b,!1,null,null,null);s.options.__file="src/docs/pages/component/table/index.vue",e.default=s.exports}});