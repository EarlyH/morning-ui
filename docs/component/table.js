!function(n){function e(e){for(var o,l,r=e[0],c=e[1],s=e[2],u=0,m=[];u<r.length;u++)l=r[u],Object.prototype.hasOwnProperty.call(a,l)&&a[l]&&m.push(a[l][0]),a[l]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(n[o]=c[o]);for(d&&d(e);m.length;)m.shift()();return i.push.apply(i,s||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],o=!0,r=1;r<t.length;r++){var c=t[r];0!==a[c]&&(o=!1)}o&&(i.splice(e--,1),n=l(l.s=t[0]))}return n}var o={},a={71:0},i=[];function l(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=n,l.c=o,l.d=function(n,e,t){l.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},l.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},l.t=function(n,e){if(1&e&&(n=l(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)l.d(t,o,function(e){return n[e]}.bind(null,o));return t},l.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return l.d(e,"a",e),e},l.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},l.p="/";var r=window.webpackJsonp=window.webpackJsonp||[],c=r.push.bind(r);r.push=e,r=r.slice();for(var s=0;s<r.length;s++)e(r[s]);var d=c;i.push([248,0]),t()}({0:function(n,e){n.exports=Vue},11:function(n,e,t){"use strict";(function(n){var o=t(4),a=t(53),i="object"==typeof exports&&exports&&!exports.nodeType&&exports,l=i&&"object"==typeof n&&n&&!n.nodeType&&n,r=l&&l.exports===i?o.a.Buffer:void 0,c=(r?r.isBuffer:void 0)||a.a;e.a=c}).call(this,t(48)(n))},248:function(n,e,t){"use strict";t.r(e);var o=t(0),a=t.n(o),i=function(){var n=this.$createElement,e=this._self._c||n;return e("doc-component",{attrs:{page:this.page,hasPadding:!0}},[e("script",{attrs:{type:"text/markdown"}},[this._v("\n# 表格 `<ui-table>`\n\n<doc-component-status page=\"table\"></doc-component-status>\n\n[[[开始]]]\n\n定义一个表格，这是一个块级元素。\n\n:::vue\n@name:使用\n---\n#demo\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', job : 'doctors'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', job : 'driver'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', job : 'gardener'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单列控制\n---\n#demo\n>desc\n`ui-table`通过`col-set`配置，可以设置单列的：\n<br><br>\n- 宽度\n- 最小宽度\n- 最大宽度\n- 样式\n- 禁用状态\n- 对齐方式\n- 是否是标题列(标题列将被聚合在一起)\n<br><br>\n更多单列控制见：[col-set配置](/component/table.html#col-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age', minwidth : '150px'},\n            {col : 'gender', name : 'Gender', disabled : true},\n            {col : 'job', name : 'Job', align : 'right', style : 'success'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单行控制\n---\n#demo\n>desc\n`ui-table`通过`row-set`配置，可以设置行的：\n<br><br>\n- 样式\n- 禁用状态\n- 对齐方式\n<br><br>\n更多单行控制见：[row-set配置](/component/table.html#row-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 1, align : 'left'},\n            {row : 2, style : 'warning'},\n            {row : 4, disabled : true}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单元格控制\n---\n#demo\n>desc\n`ui-table`通过`cell-set`配置，可以设置单元格的：\n<br><br>\n- 样式\n- 禁用状态\n- 对齐方式\n<br><br>\n更多单元格控制见：[cell-set配置](/component/table.html#cell-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', style : 'success'},\n            {row : 2, col : 'gender', disabled : true},\n            {row : 3, col : 'job', style : 'danger'},\n            {row : 4, col : 'job', align : 'left'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:自定义表头内容\n---\n#demo\n>desc\n通过`#header`可以自定义表头内容。\n>tpl\n<ui-table :list=\"window.demodata.list\">\n    <template #header>\n        <div>\n            <div style=\"display:inline-block;width:160px\">\n                <ui-textinput size=\"xs\" inside-name=\"填写内容...\"></ui-textinput>\n            </div>\n            <ui-btn size=\"xs\">按钮1</ui-btn>\n            <ui-btn size=\"xs\">按钮2</ui-btn>\n        </div>\n    </template>\n</ui-table>\n---\n#demo\n>desc\n配合`title`和`export-csv`一起使用。\n>tpl\n<ui-table :list=\"window.demodata.list\" title=\"自定义表头内容\" export-csv>\n    <template #header>\n        <div>\n            <ui-btn size=\"m\">按钮1</ui-btn>\n        </div>\n    </template>\n</ui-table>\n:::\n\n:::vue\n@name:实现搜索功能\n---\n#demo\n>desc\n使用自定义表头实现搜索功能。\n>tpl\n<ui-table ref=\"demo8\" :list=\"list\">\n    <template #header>\n        <div>\n            <div style=\"display:inline-block;width:160px\">\n                <ui-textinput ref=\"demo8input\" size=\"xs\" inside-name=\"关键词...\"></ui-textinput>\n            </div>\n            <ui-btn size=\"xs\" @emit=\"search\">搜索</ui-btn>\n        </div>\n    </template>\n</ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        search : function () {\n\n            let key = this.$refs.demo8input.get();\n\n            if (key) {\n\n                let result = [];\n\n                for (let item of window.demodata.list) {\n\n                    if (Object.values(item).join().search(key) !== -1) {\n\n                        result.push(item);\n\n                    }\n                \n                }\n\n                this.list = result;\n\n            } else {\n\n                this.list = window.demodata.list;\n\n            }\n        }\n    }\n}\n:::\n\n:::vue\n@name:单元格内嵌HTML\n---\n#demo\n>desc\n表格数据列表支持传入HTML内容，在渲染时这些HTML也会被渲染。\n<br>\n列标题同样也支持HTML。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        colset : [\n            {col : 'name', name : '<span class=\"mo-co-font-theme\">Name</span>'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'},\n            {col : 'action', name : 'Action'}\n        ],\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<a href=\"#\">发送</a>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<a href=\"#\">发送</a>'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', action : '<a href=\"#\">发送</a>'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单元格内嵌Vue组件\n---\n#demo\n>desc\n表格数据列表的内容会通过Vue渲染，所以你可以使用Vue组件。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    }\n}\n---\n#demo\n>desc\n你也可以通过`col-set`配置在标题中使用Vue组件。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name></ui-table>\n>script\n{\n    data : {\n        colset : [\n            {col : 'name', name : '<span>Name <ui-btn size=\"xxs\">查看更多</ui-btn></span>'},\n            {col : 'age', name : '<span>Age <i id=\"demo13\" class=\"mo-icon-question-cf\"></i> <ui-tip target=\"#demo13\">这里是详细信息</ui-tip></span>'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'},\n            {col : 'action', name : 'Action'}\n        ],\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '-'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '-'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '-'}\n        ]\n    }\n}\n---\n#demo\n>desc\n但需要注意的是由于在`list`配置中通过字符串模板的形式使用，所以在模板中的组件无法直接使用上下文的`props`、`data`、`methods`等属性或方法。\n<br><br>\n为此表格组件通过`context`来帮你精确定位上下文。\n>tpl\n<div>\n    <ui-table ref=\"demoPropsData\" :list=\"list\"></ui-table>\n    <ui-link js=\"this.btntext = '发送至邮箱'\">修改btntext</ui-link>\n</div>\n>script\n{\n    data : {\n        btntext : '发送',\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    }\n}\n---\n#demo\n>desc\n`methods`也同样可以通过`context`访问上下文。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\" @emit=\"context.send(0);\">第一个发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\" @emit=\"context.send(1);\">第二个发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    },\n    methods : {\n        send : function (id) {\n            alert(`${this.list[id].name}发送成功!`);\n        }\n    }\n}\n---\n#demo\n>desc\n由于表格中使用的Vue模板是动态生成的，所以如果需要使用一些依赖元素绑定的组件（比如：`ui-tip`），则需要将这些组件也写到模板中。\n<br><br>\n>tpl\n<div>\n    <ui-table :list=\"list\"></ui-table>\n    <ui-tip target=\"#demo-tip-1\">这个提示不会显示</ui-tip>\n</div>\n>script\n{\n    data : {\n        list : [\n            {fisrt : '<span id=\"demo-tip-1\">第一个提示不会显示</span>', second : '<span id=\"demo-tip-2\">第二个提示会显示</span><ui-tip target=\"#demo-tip-2\">这个提示可以正常显示</ui-tip>', gender : 'male'},\n        ]\n    }\n}\n:::\n\n:::vue\n@name:嵌套子内容\n---\n#demo\n>desc\n注意使用嵌套子内容时，无法使用标题列(`col-set`中将列设为`title`)。\n>tpl\n<ui-table :list=\"mainList\"></ui-table>\n>script\n{\n    data : {\n        mainList : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer', __expand : '<ui-card><div>这里是卡片内容</div></ui-card>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher', __expand : '<ui-table :list=\"context.list1\"></ui-table>'}\n        ],\n        list1: [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:无数据\n---\n#demo\n>desc\n当表格无数据时会显示提示信息。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : []\n    }\n}\n---\n#demo\n>desc\n如果设置了表头，表头仍然会显示。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv title=\"无数据演示\"></ui-table>\n>script\n{\n    data : {\n        list : [],\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n[[[形态]]]\n\n#### 支持\n\n|类型|支持|默认|\n|-|-|-|\n|尺寸|`xs` / `s` / `m` / `l` / `xl`|`m`|\n|色彩|全部(除`transparent`)|`neutral-2`|\n|状态|不支持|-|\n\n<a href=\"/guide/status.html\">查看形态文档</a> / <a href=\"/design/color.html\">查看色彩文档</a>\n\n:::vue\n@name:尺寸\n---\n#renderer\n>name\nsize-repeat\n>rules\nxl,l,m,s,xs\n>tpl\n<br><br>\n<ui-table :list=\"window.demodata.list\" size=\"{$sizeKey}\" title=\"{$sizeName}的表格\" export-csv></ui-table>\n:::\n\n:::vue\n@layout:color\n---\n<br>\n<p>{$colorName}</p>\n<ui-table :list=\"window.demodata.list\" color=\"{$colorKey}\"></ui-table>\n:::\n\n[[[配置]]]\n\n:::vue\n@name:list\n---\n#config\n>conf-desc\n表格数据，这是一个数组，数组中每个对象是一行。对象的每个键是一列，键名是列的KEY，键值是列的数值。<br><br>表格的列是对象中所有键的合集，若某项缺少键，对应的单元格内会显示为`empty-cell`的内容。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>desc\n用于设置表格的数据，`list`数组内每一个对象是一行，对象的每个键是一列。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', job : 'doctors'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', job : 'driver'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', job : 'gardener'}\n        ]\n    }\n}\n---\n#demo\n>desc\n表格的列是`list`中所有对象键的合集，若`list`中对象的键是不完全。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', job : 'doctors'},\n            {name : 'Shaun Moynihan'},\n            {}\n        ]\n    }\n}\n---\n#demo\n>desc\n在`list`中使用`__expand`来实现嵌套子内容。注意：无法同时使用标题列(`col-set`中将列设为`title`)。\n>tpl\n<ui-table :list=\"mainList\"></ui-table>\n>script\n{\n    data : {\n        mainList : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer', __expand : '<ui-card><div>这里是卡片内容</div></ui-card>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher', __expand : '<ui-table :list=\"context.list1\"></ui-table>'}\n        ],\n        list1: [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:empty-cell-value\n---\n#config\n>conf-desc\n如果某个单元格的内容是`undefined`，则设置的默认值。\n>conf-accept\n字符串\n>conf-type\nString\n>conf-default\n`'-'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" empty-cell-value=\"空\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', job : 'doctors'},\n            {name : 'Shaun Moynihan'},\n            {}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:title\n---\n#config\n>conf-desc\n表格的标题。\n>conf-accept\n标题字符串\n>conf-type\nString\n>conf-default\n`undefined`\n---\n#demo\n>tpl\n<ui-table :list=\"window.demodata.list\" title=\"这里是表格标题\"></ui-table>\n:::\n\n:::vue\n@name:zebra-pattern\n---\n#config\n>conf-desc\n表格斑马线样式。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n关闭斑马线样式。\n>tpl\n<ui-table :list=\"window.demodata.list\" :zebra-pattern=\"false\"></ui-table>\n:::\n\n:::vue\n@name:vertical-border\n---\n#config\n>conf-desc\n显示表格内的竖直边框。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n隐藏表格内竖直边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :vertical-border=\"false\"></ui-table>\n:::\n\n:::vue\n@name:horizontal-border\n---\n#config\n>conf-desc\n显示表格内的横向边框。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n隐藏表格内横向边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :horizontal-border=\"false\"></ui-table>\n---\n#demo\n>desc\n隐藏表格内所有边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :vertical-border=\"false\" :horizontal-border=\"false\"></ui-table>\n:::\n\n:::vue\n@name:align\n---\n#config\n>conf-desc\n列的对齐方式，这是单个表格的全局设置，可以使用`col-set`来单独设置某一列的对齐方式。\n>conf-accept\n`'left'`: 左对齐<br>`'center'`: 居中对齐<br>`'right'`: 右对齐\n>conf-type\nString\n>conf-default\n`'center'`\n---\n#demo\n>desc\n列内容右对齐。\n>tpl\n<ui-table :list=\"window.demodata.list\" align=\"right\"></ui-table>\n---\n#demo\n>desc\n列内容左对齐。\n>tpl\n<ui-table :list=\"window.demodata.list\" align=\"left\"></ui-table>\n:::\n\n:::vue\n@name:show-col-name\n---\n#config\n>conf-desc\n在标题行显示列的名称，需要先在`col-set`中设置每列的名称。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:fixed-title-col\n---\n#config\n>conf-desc\n标题列的位置，可以设置左侧或右侧。对于列数较多的表格，可以使用固定标题列。\n>conf-accept\n`'left'`: 位于左侧，不固定<br>`'right'`: 位于右侧，不固定<br>`'left-fixed'`: 位于左侧，固定<br>`'right-fixed'`: 位于右侧，固定\n>conf-type\nString\n>conf-default\n`'left'`\n---\n#demo\n>desc\n此配置需要先在`col-set`中设置标题列。\n<br><br>\n将标题列放到右侧。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在左侧。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left-fixed\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在右侧，且导出的表格的列顺序也一样。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right-fixed\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:fixed-title-row\n---\n#config\n>conf-desc\n固定标题行。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table style=\"height: 200px;\" :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" :fixed-title-row=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n配合`fixed-title-col`一起使用。\n>tpl\n<ui-table style=\"height: 200px;\" :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" :fixed-title-row=\"true\" fixed-title-col=\"left-fixed\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', minwidth : '300px'},\n            {col : 'job', name : 'Job', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:title-col-width\n---\n#config\n>conf-desc\n设置标题列的绝对宽度，请谨慎使用此配置，因为此宽度优先于其他配置的宽度。<br>若此配置为`0`，则不会启用。<br><br>此配置一般用来调整标题列与表格整体的占比。\n>conf-accept\n宽度数值(单位为px，无需添加单位)\n>conf-type\nNumber\n>conf-default\n`0`\n---\n#demo\n>desc\n将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'},\n            {col : 'country', name : 'Country'},\n            {col : 'height', name : 'Height'},\n            {col : 'weight', name : 'Body weight'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在左侧并将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left-fixed\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在右侧并将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right-fixed\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:col-set\n---\n#config\n>conf-desc\n列设置可以用来控制单独的一列。\n<br><br>\n`col-set`用于列控制，是一个数组，数组的每项都是一个配置对象。\n<br><br>\n配置对象包含下面这些属性，其中`col`用来定位需要设置列的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|col|需要设置列的KEY|列的KEY(`list`配置中设置)|String|`undefined`|\n|name|列的名称，如果开启`show-col-name`配置，名称会显示在标题行|名称|String|`undefined`|\n|width|列的宽度，此配置会改变列在宽度分配时的权重，但不一定完全符合设置的宽度值，如果需要最小最大宽度使用`minwidth`和`maxwidth`。<br>如果需要设置标题列的宽度请使用`title-col-width`配置。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|minwidth|列的最小宽度，注意列会尽可能遵循此值，但不是绝对一致的。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|maxwidth|列的最小宽度，注意列会尽可能遵循此值，但不是绝对一致的。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|style|设置列的色彩样式|[设计/色彩](/design/color.html)中所有的颜色值|String|`undefined`|\n|disabled|是否展示列的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|列的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n|title|此列是否是标题列，根据`fixed-title-col`的设置所有的标题列会被放到最左或最右|`true`<br>`false`|Boolean|`false`|\n|hide|在表格中隐藏列，用于某些在`list`存在但不需要在展示的数据。列隐藏后在导出`.csv`文件时仍然会存在，如在导出`.csv`文件时也要排除，使用`col-set`配置的`export`属性来控制|`true`<br>`false`|Boolean|`false`|\n|export|导出`.csv`文件时，是否包含此列，若设为`false`此列不会被导出。一般包含行动区域的列会将此配置设为`false`|`true`<br>`false`|Boolean|`true`|\n|sort|开启单列排序，必需启用`show-col-name`才有效。多列排序需要启用`multi-sort`配置|`true`<br>`false`|Boolean|`false`|\n|sortmode|排序的模式，注意当`sortmode`不为`normal`时，必须开启`multi-sort`才生效。|`'normal'`:标准排序<br>`'asc desc'`:仅正倒序排序(默认正序)<br>`'desc asc'`:仅正倒序排序(默认倒序)<br>`'no asc'`:仅正序排序<br>`'no desc'`:仅倒序排序|String|`'normal'`|\n|filters|单列筛选项目，必需启用`show-col-name`才有效。<br><br>这是一个数组，数组中的每一项都是筛选项的对象，包含：<br>`name` : 选项名<br>`matcher` : 匹配值或匹配正则表达式|筛选项的数组|Array|`[]`|\n|pos|列的位置，这是一个数字，默认为0，表示按照数据输入的顺序。数值越大的列将会显示的越后面，数值也可以为负数。|位置数值|Number|`0`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nname\n>desc\n通过`name`及`show-col-name`设置标题行。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nname\n>desc\n标题行结合表头。\n>tpl\n<ui-table :list=\"list\" title=\"表名\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nwidth、minwidth、maxwidth\n>desc\n设置列的`width` 、 `minwidth` 、 `maxwidth`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', maxwidth : '50px'},\n            {col : 'age', name : 'Age', width : '150px'},\n            {col : 'gender', name : 'Gender', minwidth : '150px'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nstyle\n>desc\n设置指定列的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', style : 'primary'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n将单元格设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', disabled : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来单独设置某一列的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', align : 'right'},\n            {col : 'age', name : 'Age', align : 'left'},\n            {col : 'gender', name : 'Gender', align : 'center'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`来置标题列，标题列会被放置在最左或最右（通过`fixed-title-col`设置）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`设置标题列之后，导出的`csv`的列顺序也会保持一致。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`设置标题列之后，若未开启`show-col-name`，导出的`csv`不会包含标题行。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nhide\n>desc\n在表格中隐藏`Job`和`Gender`列，同时不导出`Gender`列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', hide : true, export : false},\n            {col : 'job', name : 'Job', hide : true}\n        ]\n    }\n}\n---\n#demo\n>title\nexport\n>desc\n不导出`Gender`列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', export : false},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsort\n>desc\n通过`sort`字段可以开启单列排序(多列排序需要开启`multi-sort`配置)，并且导出的`csv`也是排序之后的顺序。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsort\n>desc\n标题列也可以使用`sort`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, title : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsortmode\n>desc\n通过`sortmode`字段可以设置仅正序倒序排序，必须配合`multi-sort`配置。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-sort :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, sortmode : 'asc desc'},\n            {col : 'age', name : 'Age', sort : true, sortmode : 'asc desc'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsortmode\n>desc\n通过`sortmode`字段可以设置仅正序倒序排序，默认设置倒序，必须配合`multi-sort`配置。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-sort :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, sortmode : 'desc asc'},\n            {col : 'age', name : 'Age', sort : true, sortmode : 'desc asc'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsortmode\n>desc\n通过`sortmode`字段可以设置仅支持正序，必须配合`multi-sort`配置。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-sort :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, sortmode : 'no asc'},\n            {col : 'age', name : 'Age', sort : true, sortmode : 'no asc'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nfilters\n>desc\n对Job和Age设置筛选器。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {\n                col : 'age',\n                name : 'Age',\n                filters : [\n                    {name : '10-19', matcher : /1[0-9]/},\n                    {name : '20-29', matcher : /2[0-9]/},\n                    {name : '40-49', matcher : /4[0-9]/},\n                ]\n            },\n            {col : 'gender', name : 'Gender'},\n            {\n                col : 'job',\n                name : 'Job',\n                filters : [\n                    {name : 'Driver', matcher : 'driver'},\n                    {name : 'Doctors', matcher : 'doctors'},\n                    {name : 'Gardener', matcher : /gardener/},\n                    {name : 'Teacher', matcher : /teacher/}\n                ]\n            }\n        ]\n    }\n}\n---\n#demo\n>title\npos\n>desc\n将`Name`的位置放到第三列，将`Age`放到第四列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', pos : 1},\n            {col : 'age', name : 'Age', pos : 2},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:row-set\n---\n#config\n>conf-desc\n单行设置可以用来控制一行。\n<br><br>\n`row-set`用于行控制，是一个数组，数组的每项都是一个配置对象，用来设置单行。\n<br><br>\n配置对象包含下面这些属性，其中`row`用来定位需要设置行的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|row|需要设置的行数(从0开始，在有标题行时，0表示标题行)|行数|Number|`undefined`|\n|style|设置行的色彩样式|[设计/色彩](/design/color.html)中所有的颜色值|String|`undefined`|\n|disabled|是否展示行的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|行的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n|disableSelection|此行在多选模式下处于禁用状态，用户无法改变选中状态，但`setCheckedRows()`方法可以改变选中状态（必须配合`multi-select`才生效）|`true`<br>`false`|Boolean|`false`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nstyle\n>desc\n设置指定行的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 0, style : 'success'},\n            {row : 2, style : 'warning'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n将单行设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :row-set=\"rowset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        rowset : [\n            {row : 1, disabled : true}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来设置单行的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 0, align : 'left'},\n            {row : 1, align : 'right'},\n            {row : 2, align : 'center'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisableSelection\n>desc\n使用`disableSelection`来禁用某一行的选中。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\" multi-select></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 1, disableSelection: true}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:cell-set\n---\n#config\n>conf-desc\n单元格设置可以用来控制单个单元格。\n<br><br>\n`cell-set`用于单元格控制，是一个数组，数组的每项都是一个配置对象，用来设置单个单元格。\n<br><br>\n配置对象包含下面这些属性，其中`row`和`col`用来定位需要设置单元格的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|row|需要设置单元格的行数(从0开始，在有标题行时，0表示标题行)|行数|Number|`undefined`|\n|col|需要设置单元格所在列的KEY|列的KEY(`list`配置中设置)|String|`undefined`|\n|style|设置单元格的色彩样式|[设计/色彩](/design/color.html)中所有的颜色值|String|`undefined`|\n|disabled|是否展示单元格的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|单元格的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nstyle\n>desc\n设置指定单元格的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', style : 'success'},\n            {row : 2, col : 'age', style : 'warning'},\n            {row : 3, col : 'job', style : 'danger'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n设将单元格设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :cell-set=\"cellset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        cellset : [\n            {row : 1, col : 'age', disabled : true}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来单独设置单元格的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', align : 'left'},\n            {row : 1, col : 'age', align : 'right'},\n            {row : 2, col : 'age', align : 'center'},\n            {row : 3, col : 'age', align : 'left'},\n            {row : 4, col : 'age', align : 'right'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:export-csv\n---\n#config\n>conf-desc\n开启将表格导出csv文件的功能。<br><br>导出的表格单元格内容中若包含HTML，则会被过滤仅保留文本内容(若存在`<br>`则会被替换成换行符)。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:csv-name\n---\n#config\n>conf-desc\n导出csv文件的名称。\n>conf-accept\n文件名称(不需要加尾缀)\n>conf-type\nString\n>conf-default\n`undefined`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" export-csv csv-name=\"demo\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:custom-sort\n---\n#config\n>conf-desc\n自定义排序规则。使用`custom-sort`可以通过监听`col-sort`事件获取排序列的KEY和排序规则，然后通过自定义逻辑来修改`list`实现排序。\n<br>\n一般和服务端排序一起使用。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name custom-sort @col-sort=\"customSort\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    },\n    methods : {\n        customSort : function (key, type) {\n\n            if (type === 'desc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return val[key];\n\n                });\n\n            } else if (type === 'asc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return -val[key];\n\n                });\n\n            } else {\n\n                // 原始顺序\n                this.list = window.demodata.list;\n\n            }\n\n        }\n    }\n}\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name multi-sort custom-sort @col-sort=\"customSort\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', sort : true, sortmode : 'desc asc'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    },\n    methods : {\n        customSort : function (key, type) {\n\n            console.log(99, key, type);\n\n            if (type === 'desc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return val[key];\n\n                });\n\n            } else if (type === 'asc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return -val[key];\n\n                });\n\n            } else {\n\n                // 原始顺序\n                this.list = window.demodata.list;\n\n            }\n\n        }\n    }\n}\n:::\n\n:::vue\n@name:multi-sort\n---\n#config\n>conf-desc\n支持多列排序，默认只支持单列排序。多列排序时会根据所选排序列的顺序进行多次排序。使用此配置前需要先通过`col-set`的指定排序列。\n<br>\n注意若使用了`custom-sort`，则此配置无效。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n使用`multi-sort`后设置多个排序列，当多个列进行排序时会按照先后顺序对表格进行多次排序。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name multi-sort export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender', sort : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:highlight-row\n---\n#config\n>conf-desc\n是否高亮行，开启后最后点击的行会被高亮，同时也可以通过`setHighlightRow()`方法来高亮指定行，同一时间只能高亮一行。\n<br><br>\n也可以通过`row-set`配置来实现类似的功能，区别在于此配置可以通过`getHighlightRow()`来获取最后点击行，从而实现单选的功能。\n<br>\n同时也可以通过`cleanHighlightRow()`来取消高亮最后点击行。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n开启此配置后，最后点击的行将被高亮。\n>tpl\n<ui-table :list=\"list\" highlight-row></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:highlight-row-background\n---\n#config\n>conf-desc\n当启用`highlight-row`配置后，高亮行的背景颜色。默认背景色(`default`)将匹配组件本身设置的色彩(`color`配置)。\n>conf-accept\n`'default'`<br>任意合法的`background-color`(CSS)的数值\n>conf-type\nString\n>conf-default\n`'default'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" highlight-row highlight-row-background=\"#A5C7FF\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:highlight-row-color\n---\n#config\n>conf-desc\n当启用`highlight-row`配置后，高亮行的文字颜色。默认文字颜色(`default`)将匹配组件本身设置的色彩(`color`配置)。\n>conf-accept\n`'default'`<br>任意合法的`color`(CSS)的数值\n>conf-type\nString\n>conf-default\n`'default'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" highlight-row highlight-row-background=\"#2879FA\" highlight-row-color=\"#FFF\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:multi-select\n---\n#config\n>conf-desc\n表格可多选（多选仅行可用）。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n开启此配置后，可以选择表格的行。\n>tpl\n<ui-table :list=\"list\" multi-select></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n---\n#demo\n>desc\n开启`show-col-name`配置后，会展示全选的复选框。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-select show-col-name></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n开启`fixed-title-col`配置后，复选框也会固定到标题列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-select show-col-name fixed-title-col=\"left\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title: true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:no-hover-effect\n---\n#config\n>conf-desc\n是否显示鼠标`hover`时的效果。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :hover-effect=\"false\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:loading\n---\n#config\n>conf-desc\n表格是否处于数据加载状态。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :loading=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:loading-note\n---\n#config\n>conf-desc\n当表格处于数据加载状态时的提示内容。\n>conf-accept\n提示文案\n>conf-type\nString\n>conf-default\n`'数据加载中...'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :loading=\"true\" loading-note=\"请稍后\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n[[[方法]]]\n\n:::vue\n@name:getHighlightRow()\n---\n#method\n>method-desc\n获取高亮的行号（从`0`开始），需要开启`highlight-row`配置，否则返回`-1`。\n>method-return\n高亮的行号。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo1\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"alert(morning.findVM('demo1').getHighlightRow());\">获取高亮的行号</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:setHighlightRow(rowNum)\n---\n#method\n>method-desc\n高亮指定的行，需要开启`highlight-row`才生效。\n>method-args\n|rowNum|NO|需要高亮的行数|行数(从`0`开始)|`Number`|`undefined`|\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo3\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo3').setHighlightRow(1);\">高亮第二行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:cleanHighlightRow()\n---\n#method\n>method-desc\n清除高亮行，需要开启`highlight-row`配置才有效。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo2\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo2').cleanHighlightRow();\">清除高亮行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:getCheckedRows()\n---\n#method\n>method-desc\n获取选中的行号（从`0`开始），需要开启`multi-select`配置。\n>method-return\n选中的行号组成的数组。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo4\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"alert(morning.findVM('demo4').getCheckedRows().join(','));\">获取选中的行号</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:setCheckedRows(rows)\n---\n#method\n>method-desc\n选中特定的行，需要开启`multi-select`配置。\n>method-args\n|rows|YES|需要选中行数(从`0`开始的数字)所组成的数组。|数组<br>`undefined`|`Array`<br>`Undefined`|`undefined`|\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo9\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo9').setCheckedRows([1, 4]);\">选中第3、5行</ui-link><br>\n    <ui-link js=\"morning.findVM('demo9').setCheckedRows();\">取消选中所有行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:checkedAllRows()\n---\n#method\n>method-desc\n选中所有行，需要开启`multi-select`配置。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo11\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo11').checkedAllRows();\">选中所有行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:uncheckAllRows()\n---\n#method\n>method-desc\n取消选中所有行，需要开启`multi-select`配置。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo12\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo12').uncheckAllRows();\">取消选中所有行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:exportToCsv()\n---\n#method\n>method-desc\n导出表格内容至`csv`文件并下载。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo14\" :list=\"list\"></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo14').exportToCsv();\">导出数据</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n[[[事件]]]\n\n:::vue\n@name:list-change\n---\n#event\n>event-desc\n当表格数据变化后触发。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo2\" :list=\"list\" @list-change=\"echo\"></ui-table>\n    <br><br>\n    <ui-link js=\"morning.findVM('demo2').conf.list = window.demodata.biglist;\">重新设置表格数据</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function () {\n            console.log('demo2.console1', `list-change event!`);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-click\n---\n#event\n>event-desc\n当单元格被点击时触发。\n>event-args\n|rowNum|被点击单元格所在的行号(从`0`开始)|`Number`|\n|colKey|被点击单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo5\" :list=\"list\" @cell-click=\"echo\"></ui-table>\n    <br><br>\n    <p>点击单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo5.console1', `cell-click event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-enter\n---\n#event\n>event-desc\n当鼠标移入单元格时触发。\n>event-args\n|rowNum|鼠标移入单元格所在的行号(从`0`开始)|`Number`|\n|colKey|鼠标移入单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo6\" :list=\"list\" @cell-enter=\"echo\"></ui-table>\n    <br><br>\n    <p>鼠标移入单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo6.console1', `cell-enter event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-leave\n---\n#event\n>event-desc\n当鼠标移出单元格时触发。\n>event-args\n|rowNum|鼠标移出单元格所在的行号(从`0`开始)|`Number`|\n|colKey|鼠标移出单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo7\" :list=\"list\" @cell-leave=\"echo\"></ui-table>\n    <br><br>\n    <p>鼠标移出单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo7.console1', `cell-leave event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@name:highlight-row-change\n---\n#event\n>event-desc\n当高亮行改变时触发，仅在开启`highlight-row`配置后有效。\n<br>\n可以通过`getHighlightRow()`方法来获取高亮的行\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo9\" :list=\"list\" highlight-row @highlight-row-change=\"echo\"></ui-table>\n    <br><br>\n    <p>点击行触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function () {\n            console.log('demo9.console1', `highlight-row-change event!`);\n        }\n    }\n}\n:::\n\n:::vue\n@name:checked-row-change\n---\n#event\n>event-desc\n当选中行发生改变时触发，仅在开启`multi-select`配置后有效。\n<br>\n可以通过`getCheckedRows()`方法来获取选中的行\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo8\" :list=\"list\" multi-select @checked-row-change=\"echo\"></ui-table>\n    <br><br>\n    <p>选中行触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function () {\n            console.log('demo8.console1', `checked-row-change event!`);\n        }\n    }\n}\n:::\n\n:::vue\n@name:col-sort\n---\n#event\n>event-desc\n当列发生排序时触发。\n>event-args\n|key|当前排序列的KEY|`String`|\n|type|排序方式，包含：`asc`:升序，`desc`:降序，`no`:无排序|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table :list=\"list\" :col-set=\"colset\" show-col-name custom-sort @col-sort=\"customSort\"></ui-table>\n    <p>点击排序触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    },\n    methods : {\n        customSort : function (key, type) {\n\n            console.log('demo10.console1', `col-sort event!`, key, type);\n\n            if (type === 'desc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return val[key];\n\n                });\n\n            } else if (type === 'asc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return -val[key];\n\n                });\n\n            } else {\n\n                // 原始顺序\n                this.list = window.demodata.list;\n\n            }\n\n        }\n    }\n}\n:::\n\n:::vue\n@layout:lifecycle-event\n---\ntable\n表格\n:::\n\n[[[源码]]]\n\n<iframe src=\"/report/coverage/lib/components/table/index.vue.html\" name=\"codeFrame\" frameborder=\"0\" onload=\"this.height=codeFrame.document.body.scrollHeight\"></iframe>\n\n")])])};i._withStripped=!0;var l=t(2);var r=function(n,e){for(var t=-1,o=e.length,a=n.length;++t<o;)n[a+t]=e[t];return n},c=t(4),s=c.a.Symbol,d=Object.prototype,u=d.hasOwnProperty,m=d.toString,b=s?s.toStringTag:void 0;var f=function(n){var e=u.call(n,b),t=n[b];try{n[b]=void 0;var o=!0}catch(n){}var a=m.call(n);return o&&(e?n[b]=t:delete n[b]),a},g=Object.prototype.toString;var p=function(n){return g.call(n)},h="[object Null]",v="[object Undefined]",w=s?s.toStringTag:void 0;var y=function(n){return null==n?void 0===n?v:h:w&&w in Object(n)?f(n):p(n)};var j=function(n){return null!=n&&"object"==typeof n},x="[object Arguments]";var _=function(n){return j(n)&&y(n)==x},k=Object.prototype,A=k.hasOwnProperty,S=k.propertyIsEnumerable,O=_(function(){return arguments}())?_:function(n){return j(n)&&A.call(n,"callee")&&!S.call(n,"callee")},N=Array.isArray,G=s?s.isConcatSpreadable:void 0;var B=function(n){return N(n)||O(n)||!!(G&&n&&n[G])};var z=function n(e,t,o,a,i){var l=-1,c=e.length;for(o||(o=B),i||(i=[]);++l<c;){var s=e[l];t>0&&o(s)?t>1?n(s,t-1,o,a,i):r(i,s):a||(i[i.length]=s)}return i};var J=function(n,e){for(var t=-1,o=null==n?0:n.length,a=Array(o);++t<o;)a[t]=e(n[t],t,n);return a};var M=function(){this.__data__=[],this.size=0};var C=function(n,e){return n===e||n!=n&&e!=e};var E=function(n,e){for(var t=n.length;t--;)if(C(n[t][0],e))return t;return-1},T=Array.prototype.splice;var V=function(n){var e=this.__data__,t=E(e,n);return!(t<0)&&(t==e.length-1?e.pop():T.call(e,t,1),--this.size,!0)};var P=function(n){var e=this.__data__,t=E(e,n);return t<0?void 0:e[t][1]};var R=function(n){return E(this.__data__,n)>-1};var H=function(n,e){var t=this.__data__,o=E(t,n);return o<0?(++this.size,t.push([n,e])):t[o][1]=e,this};function K(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}K.prototype.clear=M,K.prototype.delete=V,K.prototype.get=P,K.prototype.has=R,K.prototype.set=H;var F=K;var $=function(){this.__data__=new F,this.size=0};var Z=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t};var L=function(n){return this.__data__.get(n)};var D=function(n){return this.__data__.has(n)};var Y=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)},U="[object AsyncFunction]",I="[object Function]",W="[object GeneratorFunction]",q="[object Proxy]";var Q,X=function(n){if(!Y(n))return!1;var e=y(n);return e==I||e==W||e==U||e==q},nn=c.a["__core-js_shared__"],en=(Q=/[^.]+$/.exec(nn&&nn.keys&&nn.keys.IE_PROTO||""))?"Symbol(src)_1."+Q:"";var tn=function(n){return!!en&&en in n},on=Function.prototype.toString;var an=function(n){if(null!=n){try{return on.call(n)}catch(n){}try{return n+""}catch(n){}}return""},ln=/^\[object .+?Constructor\]$/,rn=Function.prototype,cn=Object.prototype,sn=rn.toString,dn=cn.hasOwnProperty,un=RegExp("^"+sn.call(dn).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var mn=function(n){return!(!Y(n)||tn(n))&&(X(n)?un:ln).test(an(n))};var bn=function(n,e){return null==n?void 0:n[e]};var fn=function(n,e){var t=bn(n,e);return mn(t)?t:void 0},gn=fn(c.a,"Map"),pn=fn(Object,"create");var hn=function(){this.__data__=pn?pn(null):{},this.size=0};var vn=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e},wn="__lodash_hash_undefined__",yn=Object.prototype.hasOwnProperty;var jn=function(n){var e=this.__data__;if(pn){var t=e[n];return t===wn?void 0:t}return yn.call(e,n)?e[n]:void 0},xn=Object.prototype.hasOwnProperty;var _n=function(n){var e=this.__data__;return pn?void 0!==e[n]:xn.call(e,n)},kn="__lodash_hash_undefined__";var An=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=pn&&void 0===e?kn:e,this};function Sn(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}Sn.prototype.clear=hn,Sn.prototype.delete=vn,Sn.prototype.get=jn,Sn.prototype.has=_n,Sn.prototype.set=An;var On=Sn;var Nn=function(){this.size=0,this.__data__={hash:new On,map:new(gn||F),string:new On}};var Gn=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n};var Bn=function(n,e){var t=n.__data__;return Gn(e)?t["string"==typeof e?"string":"hash"]:t.map};var zn=function(n){var e=Bn(this,n).delete(n);return this.size-=e?1:0,e};var Jn=function(n){return Bn(this,n).get(n)};var Mn=function(n){return Bn(this,n).has(n)};var Cn=function(n,e){var t=Bn(this,n),o=t.size;return t.set(n,e),this.size+=t.size==o?0:1,this};function En(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}En.prototype.clear=Nn,En.prototype.delete=zn,En.prototype.get=Jn,En.prototype.has=Mn,En.prototype.set=Cn;var Tn=En,Vn=200;var Pn=function(n,e){var t=this.__data__;if(t instanceof F){var o=t.__data__;if(!gn||o.length<Vn-1)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new Tn(o)}return t.set(n,e),this.size=t.size,this};function Rn(n){var e=this.__data__=new F(n);this.size=e.size}Rn.prototype.clear=$,Rn.prototype.delete=Z,Rn.prototype.get=L,Rn.prototype.has=D,Rn.prototype.set=Pn;var Hn=Rn,Kn="__lodash_hash_undefined__";var Fn=function(n){return this.__data__.set(n,Kn),this};var $n=function(n){return this.__data__.has(n)};function Zn(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new Tn;++e<t;)this.add(n[e])}Zn.prototype.add=Zn.prototype.push=Fn,Zn.prototype.has=$n;var Ln=Zn;var Dn=function(n,e){for(var t=-1,o=null==n?0:n.length;++t<o;)if(e(n[t],t,n))return!0;return!1};var Yn=function(n,e){return n.has(e)},Un=1,In=2;var Wn=function(n,e,t,o,a,i){var l=t&Un,r=n.length,c=e.length;if(r!=c&&!(l&&c>r))return!1;var s=i.get(n);if(s&&i.get(e))return s==e;var d=-1,u=!0,m=t&In?new Ln:void 0;for(i.set(n,e),i.set(e,n);++d<r;){var b=n[d],f=e[d];if(o)var g=l?o(f,b,d,e,n,i):o(b,f,d,n,e,i);if(void 0!==g){if(g)continue;u=!1;break}if(m){if(!Dn(e,(function(n,e){if(!Yn(m,e)&&(b===n||a(b,n,t,o,i)))return m.push(e)}))){u=!1;break}}else if(b!==f&&!a(b,f,t,o,i)){u=!1;break}}return i.delete(n),i.delete(e),u},qn=c.a.Uint8Array;var Qn=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,o){t[++e]=[o,n]})),t};var Xn=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t},ne=1,ee=2,te="[object Boolean]",oe="[object Date]",ae="[object Error]",ie="[object Map]",le="[object Number]",re="[object RegExp]",ce="[object Set]",se="[object String]",de="[object Symbol]",ue="[object ArrayBuffer]",me="[object DataView]",be=s?s.prototype:void 0,fe=be?be.valueOf:void 0;var ge=function(n,e,t,o,a,i,l){switch(t){case me:if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case ue:return!(n.byteLength!=e.byteLength||!i(new qn(n),new qn(e)));case te:case oe:case le:return C(+n,+e);case ae:return n.name==e.name&&n.message==e.message;case re:case se:return n==e+"";case ie:var r=Qn;case ce:var c=o&ne;if(r||(r=Xn),n.size!=e.size&&!c)return!1;var s=l.get(n);if(s)return s==e;o|=ee,l.set(n,e);var d=Wn(r(n),r(e),o,a,i,l);return l.delete(n),d;case de:if(fe)return fe.call(n)==fe.call(e)}return!1};var pe=function(n,e,t){var o=e(n);return N(n)?o:r(o,t(n))};var he=function(n,e){for(var t=-1,o=null==n?0:n.length,a=0,i=[];++t<o;){var l=n[t];e(l,t,n)&&(i[a++]=l)}return i};var ve=function(){return[]},we=Object.prototype.propertyIsEnumerable,ye=Object.getOwnPropertySymbols,je=ye?function(n){return null==n?[]:(n=Object(n),he(ye(n),(function(e){return we.call(n,e)})))}:ve;var xe=function(n,e){for(var t=-1,o=Array(n);++t<n;)o[t]=e(t);return o},_e=t(11),ke=9007199254740991,Ae=/^(?:0|[1-9]\d*)$/;var Se=function(n,e){var t=typeof n;return!!(e=null==e?ke:e)&&("number"==t||"symbol"!=t&&Ae.test(n))&&n>-1&&n%1==0&&n<e},Oe=9007199254740991;var Ne=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=Oe},Ge={};Ge["[object Float32Array]"]=Ge["[object Float64Array]"]=Ge["[object Int8Array]"]=Ge["[object Int16Array]"]=Ge["[object Int32Array]"]=Ge["[object Uint8Array]"]=Ge["[object Uint8ClampedArray]"]=Ge["[object Uint16Array]"]=Ge["[object Uint32Array]"]=!0,Ge["[object Arguments]"]=Ge["[object Array]"]=Ge["[object ArrayBuffer]"]=Ge["[object Boolean]"]=Ge["[object DataView]"]=Ge["[object Date]"]=Ge["[object Error]"]=Ge["[object Function]"]=Ge["[object Map]"]=Ge["[object Number]"]=Ge["[object Object]"]=Ge["[object RegExp]"]=Ge["[object Set]"]=Ge["[object String]"]=Ge["[object WeakMap]"]=!1;var Be=function(n){return j(n)&&Ne(n.length)&&!!Ge[y(n)]};var ze=function(n){return function(e){return n(e)}},Je=t(35),Me=Je.a&&Je.a.isTypedArray,Ce=Me?ze(Me):Be,Ee=Object.prototype.hasOwnProperty;var Te=function(n,e){var t=N(n),o=!t&&O(n),a=!t&&!o&&Object(_e.a)(n),i=!t&&!o&&!a&&Ce(n),l=t||o||a||i,r=l?xe(n.length,String):[],c=r.length;for(var s in n)!e&&!Ee.call(n,s)||l&&("length"==s||a&&("offset"==s||"parent"==s)||i&&("buffer"==s||"byteLength"==s||"byteOffset"==s)||Se(s,c))||r.push(s);return r},Ve=Object.prototype;var Pe=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||Ve)};var Re=function(n,e){return function(t){return n(e(t))}}(Object.keys,Object),He=Object.prototype.hasOwnProperty;var Ke=function(n){if(!Pe(n))return Re(n);var e=[];for(var t in Object(n))He.call(n,t)&&"constructor"!=t&&e.push(t);return e};var Fe=function(n){return null!=n&&Ne(n.length)&&!X(n)};var $e=function(n){return Fe(n)?Te(n):Ke(n)};var Ze=function(n){return pe(n,$e,je)},Le=1,De=Object.prototype.hasOwnProperty;var Ye=function(n,e,t,o,a,i){var l=t&Le,r=Ze(n),c=r.length;if(c!=Ze(e).length&&!l)return!1;for(var s=c;s--;){var d=r[s];if(!(l?d in e:De.call(e,d)))return!1}var u=i.get(n);if(u&&i.get(e))return u==e;var m=!0;i.set(n,e),i.set(e,n);for(var b=l;++s<c;){var f=n[d=r[s]],g=e[d];if(o)var p=l?o(g,f,d,e,n,i):o(f,g,d,n,e,i);if(!(void 0===p?f===g||a(f,g,t,o,i):p)){m=!1;break}b||(b="constructor"==d)}if(m&&!b){var h=n.constructor,v=e.constructor;h!=v&&"constructor"in n&&"constructor"in e&&!("function"==typeof h&&h instanceof h&&"function"==typeof v&&v instanceof v)&&(m=!1)}return i.delete(n),i.delete(e),m},Ue=fn(c.a,"DataView"),Ie=fn(c.a,"Promise"),We=fn(c.a,"Set"),qe=fn(c.a,"WeakMap"),Qe=an(Ue),Xe=an(gn),nt=an(Ie),et=an(We),tt=an(qe),ot=y;(Ue&&"[object DataView]"!=ot(new Ue(new ArrayBuffer(1)))||gn&&"[object Map]"!=ot(new gn)||Ie&&"[object Promise]"!=ot(Ie.resolve())||We&&"[object Set]"!=ot(new We)||qe&&"[object WeakMap]"!=ot(new qe))&&(ot=function(n){var e=y(n),t="[object Object]"==e?n.constructor:void 0,o=t?an(t):"";if(o)switch(o){case Qe:return"[object DataView]";case Xe:return"[object Map]";case nt:return"[object Promise]";case et:return"[object Set]";case tt:return"[object WeakMap]"}return e});var at=ot,it=1,lt="[object Arguments]",rt="[object Array]",ct="[object Object]",st=Object.prototype.hasOwnProperty;var dt=function(n,e,t,o,a,i){var l=N(n),r=N(e),c=l?rt:at(n),s=r?rt:at(e),d=(c=c==lt?ct:c)==ct,u=(s=s==lt?ct:s)==ct,m=c==s;if(m&&Object(_e.a)(n)){if(!Object(_e.a)(e))return!1;l=!0,d=!1}if(m&&!d)return i||(i=new Hn),l||Ce(n)?Wn(n,e,t,o,a,i):ge(n,e,c,t,o,a,i);if(!(t&it)){var b=d&&st.call(n,"__wrapped__"),f=u&&st.call(e,"__wrapped__");if(b||f){var g=b?n.value():n,p=f?e.value():e;return i||(i=new Hn),a(g,p,t,o,i)}}return!!m&&(i||(i=new Hn),Ye(n,e,t,o,a,i))};var ut=function n(e,t,o,a,i){return e===t||(null==e||null==t||!j(e)&&!j(t)?e!=e&&t!=t:dt(e,t,o,a,n,i))},mt=1,bt=2;var ft=function(n,e,t,o){var a=t.length,i=a,l=!o;if(null==n)return!i;for(n=Object(n);a--;){var r=t[a];if(l&&r[2]?r[1]!==n[r[0]]:!(r[0]in n))return!1}for(;++a<i;){var c=(r=t[a])[0],s=n[c],d=r[1];if(l&&r[2]){if(void 0===s&&!(c in n))return!1}else{var u=new Hn;if(o)var m=o(s,d,c,n,e,u);if(!(void 0===m?ut(d,s,mt|bt,o,u):m))return!1}}return!0};var gt=function(n){return n==n&&!Y(n)};var pt=function(n){for(var e=$e(n),t=e.length;t--;){var o=e[t],a=n[o];e[t]=[o,a,gt(a)]}return e};var ht=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}};var vt=function(n){var e=pt(n);return 1==e.length&&e[0][2]?ht(e[0][0],e[0][1]):function(t){return t===n||ft(t,n,e)}},wt="[object Symbol]";var yt=function(n){return"symbol"==typeof n||j(n)&&y(n)==wt},jt=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,xt=/^\w*$/;var _t=function(n,e){if(N(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!yt(n))||(xt.test(n)||!jt.test(n)||null!=e&&n in Object(e))},kt="Expected a function";function At(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError(kt);var t=function(){var o=arguments,a=e?e.apply(this,o):o[0],i=t.cache;if(i.has(a))return i.get(a);var l=n.apply(this,o);return t.cache=i.set(a,l)||i,l};return t.cache=new(At.Cache||Tn),t}At.Cache=Tn;var St=At,Ot=500;var Nt=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Gt=/\\(\\)?/g,Bt=function(n){var e=St(n,(function(n){return t.size===Ot&&t.clear(),n})),t=e.cache;return e}((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(Nt,(function(n,t,o,a){e.push(o?a.replace(Gt,"$1"):t||n)})),e})),zt=1/0,Jt=s?s.prototype:void 0,Mt=Jt?Jt.toString:void 0;var Ct=function n(e){if("string"==typeof e)return e;if(N(e))return J(e,n)+"";if(yt(e))return Mt?Mt.call(e):"";var t=e+"";return"0"==t&&1/e==-zt?"-0":t};var Et=function(n){return null==n?"":Ct(n)};var Tt=function(n,e){return N(n)?n:_t(n,e)?[n]:Bt(Et(n))},Vt=1/0;var Pt=function(n){if("string"==typeof n||yt(n))return n;var e=n+"";return"0"==e&&1/n==-Vt?"-0":e};var Rt=function(n,e){for(var t=0,o=(e=Tt(e,n)).length;null!=n&&t<o;)n=n[Pt(e[t++])];return t&&t==o?n:void 0};var Ht=function(n,e,t){var o=null==n?void 0:Rt(n,e);return void 0===o?t:o};var Kt=function(n,e){return null!=n&&e in Object(n)};var Ft=function(n,e,t){for(var o=-1,a=(e=Tt(e,n)).length,i=!1;++o<a;){var l=Pt(e[o]);if(!(i=null!=n&&t(n,l)))break;n=n[l]}return i||++o!=a?i:!!(a=null==n?0:n.length)&&Ne(a)&&Se(l,a)&&(N(n)||O(n))};var $t=function(n,e){return null!=n&&Ft(n,e,Kt)},Zt=1,Lt=2;var Dt=function(n,e){return _t(n)&&gt(e)?ht(Pt(n),e):function(t){var o=Ht(t,n);return void 0===o&&o===e?$t(t,n):ut(e,o,Zt|Lt)}};var Yt=function(n){return n};var Ut=function(n){return function(e){return null==e?void 0:e[n]}};var It=function(n){return function(e){return Rt(e,n)}};var Wt=function(n){return _t(n)?Ut(Pt(n)):It(n)};var qt=function(n){return"function"==typeof n?n:null==n?Yt:"object"==typeof n?N(n)?Dt(n[0],n[1]):vt(n):Wt(n)};var Qt=function(n){return function(e,t,o){for(var a=-1,i=Object(e),l=o(e),r=l.length;r--;){var c=l[n?r:++a];if(!1===t(i[c],c,i))break}return e}}();var Xt=function(n,e){return function(t,o){if(null==t)return t;if(!Fe(t))return n(t,o);for(var a=t.length,i=e?a:-1,l=Object(t);(e?i--:++i<a)&&!1!==o(l[i],i,l););return t}}((function(n,e){return n&&Qt(n,e,$e)}));var no=function(n,e){var t=-1,o=Fe(n)?Array(n.length):[];return Xt(n,(function(n,a,i){o[++t]=e(n,a,i)})),o};var eo=function(n,e){var t=n.length;for(n.sort(e);t--;)n[t]=n[t].value;return n};var to=function(n,e){if(n!==e){var t=void 0!==n,o=null===n,a=n==n,i=yt(n),l=void 0!==e,r=null===e,c=e==e,s=yt(e);if(!r&&!s&&!i&&n>e||i&&l&&c&&!r&&!s||o&&l&&c||!t&&c||!a)return 1;if(!o&&!i&&!s&&n<e||s&&t&&a&&!o&&!i||r&&t&&a||!l&&a||!c)return-1}return 0};var oo=function(n,e,t){for(var o=-1,a=n.criteria,i=e.criteria,l=a.length,r=t.length;++o<l;){var c=to(a[o],i[o]);if(c)return o>=r?c:c*("desc"==t[o]?-1:1)}return n.index-e.index};var ao=function(n,e,t){var o=-1;e=J(e.length?e:[Yt],ze(qt));var a=no(n,(function(n,t,a){return{criteria:J(e,(function(e){return e(n)})),index:++o,value:n}}));return eo(a,(function(n,e){return oo(n,e,t)}))};var io=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)},lo=Math.max;var ro=function(n,e,t){return e=lo(void 0===e?n.length-1:e,0),function(){for(var o=arguments,a=-1,i=lo(o.length-e,0),l=Array(i);++a<i;)l[a]=o[e+a];a=-1;for(var r=Array(e+1);++a<e;)r[a]=o[a];return r[e]=t(l),io(n,this,r)}};var co=function(n){return function(){return n}},so=function(){try{var n=fn(Object,"defineProperty");return n({},"",{}),n}catch(n){}}(),uo=so?function(n,e){return so(n,"toString",{configurable:!0,enumerable:!1,value:co(e),writable:!0})}:Yt,mo=800,bo=16,fo=Date.now;var go=function(n){var e=0,t=0;return function(){var o=fo(),a=bo-(o-t);if(t=o,a>0){if(++e>=mo)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}(uo);var po=function(n,e,t){if(!Y(t))return!1;var o=typeof e;return!!("number"==o?Fe(t)&&Se(e,t.length):"string"==o&&e in t)&&C(t[e],n)},ho=function(n,e){return go(ro(n,e,Yt),n+"")}((function(n,e){if(null==n)return[];var t=e.length;return t>1&&po(n,e[0],e[1])?e=[]:t>2&&po(e[0],e[1],e[2])&&(e=[e[0]]),ao(n,z(e,1),[])}));window.sortby=ho;var vo={data:function(){return{page:"table"}},created:function(){window.demodata={list:[{name:"Tim Boelaars",age:20,gender:"male",job:"driver"},{name:"Andrew Colin Beck",age:41,gender:"female",job:"engineer"},{name:"Gustavo Zambelli",age:23,gender:"male",job:"teacher"},{name:"Victor Erixon",age:15,gender:"female",job:"doctors"},{name:"Shaun Moynihan",age:27,gender:"female",job:"driver"},{name:"Emir Ayouni",age:21,gender:"male",job:"gardener"}],biglist:[{name:"Tim Boelaars",age:20,gender:"male",job:"driver",country:"England",height:187,weight:160},{name:"Andrew Colin Beck",age:41,gender:"female",job:"engineer",country:"United States",height:165,weight:116},{name:"Gustavo Zambelli",age:23,gender:"male",job:"teacher",country:"Thailand",height:178,weight:132},{name:"Victor Erixon",age:15,gender:"female",job:"doctors",country:"United States",height:159,weight:100},{name:"Shaun Moynihan",age:27,gender:"female",job:"driver",country:"England",height:163,weight:116},{name:"Emir Ayouni",age:21,gender:"male",job:"gardener",country:"United States",height:173,weight:122}]}},components:{"doc-component":l.a}},wo=t(1),yo=Object(wo.a)(vo,i,[],!1,null,null,null);yo.options.__file="src/docs/pages/component/table/index.vue";var jo=yo.exports;new a.a({el:"#root",render:function(n){return n(jo)}})},31:function(n,e,t){"use strict";(function(n){var t="object"==typeof n&&n&&n.Object===Object&&n;e.a=t}).call(this,t(32))},35:function(n,e,t){"use strict";(function(n){var o=t(31),a="object"==typeof exports&&exports&&!exports.nodeType&&exports,i=a&&"object"==typeof n&&n&&!n.nodeType&&n,l=i&&i.exports===a&&o.a.process,r=function(){try{var n=i&&i.require&&i.require("util").types;return n||l&&l.binding&&l.binding("util")}catch(n){}}();e.a=r}).call(this,t(48)(n))},4:function(n,e,t){"use strict";var o=t(31),a="object"==typeof self&&self&&self.Object===Object&&self,i=o.a||a||Function("return this")();e.a=i},48:function(n,e){n.exports=function(n){if(!n.webpackPolyfill){var e=Object.create(n);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},53:function(n,e,t){"use strict";e.a=function(){return!1}}});