!function(n){function e(e){for(var o,a,r=e[0],c=e[1],s=e[2],u=0,m=[];u<r.length;u++)a=r[u],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&m.push(i[a][0]),i[a]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(n[o]=c[o]);for(d&&d(e);m.length;)m.shift()();return l.push.apply(l,s||[]),t()}function t(){for(var n,e=0;e<l.length;e++){for(var t=l[e],o=!0,r=1;r<t.length;r++){var c=t[r];0!==i[c]&&(o=!1)}o&&(l.splice(e--,1),n=a(a.s=t[0]))}return n}var o={},i={70:0},l=[];function a(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=n,a.c=o,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)a.d(t,o,function(e){return n[e]}.bind(null,o));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/";var r=window.webpackJsonp=window.webpackJsonp||[],c=r.push.bind(r);r.push=e,r=r.slice();for(var s=0;s<r.length;s++)e(r[s]);var d=c;l.push([744,0]),t()}({1:function(n,e){n.exports=Vue},144:function(n,e,t){"use strict";t.r(e);var o=t(145),i=t.n(o);for(var l in o)"default"!==l&&function(n){t.d(e,n,(function(){return o[n]}))}(l);e.default=i.a},145:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o=l(t(2)),i=l(t(746));function l(n){return n&&n.__esModule?n:{default:n}}window.sortby=i.default,e.default={data:function(){return{page:"table"}},created:function(){window.demodata={list:[{name:"Tim Boelaars",age:20,gender:"male",job:"driver"},{name:"Andrew Colin Beck",age:41,gender:"female",job:"engineer"},{name:"Gustavo Zambelli",age:23,gender:"male",job:"teacher"},{name:"Victor Erixon",age:15,gender:"female",job:"doctors"},{name:"Shaun Moynihan",age:27,gender:"female",job:"driver"},{name:"Emir Ayouni",age:21,gender:"male",job:"gardener"}],biglist:[{name:"Tim Boelaars",age:20,gender:"male",job:"driver",country:"England",height:187,weight:160},{name:"Andrew Colin Beck",age:41,gender:"female",job:"engineer",country:"United States",height:165,weight:116},{name:"Gustavo Zambelli",age:23,gender:"male",job:"teacher",country:"Thailand",height:178,weight:132},{name:"Victor Erixon",age:15,gender:"female",job:"doctors",country:"United States",height:159,weight:100},{name:"Shaun Moynihan",age:27,gender:"female",job:"driver",country:"England",height:163,weight:116},{name:"Emir Ayouni",age:21,gender:"male",job:"gardener",country:"United States",height:173,weight:122}]}},components:{"doc-component":o.default}},n.exports=e.default},407:function(n,e,t){"use strict";var o=function(){var n=this.$createElement,e=this._self._c||n;return e("doc-component",{attrs:{page:this.page,hasPadding:!0}},[e("script",{attrs:{type:"text/markdown"}},[this._v("\n# 表格 `<ui-table>`\n\n<doc-component-status page=\"table\"></doc-component-status>\n\n[[[开始]]]\n\n定义一个表格，这是一个块级元素。\n\n:::vue\n@name:使用\n---\n#demo\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', job : 'doctors'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', job : 'driver'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', job : 'gardener'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单列控制\n---\n#demo\n>desc\n`ui-table`通过`col-set`配置，可以设置单列的：\n<br><br>\n- 宽度\n- 最小宽度\n- 最大宽度\n- 样式\n- 禁用状态\n- 对齐方式\n- 是否是标题列(标题列将被聚合在一起)\n<br><br>\n更多单列控制见：[col-set配置](/component/table.html#col-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age', minwidth : '150px'},\n            {col : 'gender', name : 'Gender', disabled : true},\n            {col : 'job', name : 'Job', align : 'right', style : 'success'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单行控制\n---\n#demo\n>desc\n`ui-table`通过`row-set`配置，可以设置行的：\n<br><br>\n- 样式\n- 禁用状态\n- 对齐方式\n<br><br>\n更多单行控制见：[row-set配置](/component/table.html#row-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 1, align : 'left'},\n            {row : 2, style : 'warning'},\n            {row : 4, disabled : true}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单元格控制\n---\n#demo\n>desc\n`ui-table`通过`cell-set`配置，可以设置单元格的：\n<br><br>\n- 样式\n- 禁用状态\n- 对齐方式\n<br><br>\n更多单元格控制见：[cell-set配置](/component/table.html#cell-set)。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', style : 'success'},\n            {row : 2, col : 'gender', disabled : true},\n            {row : 3, col : 'job', style : 'danger'},\n            {row : 4, col : 'job', align : 'left'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:自定义表头内容\n---\n#demo\n>desc\n通过`slot=\"header\"`可以自定义表头内容。\n>tpl\n<ui-table :list=\"window.demodata.list\">\n    <div slot=\"header\">\n        <div style=\"display:inline-block;width:160px\">\n            <ui-textinput size=\"xs\" inside-name=\"填写内容...\"></ui-textinput>\n        </div>\n        <ui-btn size=\"xs\">按钮1</ui-btn>\n        <ui-btn size=\"xs\">按钮2</ui-btn>\n    </div>\n</ui-table>\n---\n#demo\n>desc\n配合`title`和`export-csv`一起使用。\n>tpl\n<ui-table :list=\"window.demodata.list\" title=\"自定义表头内容\" export-csv>\n    <div slot=\"header\">\n        <ui-btn size=\"m\">按钮1</ui-btn>\n    </div>\n</ui-table>\n:::\n\n:::vue\n@name:实现搜索功能\n---\n#demo\n>desc\n使用自定义表头实现搜索功能。\n>tpl\n<ui-table ref=\"demo8\" :list=\"list\">\n    <div slot=\"header\">\n        <div style=\"display:inline-block;width:160px\">\n            <ui-textinput ref=\"demo8input\" size=\"xs\" inside-name=\"关键词...\"></ui-textinput>\n        </div>\n        <ui-btn size=\"xs\" @emit=\"search\">搜索</ui-btn>\n    </div>\n</ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        search : function () {\n\n            let key = this.$refs.demo8input.get();\n\n            if (key) {\n\n                let result = [];\n\n                for (let item of window.demodata.list) {\n\n                    if (Object.values(item).join().search(key) !== -1) {\n\n                        result.push(item);\n\n                    }\n                \n                }\n\n                this.list = result;\n\n            } else {\n\n                this.list = window.demodata.list;\n\n            }\n        }\n    }\n}\n:::\n\n:::vue\n@name:单元格内嵌HTML\n---\n#demo\n>desc\n表格数据列表支持传入HTML内容，在渲染时这些HTML也会被渲染。\n<br>\n列标题同样也支持HTML。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        colset : [\n            {col : 'name', name : '<span class=\"mo-co-font-theme\">Name</span>'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'},\n            {col : 'action', name : 'Action'}\n        ],\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<a href=\"#\">发送</a>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<a href=\"#\">发送</a>'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', action : '<a href=\"#\">发送</a>'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', action : '<a href=\"#\">发送</a>'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:单元格内嵌Vue组件\n---\n#demo\n>desc\n表格数据列表的内容会通过Vue渲染，所以你可以使用Vue组件。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    }\n}\n---\n#demo\n>desc\n你也可以通过`col-set`配置在标题中使用Vue组件。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name></ui-table>\n>script\n{\n    data : {\n        colset : [\n            {col : 'name', name : '<span>Name <ui-btn size=\"xxs\">查看更多</ui-btn></span>'},\n            {col : 'age', name : '<span>Age <i id=\"demo13\" class=\"mo-icon-question-cf\"></i> <ui-tip target=\"#demo13\">这里是详细信息</ui-tip></span>'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'},\n            {col : 'action', name : 'Action'}\n        ],\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '-'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '-'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '-'}\n        ]\n    }\n}\n---\n#demo\n>desc\n但需要注意的是由于在`list`配置中通过字符串模板的形式使用，所以在模板中的组件无法直接使用上下文的`props`、`data`、`methods`等属性或方法。\n<br><br>\n为此表格组件通过`context`来帮你精确定位上下文。\n>tpl\n<div>\n    <ui-table ref=\"demoPropsData\" :list=\"list\"></ui-table>\n    <ui-link js=\"this.btntext = '发送至邮箱'\">修改btntext</ui-link>\n</div>\n>script\n{\n    data : {\n        btntext : '发送',\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">{*context.btntext*}</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    }\n}\n---\n#demo\n>desc\n`methods`也同样可以通过`context`访问上下文。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\" @emit=\"context.send(0);\">第一个发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', action : '<ui-btn color=\"success\" size=\"xs\" @emit=\"context.send(1);\">第二个发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', action : '<ui-btn color=\"success\" size=\"xs\">发送</ui-btn> <ui-link color=\"minor\" size=\"xs\">详情</ui-link>'}\n        ]\n    },\n    methods : {\n        send : function (id) {\n            alert(`${this.list[id].name}发送成功!`);\n        }\n    }\n}\n---\n#demo\n>desc\n由于表格中使用的Vue模板是动态生成的，所以如果需要使用一些依赖元素绑定的组件（比如：`ui-tip`），则需要将这些组件也写到模板中。\n<br><br>\n>tpl\n<div>\n    <ui-table :list=\"list\"></ui-table>\n    <ui-tip target=\"#demo-tip-1\">这个提示不会显示</ui-tip>\n</div>\n>script\n{\n    data : {\n        list : [\n            {fisrt : '<span id=\"demo-tip-1\">第一个提示不会显示</span>', second : '<span id=\"demo-tip-2\">第二个提示会显示</span><ui-tip target=\"#demo-tip-2\">这个提示可以正常显示</ui-tip>', gender : 'male'},\n        ]\n    }\n}\n:::\n\n:::vue\n@name:嵌套子内容\n---\n#demo\n>desc\n注意使用嵌套子内容时，无法使用标题列(`col-set`中将列设为`title`)。\n>tpl\n<ui-table :list=\"mainList\"></ui-table>\n>script\n{\n    data : {\n        mainList : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer', __expand : '<ui-card><div>这里是卡片内容</div></ui-card>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher', __expand : '<ui-table :list=\"context.list1\"></ui-table>'}\n        ],\n        list1: [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:无数据\n---\n#demo\n>desc\n当表格无数据时会显示提示信息。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : []\n    }\n}\n---\n#demo\n>desc\n如果设置了表头，表头仍然会显示。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv title=\"无数据演示\"></ui-table>\n>script\n{\n    data : {\n        list : [],\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n[[[形态]]]\n\n#### 支持\n\n|类型|支持|默认|\n|-|-|-|\n|尺寸|`xs` / `s` / `m` / `l` / `xl`|`m`|\n|色彩|全部(除`transparent`)|`neutral-2`|\n|状态|不支持|-|\n\n<a href=\"/guide/status.html\">查看形态文档</a> / <a href=\"/design/color.html\">查看色彩文档</a>\n\n:::vue\n@name:尺寸\n---\n#renderer\n>name\nsize-repeat\n>rules\nxl,l,m,s,xs\n>tpl\n<br><br>\n<ui-table :list=\"window.demodata.list\" size=\"{$sizeKey}\" title=\"{$sizeName}的表格\" export-csv></ui-table>\n:::\n\n:::vue\n@layout:color\n---\n<br>\n<p>{$colorName}</p>\n<ui-table :list=\"window.demodata.list\" color=\"{$colorKey}\"></ui-table>\n:::\n\n[[[配置]]]\n\n:::vue\n@name:list\n---\n#config\n>conf-desc\n表格数据，这是一个数组，数组中每个对象是一行。对象的每个键是一列，键名是列的KEY，键值是列的数值。<br><br>表格的列是对象中所有键的合集，若某项缺少键，对应的单元格内会显示为`empty-cell`的内容。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>desc\n用于设置表格的数据，`list`数组内每一个对象是一行，对象的每个键是一列。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', age : 15, gender : 'female', job : 'doctors'},\n            {name : 'Shaun Moynihan', age : 27, gender : 'female', job : 'driver'},\n            {name : 'Emir Ayouni', age : 21, gender : 'male', job : 'gardener'}\n        ]\n    }\n}\n---\n#demo\n>desc\n表格的列是`list`中所有对象键的合集，若`list`中对象的键是不完全。\n>tpl\n<ui-table :list=\"list\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', job : 'doctors'},\n            {name : 'Shaun Moynihan'},\n            {}\n        ]\n    }\n}\n---\n#demo\n>desc\n在`list`中使用`__expand`来实现嵌套子内容。注意：无法同时使用标题列(`col-set`中将列设为`title`)。\n>tpl\n<ui-table :list=\"mainList\"></ui-table>\n>script\n{\n    data : {\n        mainList : [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer', __expand : '<ui-card><div>这里是卡片内容</div></ui-card>'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher', __expand : '<ui-table :list=\"context.list1\"></ui-table>'}\n        ],\n        list1: [\n            {name : 'Tim Boelaars', age : 20, gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female', job : 'engineer'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:empty-cell-value\n---\n#config\n>conf-desc\n如果某个单元格的内容是`undefined`，则设置的默认值。\n>conf-accept\n字符串\n>conf-type\nString\n>conf-default\n`'-'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" empty-cell-value=\"空\"></ui-table>\n>script\n{\n    data : {\n        list : [\n            {name : 'Tim Boelaars', gender : 'male', job : 'driver'},\n            {name : 'Andrew Colin Beck', age : 41, gender : 'female'},\n            {name : 'Gustavo Zambelli', age : 23, gender : 'male', job : 'teacher'},\n            {name : 'Victor Erixon', job : 'doctors'},\n            {name : 'Shaun Moynihan'},\n            {}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:title\n---\n#config\n>conf-desc\n表格的标题。\n>conf-accept\n标题字符串\n>conf-type\nString\n>conf-default\n`undefined`\n---\n#demo\n>tpl\n<ui-table :list=\"window.demodata.list\" title=\"这里是表格标题\"></ui-table>\n:::\n\n:::vue\n@name:zebra-pattern\n---\n#config\n>conf-desc\n表格斑马线样式。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n关闭斑马线样式。\n>tpl\n<ui-table :list=\"window.demodata.list\" :zebra-pattern=\"false\"></ui-table>\n:::\n\n:::vue\n@name:vertical-border\n---\n#config\n>conf-desc\n显示表格内的竖直边框。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n隐藏表格内竖直边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :vertical-border=\"false\"></ui-table>\n:::\n\n:::vue\n@name:horizontal-border\n---\n#config\n>conf-desc\n显示表格内的横向边框。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>desc\n隐藏表格内横向边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :horizontal-border=\"false\"></ui-table>\n---\n#demo\n>desc\n隐藏表格内所有边框。\n>tpl\n<ui-table :list=\"window.demodata.list\" :vertical-border=\"false\" :horizontal-border=\"false\"></ui-table>\n:::\n\n:::vue\n@name:align\n---\n#config\n>conf-desc\n列的对齐方式，这是单个表格的全局设置，可以使用`col-set`来单独设置某一列的对齐方式。\n>conf-accept\n`'left'`: 左对齐<br>`'center'`: 居中对齐<br>`'right'`: 右对齐\n>conf-type\nString\n>conf-default\n`'center'`\n---\n#demo\n>desc\n列内容右对齐。\n>tpl\n<ui-table :list=\"window.demodata.list\" align=\"right\"></ui-table>\n---\n#demo\n>desc\n列内容左对齐。\n>tpl\n<ui-table :list=\"window.demodata.list\" align=\"left\"></ui-table>\n:::\n\n:::vue\n@name:show-col-name\n---\n#config\n>conf-desc\n在标题行显示列的名称，需要先在`col-set`中设置每列的名称。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:fixed-title-col\n---\n#config\n>conf-desc\n标题列的位置，可以设置左侧或右侧。对于列数较多的表格，可以使用固定标题列。\n>conf-accept\n`'left'`: 位于左侧，不固定<br>`'right'`: 位于右侧，不固定<br>`'left-fixed'`: 位于左侧，固定<br>`'right-fixed'`: 位于右侧，固定\n>conf-type\nString\n>conf-default\n`'left'`\n---\n#demo\n>desc\n此配置需要先在`col-set`中设置标题列。\n<br><br>\n将标题列放到右侧。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在左侧。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left-fixed\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在右侧，且导出的表格的列顺序也一样。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right-fixed\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:fixed-title-row\n---\n#config\n>conf-desc\n固定标题行。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table style=\"height: 200px;\" :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" :fixed-title-row=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n配合`fixed-title-col`一起使用。\n>tpl\n<ui-table style=\"height: 200px;\" :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" :fixed-title-row=\"true\" fixed-title-col=\"left-fixed\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', minwidth : '300px'},\n            {col : 'job', name : 'Job', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:title-col-width\n---\n#config\n>conf-desc\n设置标题列的绝对宽度，请谨慎使用此配置，因为此宽度优先于其他配置的宽度。<br>若此配置为`0`，则不会启用。<br><br>此配置一般用来调整标题列与表格整体的占比。\n>conf-accept\n宽度数值(单位为px，无需添加单位)\n>conf-type\nNumber\n>conf-default\n`0`\n---\n#demo\n>desc\n将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'},\n            {col : 'country', name : 'Country'},\n            {col : 'height', name : 'Height'},\n            {col : 'weight', name : 'Body weight'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在左侧并将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"left-fixed\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n---\n#demo\n>desc\n将标题列固定在右侧并将宽度设为`150`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" fixed-title-col=\"right-fixed\" :title-col-width=\"150\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.biglist,\n        colset : [\n            {col : 'name', name : 'Name', title : true, minwidth : '120px'},\n            {col : 'age', name : 'Age', minwidth : '300px'},\n            {col : 'gender', name : 'Gender', title : true, minwidth : '80px'},\n            {col : 'job', name : 'Job', minwidth : '300px'},\n            {col : 'country', name : 'Country', minwidth : '300px'},\n            {col : 'height', name : 'Height', minwidth : '300px'},\n            {col : 'weight', name : 'Body weight', minwidth : '300px'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:col-set\n---\n#config\n>conf-desc\n列设置可以用来控制单独的一列。\n<br><br>\n`col-set`用于列控制，是一个数组，数组的每项都是一个配置对象。\n<br><br>\n配置对象包含下面这些属性，其中`col`用来定位需要设置列的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|col|需要设置列的KEY|列的KEY(`list`配置中设置)|String|`undefined`|\n|name|列的名称，如果开启`show-col-name`配置，名称会显示在标题行|名称|String|`undefined`|\n|width|列的宽度，此配置会改变列在宽度分配时的权重，但不一定完全符合设置的宽度值，如果需要最小最大宽度使用`minwidth`和`maxwidth`。<br>如果需要设置标题列的宽度请使用`title-col-width`配置。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|minwidth|列的最小宽度，注意列会尽可能遵循此值，但不是绝对一致的。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|maxwidth|列的最小宽度，注意列会尽可能遵循此值，但不是绝对一致的。|宽度数值(必需包含单位`px`或`%`)|String|`undefined`|\n|style|设置列的色彩样式|[设计/色彩](/design/color.html)中所有的颜色值|String|`undefined`|\n|disabled|是否展示列的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|列的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n|title|此列是否是标题列，根据`fixed-title-col`的设置所有的标题列会被放到最左或最右|`true`<br>`false`|Boolean|`false`|\n|hide|在表格中隐藏列，用于某些在`list`存在但不需要在展示的数据。列隐藏后在导出`.csv`文件时仍然会存在，如在导出`.csv`文件时也要排除，使用`col-set`配置的`export`属性来控制|`true`<br>`false`|Boolean|`false`|\n|export|导出`.csv`文件时，是否包含此列，若设为`false`此列不会被导出。一般包含行动区域的列会将此配置设为`false`|`true`<br>`false`|Boolean|`true`|\n|sort|开启单列排序，必需启用`show-col-name`才有效。多列排序需要启用`multi-sort`配置|`true`<br>`false`|Boolean|`false`|\n|sortmode|排序的模式，注意当`sortmode`不为`normal`时，必须开启`multi-sort`才生效。|`'normal'`:标准排序<br>`'asc desc'`:仅正倒序排序(默认正序)<br>`'desc asc'`:仅正倒序排序(默认倒序)<br>`'no asc'`:仅正序排序<br>`'no desc'`:仅倒序排序|String|`'normal'`|\n|filters|单列筛选项目，必需启用`show-col-name`才有效。<br><br>这是一个数组，数组中的每一项都是筛选项的对象，包含：<br>`name` : 选项名<br>`matcher` : 匹配值或匹配正则表达式|筛选项的数组|Array|`[]`|\n|pos|列的位置，这是一个数字，默认为0，表示按照数据输入的顺序。数值越大的列将会显示的越后面，数值也可以为负数。|位置数值|Number|`0`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nname\n>desc\n通过`name`及`show-col-name`设置标题行。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nname\n>desc\n标题行结合表头。\n>tpl\n<ui-table :list=\"list\" title=\"表名\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nwidth、minwidth、maxwidth\n>desc\n设置列的`width` 、 `minwidth` 、 `maxwidth`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', maxwidth : '50px'},\n            {col : 'age', name : 'Age', width : '150px'},\n            {col : 'gender', name : 'Gender', minwidth : '150px'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nstyle\n>desc\n设置指定列的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', style : 'primary'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n将单元格设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', disabled : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来单独设置某一列的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', align : 'right'},\n            {col : 'age', name : 'Age', align : 'left'},\n            {col : 'gender', name : 'Gender', align : 'center'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`来置标题列，标题列会被放置在最左或最右（通过`fixed-title-col`设置）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`设置标题列之后，导出的`csv`的列顺序也会保持一致。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\ntitle\n>desc\n使用`title`设置标题列之后，若未开启`show-col-name`，导出的`csv`不会包含标题行。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title : true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', title : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nhide\n>desc\n在表格中隐藏`Job`和`Gender`列，同时不导出`Gender`列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', hide : true, export : false},\n            {col : 'job', name : 'Job', hide : true}\n        ]\n    }\n}\n---\n#demo\n>title\nexport\n>desc\n不导出`Gender`列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender', export : false},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsort\n>desc\n通过`sort`字段可以开启单列排序(多列排序需要开启`multi-sort`配置)，并且导出的`csv`也是排序之后的顺序。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsort\n>desc\n标题列也可以使用`sort`。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, title : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsortmode\n>desc\n通过`sortmode`字段可以设置仅正序倒序排序，必须配合`multi-sort`配置。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-sort :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, sortmode : 'asc desc'},\n            {col : 'age', name : 'Age', sort : true, sortmode : 'asc desc'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsortmode\n>desc\n通过`sortmode`字段可以设置仅正序倒序排序，默认设置倒序，必须配合`multi-sort`配置。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-sort :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, sortmode : 'desc asc'},\n            {col : 'age', name : 'Age', sort : true, sortmode : 'desc asc'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nsortmode\n>desc\n通过`sortmode`字段可以设置仅支持正序，必须配合`multi-sort`配置。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-sort :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true, sortmode : 'no asc'},\n            {col : 'age', name : 'Age', sort : true, sortmode : 'no asc'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>title\nfilters\n>desc\n对Job和Age设置筛选器。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {\n                col : 'age',\n                name : 'Age',\n                filters : [\n                    {name : '10-19', matcher : /1[0-9]/},\n                    {name : '20-29', matcher : /2[0-9]/},\n                    {name : '40-49', matcher : /4[0-9]/},\n                ]\n            },\n            {col : 'gender', name : 'Gender'},\n            {\n                col : 'job',\n                name : 'Job',\n                filters : [\n                    {name : 'Driver', matcher : 'driver'},\n                    {name : 'Doctors', matcher : 'doctors'},\n                    {name : 'Gardener', matcher : /gardener/},\n                    {name : 'Teacher', matcher : /teacher/}\n                ]\n            }\n        ]\n    }\n}\n---\n#demo\n>title\npos\n>desc\n将`Name`的位置放到第三列，将`Age`放到第四列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :show-col-name=\"true\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', pos : 1},\n            {col : 'age', name : 'Age', pos : 2},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:row-set\n---\n#config\n>conf-desc\n单行设置可以用来控制一行。\n<br><br>\n`row-set`用于行控制，是一个数组，数组的每项都是一个配置对象，用来设置单行。\n<br><br>\n配置对象包含下面这些属性，其中`row`用来定位需要设置行的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|row|需要设置的行数(从0开始，在有标题行时，0表示标题行)|行数|Number|`undefined`|\n|style|设置行的色彩样式|[设计/色彩](/design/color.html)中所有的颜色值|String|`undefined`|\n|disabled|是否展示行的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|行的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n|disableSelection|此行在多选模式下处于禁用状态，用户无法改变选中状态，但`setCheckedRows()`方法可以改变选中状态（必须配合`multi-select`才生效）|`true`<br>`false`|Boolean|`false`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nstyle\n>desc\n设置指定行的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 0, style : 'success'},\n            {row : 2, style : 'warning'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n将单行设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :row-set=\"rowset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        rowset : [\n            {row : 1, disabled : true}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来设置单行的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 0, align : 'left'},\n            {row : 1, align : 'right'},\n            {row : 2, align : 'center'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisableSelection\n>desc\n使用`disableSelection`来禁用某一行的选中。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :row-set=\"rowset\" :show-col-name=\"true\" multi-select></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        rowset : [\n            {row : 1, disableSelection: true}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:cell-set\n---\n#config\n>conf-desc\n单元格设置可以用来控制单个单元格。\n<br><br>\n`cell-set`用于单元格控制，是一个数组，数组的每项都是一个配置对象，用来设置单个单元格。\n<br><br>\n配置对象包含下面这些属性，其中`row`和`col`用来定位需要设置单元格的位置。\n<br><br>\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|row|需要设置单元格的行数(从0开始，在有标题行时，0表示标题行)|行数|Number|`undefined`|\n|col|需要设置单元格所在列的KEY|列的KEY(`list`配置中设置)|String|`undefined`|\n|style|设置单元格的色彩样式|[设计/色彩](/design/color.html)中所有的颜色值|String|`undefined`|\n|disabled|是否展示单元格的禁用样式|`true`<br>`false`|Boolean|`false`|\n|align|单元格的对齐方式|`'left'`<br>`'right'`<br>`'align'`|String|`'align'`|\n<br>\n注意：在设置`width`、`minwidth`、`maxwidth`为0时，需要加上单位，如：`0px`或`0%`。\n>conf-accept\n数组\n>conf-type\nArray\n>conf-default\n`[]`\n---\n#demo\n>title\nstyle\n>desc\n设置指定单元格的样式（仅支持形态中的色彩）。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', style : 'success'},\n            {row : 2, col : 'age', style : 'warning'},\n            {row : 3, col : 'job', style : 'danger'}\n        ]\n    }\n}\n---\n#demo\n>title\ndisabled\n>desc\n设将单元格设置为禁用样式。\n>tpl\n<ui-table :list=\"list\" :cell-set=\"cellset\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        cellset : [\n            {row : 1, col : 'age', disabled : true}\n        ]\n    }\n}\n---\n#demo\n>title\nalign\n>desc\n使用`align`来单独设置单元格的对齐方式。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" :cell-set=\"cellset\" :show-col-name=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ],\n        cellset : [\n            {row : 0, col : 'age', align : 'left'},\n            {row : 1, col : 'age', align : 'right'},\n            {row : 2, col : 'age', align : 'center'},\n            {row : 3, col : 'age', align : 'left'},\n            {row : 4, col : 'age', align : 'right'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:export-csv\n---\n#config\n>conf-desc\n开启将表格导出csv文件的功能。<br><br>导出的表格单元格内容中若包含HTML，则会被过滤仅保留文本内容(若存在`<br>`则会被替换成换行符)。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:csv-name\n---\n#config\n>conf-desc\n导出csv文件的名称。\n>conf-accept\n文件名称(不需要加尾缀)\n>conf-type\nString\n>conf-default\n`undefined`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" export-csv csv-name=\"demo\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:custom-sort\n---\n#config\n>conf-desc\n自定义排序规则。使用`custom-sort`可以通过监听`col-sort`事件获取排序列的KEY和排序规则，然后通过自定义逻辑来修改`list`实现排序。\n<br>\n一般和服务端排序一起使用。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name custom-sort @col-sort=\"customSort\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    },\n    methods : {\n        customSort : function (key, type) {\n\n            if (type === 'desc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return val[key];\n\n                });\n\n            } else if (type === 'asc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return -val[key];\n\n                });\n\n            } else {\n\n                // 原始顺序\n                this.list = window.demodata.list;\n\n            }\n\n        }\n    }\n}\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name multi-sort custom-sort @col-sort=\"customSort\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', sort : true, sortmode : 'desc asc'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    },\n    methods : {\n        customSort : function (key, type) {\n\n            console.log(99, key, type);\n\n            if (type === 'desc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return val[key];\n\n                });\n\n            } else if (type === 'asc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return -val[key];\n\n                });\n\n            } else {\n\n                // 原始顺序\n                this.list = window.demodata.list;\n\n            }\n\n        }\n    }\n}\n:::\n\n:::vue\n@name:multi-sort\n---\n#config\n>conf-desc\n支持多列排序，默认只支持单列排序。多列排序时会根据所选排序列的顺序进行多次排序。使用此配置前需要先通过`col-set`的指定排序列。\n<br>\n注意若使用了`custom-sort`，则此配置无效。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n使用`multi-sort`后设置多个排序列，当多个列进行排序时会按照先后顺序对表格进行多次排序。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" show-col-name multi-sort export-csv></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', sort : true},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender', sort : true},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:highlight-row\n---\n#config\n>conf-desc\n是否高亮行，开启后最后点击的行会被高亮，同时也可以通过`setHighlightRow()`方法来高亮指定行，同一时间只能高亮一行。\n<br><br>\n也可以通过`row-set`配置来实现类似的功能，区别在于此配置可以通过`getHighlightRow()`来获取最后点击行，从而实现单选的功能。\n<br>\n同时也可以通过`cleanHighlightRow()`来取消高亮最后点击行。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n开启此配置后，最后点击的行将被高亮。\n>tpl\n<ui-table :list=\"list\" highlight-row></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:highlight-row-background\n---\n#config\n>conf-desc\n当启用`highlight-row`配置后，高亮行的背景颜色。默认背景色(`default`)将匹配组件本身设置的色彩(`color`配置)。\n>conf-accept\n`'default'`<br>任意合法的`background-color`(CSS)的数值\n>conf-type\nString\n>conf-default\n`'default'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" highlight-row highlight-row-background=\"#A5C7FF\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:highlight-row-color\n---\n#config\n>conf-desc\n当启用`highlight-row`配置后，高亮行的文字颜色。默认文字颜色(`default`)将匹配组件本身设置的色彩(`color`配置)。\n>conf-accept\n`'default'`<br>任意合法的`color`(CSS)的数值\n>conf-type\nString\n>conf-default\n`'default'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" highlight-row highlight-row-background=\"#2879FA\" highlight-row-color=\"#FFF\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:multi-select\n---\n#config\n>conf-desc\n表格可多选（多选仅行可用）。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>desc\n开启此配置后，可以选择表格的行。\n>tpl\n<ui-table :list=\"list\" multi-select></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n---\n#demo\n>desc\n开启`show-col-name`配置后，会展示全选的复选框。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-select show-col-name></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n---\n#demo\n>desc\n开启`fixed-title-col`配置后，复选框也会固定到标题列。\n>tpl\n<ui-table :list=\"list\" :col-set=\"colset\" multi-select show-col-name fixed-title-col=\"left\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name', title: true},\n            {col : 'age', name : 'Age'},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    }\n}\n:::\n\n:::vue\n@name:no-hover-effect\n---\n#config\n>conf-desc\n是否显示鼠标`hover`时的效果。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`true`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :hover-effect=\"false\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:loading\n---\n#config\n>conf-desc\n表格是否处于数据加载状态。\n>conf-accept\n`true`<br>`false`\n>conf-type\nBoolean\n>conf-default\n`false`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :loading=\"true\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:loading-note\n---\n#config\n>conf-desc\n当表格处于数据加载状态时的提示内容。\n>conf-accept\n提示文案\n>conf-type\nString\n>conf-default\n`'数据加载中...'`\n---\n#demo\n>tpl\n<ui-table :list=\"list\" :loading=\"true\" loading-note=\"请稍后\"></ui-table>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n[[[方法]]]\n\n:::vue\n@name:getHighlightRow()\n---\n#method\n>method-desc\n获取高亮的行号（从`0`开始），需要开启`highlight-row`配置，否则返回`-1`。\n>method-return\n高亮的行号。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo1\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"alert(morning.findVM('demo1').getHighlightRow());\">获取高亮的行号</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:setHighlightRow(rowNum)\n---\n#method\n>method-desc\n高亮指定的行，需要开启`highlight-row`才生效。\n>method-args\n|rowNum|NO|需要高亮的行数|行数(从`0`开始)|`Number`|`undefined`|\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo3\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo3').setHighlightRow(1);\">高亮第二行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:cleanHighlightRow()\n---\n#method\n>method-desc\n清除高亮行，需要开启`highlight-row`配置才有效。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo2\" :list=\"list\" highlight-row></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo2').cleanHighlightRow();\">清除高亮行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:getCheckedRows()\n---\n#method\n>method-desc\n获取选中的行号（从`0`开始），需要开启`multi-select`配置。\n>method-return\n选中的行号组成的数组。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo4\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"alert(morning.findVM('demo4').getCheckedRows().join(','));\">获取选中的行号</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:setCheckedRows(rows)\n---\n#method\n>method-desc\n选中特定的行，需要开启`multi-select`配置。\n>method-args\n|rows|YES|需要选中行数(从`0`开始的数字)所组成的数组。|数组<br>`undefined`|`Array`<br>`Undefined`|`undefined`|\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo9\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo9').setCheckedRows([1, 4]);\">选中第3、5行</ui-link><br>\n    <ui-link js=\"morning.findVM('demo9').setCheckedRows();\">取消选中所有行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:checkedAllRows()\n---\n#method\n>method-desc\n选中所有行，需要开启`multi-select`配置。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo11\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo11').checkedAllRows();\">选中所有行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:uncheckAllRows()\n---\n#method\n>method-desc\n取消选中所有行，需要开启`multi-select`配置。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo12\" :list=\"list\" multi-select></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo12').uncheckAllRows();\">取消选中所有行</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n:::vue\n@name:exportToCsv()\n---\n#method\n>method-desc\n导出表格内容至`csv`文件并下载。\n>method-return\n当前组件VM实例。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo14\" :list=\"list\"></ui-table>\n    <br><br> \n    <ui-link js=\"morning.findVM('demo14').exportToCsv();\">导出数据</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    }\n}\n:::\n\n[[[事件]]]\n\n:::vue\n@name:list-change\n---\n#event\n>event-desc\n当表格数据变化后触发。\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo2\" :list=\"list\" @list-change=\"echo\"></ui-table>\n    <br><br>\n    <ui-link js=\"morning.findVM('demo2').conf.list = window.demodata.biglist;\">重新设置表格数据</ui-link>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function () {\n            console.log('demo2.console1', `list-change event!`);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-click\n---\n#event\n>event-desc\n当单元格被点击时触发。\n>event-args\n|rowNum|被点击单元格所在的行号(从`0`开始)|`Number`|\n|colKey|被点击单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo5\" :list=\"list\" @cell-click=\"echo\"></ui-table>\n    <br><br>\n    <p>点击单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo5.console1', `cell-click event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-enter\n---\n#event\n>event-desc\n当鼠标移入单元格时触发。\n>event-args\n|rowNum|鼠标移入单元格所在的行号(从`0`开始)|`Number`|\n|colKey|鼠标移入单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo6\" :list=\"list\" @cell-enter=\"echo\"></ui-table>\n    <br><br>\n    <p>鼠标移入单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo6.console1', `cell-enter event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@name:cell-leave\n---\n#event\n>event-desc\n当鼠标移出单元格时触发。\n>event-args\n|rowNum|鼠标移出单元格所在的行号(从`0`开始)|`Number`|\n|colKey|鼠标移出单元格所在列的`key`|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo7\" :list=\"list\" @cell-leave=\"echo\"></ui-table>\n    <br><br>\n    <p>鼠标移出单元格触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function (rowNum, colKey) {\n            console.log('demo7.console1', `cell-leave event!`, rowNum, colKey);\n        }\n    }\n}\n:::\n\n:::vue\n@name:highlight-row-change\n---\n#event\n>event-desc\n当高亮行改变时触发，仅在开启`highlight-row`配置后有效。\n<br>\n可以通过`getHighlightRow()`方法来获取高亮的行\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo9\" :list=\"list\" highlight-row @highlight-row-change=\"echo\"></ui-table>\n    <br><br>\n    <p>点击行触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function () {\n            console.log('demo9.console1', `highlight-row-change event!`);\n        }\n    }\n}\n:::\n\n:::vue\n@name:checked-row-change\n---\n#event\n>event-desc\n当选中行发生改变时触发，仅在开启`multi-select`配置后有效。\n<br>\n可以通过`getCheckedRows()`方法来获取选中的行\n---\n#demo\n>tpl\n<div>\n    <ui-table ref=\"demo8\" :list=\"list\" multi-select @checked-row-change=\"echo\"></ui-table>\n    <br><br>\n    <p>选中行触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list\n    },\n    methods : {\n        echo : function () {\n            console.log('demo8.console1', `checked-row-change event!`);\n        }\n    }\n}\n:::\n\n:::vue\n@name:col-sort\n---\n#event\n>event-desc\n当列发生排序时触发。\n>event-args\n|key|当前排序列的KEY|`String`|\n|type|排序方式，包含：`asc`:升序，`desc`:降序，`no`:无排序|`String`|\n---\n#demo\n>tpl\n<div>\n    <ui-table :list=\"list\" :col-set=\"colset\" show-col-name custom-sort @col-sort=\"customSort\"></ui-table>\n    <p>点击排序触发事件</p>\n</div>\n>script\n{\n    data : {\n        list : window.demodata.list,\n        colset : [\n            {col : 'name', name : 'Name'},\n            {col : 'age', name : 'Age', sort : true},\n            {col : 'gender', name : 'Gender'},\n            {col : 'job', name : 'Job'}\n        ]\n    },\n    methods : {\n        customSort : function (key, type) {\n\n            console.log('demo10.console1', `col-sort event!`, key, type);\n\n            if (type === 'desc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return val[key];\n\n                });\n\n            } else if (type === 'asc') {\n\n                this.list = sortby(this.list, (val) => {\n\n                    return -val[key];\n\n                });\n\n            } else {\n\n                // 原始顺序\n                this.list = window.demodata.list;\n\n            }\n\n        }\n    }\n}\n:::\n\n:::vue\n@layout:lifecycle-event\n---\ntable\n表格\n:::\n\n[[[源码]]]\n\n<iframe src=\"/report/coverage/lib/components/table/index.vue.html\" name=\"codeFrame\" frameborder=\"0\" onload=\"this.height=codeFrame.document.body.scrollHeight\"></iframe>\n\n")])])},i=[];o._withStripped=!0,t.d(e,"a",(function(){return o})),t.d(e,"b",(function(){return i}))},744:function(n,e,t){"use strict";var o=l(t(1)),i=l(t(745));function l(n){return n&&n.__esModule?n:{default:n}}new o.default({el:"#root",render:function(n){return n(i.default)}})},745:function(n,e,t){"use strict";t.r(e);var o=t(407),i=t(144);for(var l in i)"default"!==l&&function(n){t.d(e,n,(function(){return i[n]}))}(l);var a=t(0),r=Object(a.a)(i.default,o.a,o.b,!1,null,null,null);r.options.__file="src/docs/pages/component/table/index.vue",e.default=r.exports},746:function(n,e,t){(function(n,t){var o=200,i="Expected a function",l="__lodash_hash_undefined__",a=1,r=2,c=1/0,s=9007199254740991,d="[object Arguments]",u="[object Array]",m="[object Boolean]",f="[object Date]",b="[object Error]",g="[object Function]",h="[object GeneratorFunction]",p="[object Map]",w="[object Number]",v="[object Object]",y="[object RegExp]",x="[object Set]",j="[object String]",_="[object Symbol]",k="[object ArrayBuffer]",A="[object DataView]",S=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,N=/^\w*$/,G=/^\./,B=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,J=/\\(\\)?/g,M=/^\[object .+?Constructor\]$/,z=/^(?:0|[1-9]\d*)$/,O={};O["[object Float32Array]"]=O["[object Float64Array]"]=O["[object Int8Array]"]=O["[object Int16Array]"]=O["[object Int32Array]"]=O["[object Uint8Array]"]=O["[object Uint8ClampedArray]"]=O["[object Uint16Array]"]=O["[object Uint32Array]"]=!0,O[d]=O[u]=O[k]=O[m]=O[A]=O[f]=O[b]=O[g]=O[p]=O[w]=O[v]=O[y]=O[x]=O[j]=O["[object WeakMap]"]=!1;var C="object"==typeof n&&n&&n.Object===Object&&n,E="object"==typeof self&&self&&self.Object===Object&&self,T=C||E||Function("return this")(),V=e&&!e.nodeType&&e,R=V&&"object"==typeof t&&t&&!t.nodeType&&t,H=R&&R.exports===V&&C.process,K=function(){try{return H&&H.binding("util")}catch(n){}}(),$=K&&K.isTypedArray;function P(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}function Z(n,e){for(var t=-1,o=n?n.length:0,i=Array(o);++t<o;)i[t]=e(n[t],t,n);return i}function F(n,e){for(var t=-1,o=e.length,i=n.length;++t<o;)n[i+t]=e[t];return n}function L(n,e){for(var t=-1,o=n?n.length:0;++t<o;)if(e(n[t],t,n))return!0;return!1}function Y(n){return function(e){return n(e)}}function U(n){var e=!1;if(null!=n&&"function"!=typeof n.toString)try{e=!!(n+"")}catch(n){}return e}function D(n){var e=-1,t=Array(n.size);return n.forEach((function(n,o){t[++e]=[o,n]})),t}function I(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}var W,q,Q,X=Array.prototype,nn=Function.prototype,en=Object.prototype,tn=T["__core-js_shared__"],on=(W=/[^.]+$/.exec(tn&&tn.keys&&tn.keys.IE_PROTO||""))?"Symbol(src)_1."+W:"",ln=nn.toString,an=en.hasOwnProperty,rn=en.toString,cn=RegExp("^"+ln.call(an).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),sn=T.Symbol,dn=T.Uint8Array,un=en.propertyIsEnumerable,mn=X.splice,fn=sn?sn.isConcatSpreadable:void 0,bn=(q=Object.keys,Q=Object,function(n){return q(Q(n))}),gn=Math.max,hn=Qn(T,"DataView"),pn=Qn(T,"Map"),wn=Qn(T,"Promise"),vn=Qn(T,"Set"),yn=Qn(T,"WeakMap"),xn=Qn(Object,"create"),jn=ce(hn),_n=ce(pn),kn=ce(wn),An=ce(vn),Sn=ce(yn),Nn=sn?sn.prototype:void 0,Gn=Nn?Nn.valueOf:void 0,Bn=Nn?Nn.toString:void 0;function Jn(n){var e=-1,t=n?n.length:0;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}function Mn(n){var e=-1,t=n?n.length:0;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}function zn(n){var e=-1,t=n?n.length:0;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}function On(n){var e=-1,t=n?n.length:0;for(this.__data__=new zn;++e<t;)this.add(n[e])}function Cn(n){this.__data__=new Mn(n)}function En(n,e){var t=fe(n)||me(n)?function(n,e){for(var t=-1,o=Array(n);++t<n;)o[t]=e(t);return o}(n.length,String):[],o=t.length,i=!!o;for(var l in n)!e&&!an.call(n,l)||i&&("length"==l||ee(l,o))||t.push(l);return t}function Tn(n,e){for(var t=n.length;t--;)if(ue(n[t][0],e))return t;return-1}Jn.prototype.clear=function(){this.__data__=xn?xn(null):{}},Jn.prototype.delete=function(n){return this.has(n)&&delete this.__data__[n]},Jn.prototype.get=function(n){var e=this.__data__;if(xn){var t=e[n];return t===l?void 0:t}return an.call(e,n)?e[n]:void 0},Jn.prototype.has=function(n){var e=this.__data__;return xn?void 0!==e[n]:an.call(e,n)},Jn.prototype.set=function(n,e){return this.__data__[n]=xn&&void 0===e?l:e,this},Mn.prototype.clear=function(){this.__data__=[]},Mn.prototype.delete=function(n){var e=this.__data__,t=Tn(e,n);return!(t<0)&&(t==e.length-1?e.pop():mn.call(e,t,1),!0)},Mn.prototype.get=function(n){var e=this.__data__,t=Tn(e,n);return t<0?void 0:e[t][1]},Mn.prototype.has=function(n){return Tn(this.__data__,n)>-1},Mn.prototype.set=function(n,e){var t=this.__data__,o=Tn(t,n);return o<0?t.push([n,e]):t[o][1]=e,this},zn.prototype.clear=function(){this.__data__={hash:new Jn,map:new(pn||Mn),string:new Jn}},zn.prototype.delete=function(n){return qn(this,n).delete(n)},zn.prototype.get=function(n){return qn(this,n).get(n)},zn.prototype.has=function(n){return qn(this,n).has(n)},zn.prototype.set=function(n,e){return qn(this,n).set(n,e),this},On.prototype.add=On.prototype.push=function(n){return this.__data__.set(n,l),this},On.prototype.has=function(n){return this.__data__.has(n)},Cn.prototype.clear=function(){this.__data__=new Mn},Cn.prototype.delete=function(n){return this.__data__.delete(n)},Cn.prototype.get=function(n){return this.__data__.get(n)},Cn.prototype.has=function(n){return this.__data__.has(n)},Cn.prototype.set=function(n,e){var t=this.__data__;if(t instanceof Mn){var i=t.__data__;if(!pn||i.length<o-1)return i.push([n,e]),this;t=this.__data__=new zn(i)}return t.set(n,e),this};var Vn,Rn,Hn=(Vn=function(n,e){return n&&Kn(n,e,xe)},function(n,e){if(null==n)return n;if(!be(n))return Vn(n,e);for(var t=n.length,o=Rn?t:-1,i=Object(n);(Rn?o--:++o<t)&&!1!==e(i[o],o,i););return n});var Kn=function(n){return function(e,t,o){for(var i=-1,l=Object(e),a=o(e),r=a.length;r--;){var c=a[n?r:++i];if(!1===t(l[c],c,l))break}return e}}();function $n(n,e){for(var t=0,o=(e=oe(e,n)?[e]:Dn(e)).length;null!=n&&t<o;)n=n[re(e[t++])];return t&&t==o?n:void 0}function Pn(n,e){return null!=n&&e in Object(n)}function Zn(n,e,t,o,i){return n===e||(null==n||null==e||!pe(n)&&!we(e)?n!=n&&e!=e:function(n,e,t,o,i,l){var c=fe(n),s=fe(e),g=u,h=u;c||(g=(g=Xn(n))==d?v:g);s||(h=(h=Xn(e))==d?v:h);var S=g==v&&!U(n),N=h==v&&!U(e),G=g==h;if(G&&!S)return l||(l=new Cn),c||ye(n)?Wn(n,e,t,o,i,l):function(n,e,t,o,i,l,c){switch(t){case A:if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case k:return!(n.byteLength!=e.byteLength||!o(new dn(n),new dn(e)));case m:case f:case w:return ue(+n,+e);case b:return n.name==e.name&&n.message==e.message;case y:case j:return n==e+"";case p:var s=D;case x:var d=l&r;if(s||(s=I),n.size!=e.size&&!d)return!1;var u=c.get(n);if(u)return u==e;l|=a,c.set(n,e);var g=Wn(s(n),s(e),o,i,l,c);return c.delete(n),g;case _:if(Gn)return Gn.call(n)==Gn.call(e)}return!1}(n,e,g,t,o,i,l);if(!(i&r)){var B=S&&an.call(n,"__wrapped__"),J=N&&an.call(e,"__wrapped__");if(B||J){var M=B?n.value():n,z=J?e.value():e;return l||(l=new Cn),t(M,z,o,i,l)}}if(!G)return!1;return l||(l=new Cn),function(n,e,t,o,i,l){var a=i&r,c=xe(n),s=c.length,d=xe(e).length;if(s!=d&&!a)return!1;var u=s;for(;u--;){var m=c[u];if(!(a?m in e:an.call(e,m)))return!1}var f=l.get(n);if(f&&l.get(e))return f==e;var b=!0;l.set(n,e),l.set(e,n);var g=a;for(;++u<s;){m=c[u];var h=n[m],p=e[m];if(o)var w=a?o(p,h,m,e,n,l):o(h,p,m,n,e,l);if(!(void 0===w?h===p||t(h,p,o,i,l):w)){b=!1;break}g||(g="constructor"==m)}if(b&&!g){var v=n.constructor,y=e.constructor;v!=y&&"constructor"in n&&"constructor"in e&&!("function"==typeof v&&v instanceof v&&"function"==typeof y&&y instanceof y)&&(b=!1)}return l.delete(n),l.delete(e),b}(n,e,t,o,i,l)}(n,e,Zn,t,o,i))}function Fn(n){return!(!pe(n)||function(n){return!!on&&on in n}(n))&&(ge(n)||U(n)?cn:M).test(ce(n))}function Ln(n){return"function"==typeof n?n:null==n?je:"object"==typeof n?fe(n)?function(n,e){if(oe(n)&&ie(e))return le(re(n),e);return function(t){var o=function(n,e,t){var o=null==n?void 0:$n(n,e);return void 0===o?t:o}(t,n);return void 0===o&&o===e?function(n,e){return null!=n&&function(n,e,t){e=oe(e,n)?[e]:Dn(e);var o,i=-1,l=e.length;for(;++i<l;){var a=re(e[i]);if(!(o=null!=n&&t(n,a)))break;n=n[a]}if(o)return o;return!!(l=n?n.length:0)&&he(l)&&ee(a,l)&&(fe(n)||me(n))}(n,e,Pn)}(t,n):Zn(e,o,void 0,a|r)}}(n[0],n[1]):function(n){var e=function(n){var e=xe(n),t=e.length;for(;t--;){var o=e[t],i=n[o];e[t]=[o,i,ie(i)]}return e}(n);if(1==e.length&&e[0][2])return le(e[0][0],e[0][1]);return function(t){return t===n||function(n,e,t,o){var i=t.length,l=i,c=!o;if(null==n)return!l;for(n=Object(n);i--;){var s=t[i];if(c&&s[2]?s[1]!==n[s[0]]:!(s[0]in n))return!1}for(;++i<l;){var d=(s=t[i])[0],u=n[d],m=s[1];if(c&&s[2]){if(void 0===u&&!(d in n))return!1}else{var f=new Cn;if(o)var b=o(u,m,d,n,e,f);if(!(void 0===b?Zn(m,u,o,a|r,f):b))return!1}}return!0}(t,n,e)}}(n):oe(e=n)?(t=re(e),function(n){return null==n?void 0:n[t]}):function(n){return function(e){return $n(e,n)}}(e);var e,t}function Yn(n){if(t=(e=n)&&e.constructor,o="function"==typeof t&&t.prototype||en,e!==o)return bn(n);var e,t,o,i=[];for(var l in Object(n))an.call(n,l)&&"constructor"!=l&&i.push(l);return i}function Un(n,e,t){var o=-1;return e=Z(e.length?e:[je],Y(Ln)),function(n,e){var t=n.length;for(n.sort(e);t--;)n[t]=n[t].value;return n}(function(n,e){var t=-1,o=be(n)?Array(n.length):[];return Hn(n,(function(n,i,l){o[++t]=e(n,i,l)})),o}(n,(function(n,t,i){return{criteria:Z(e,(function(e){return e(n)})),index:++o,value:n}})),(function(n,e){return function(n,e,t){var o=-1,i=n.criteria,l=e.criteria,a=i.length,r=t.length;for(;++o<a;){var c=In(i[o],l[o]);if(c){if(o>=r)return c;var s=t[o];return c*("desc"==s?-1:1)}}return n.index-e.index}(n,e,t)}))}function Dn(n){return fe(n)?n:ae(n)}function In(n,e){if(n!==e){var t=void 0!==n,o=null===n,i=n==n,l=ve(n),a=void 0!==e,r=null===e,c=e==e,s=ve(e);if(!r&&!s&&!l&&n>e||l&&a&&c&&!r&&!s||o&&a&&c||!t&&c||!i)return 1;if(!o&&!l&&!s&&n<e||s&&t&&i&&!o&&!l||r&&t&&i||!a&&i||!c)return-1}return 0}function Wn(n,e,t,o,i,l){var c=i&r,s=n.length,d=e.length;if(s!=d&&!(c&&d>s))return!1;var u=l.get(n);if(u&&l.get(e))return u==e;var m=-1,f=!0,b=i&a?new On:void 0;for(l.set(n,e),l.set(e,n);++m<s;){var g=n[m],h=e[m];if(o)var p=c?o(h,g,m,e,n,l):o(g,h,m,n,e,l);if(void 0!==p){if(p)continue;f=!1;break}if(b){if(!L(e,(function(n,e){if(!b.has(e)&&(g===n||t(g,n,o,i,l)))return b.add(e)}))){f=!1;break}}else if(g!==h&&!t(g,h,o,i,l)){f=!1;break}}return l.delete(n),l.delete(e),f}function qn(n,e){var t,o,i=n.__data__;return("string"==(o=typeof(t=e))||"number"==o||"symbol"==o||"boolean"==o?"__proto__"!==t:null===t)?i["string"==typeof e?"string":"hash"]:i.map}function Qn(n,e){var t=function(n,e){return null==n?void 0:n[e]}(n,e);return Fn(t)?t:void 0}var Xn=function(n){return rn.call(n)};function ne(n){return fe(n)||me(n)||!!(fn&&n&&n[fn])}function ee(n,e){return!!(e=null==e?s:e)&&("number"==typeof n||z.test(n))&&n>-1&&n%1==0&&n<e}function te(n,e,t){if(!pe(t))return!1;var o=typeof e;return!!("number"==o?be(t)&&ee(e,t.length):"string"==o&&e in t)&&ue(t[e],n)}function oe(n,e){if(fe(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!ve(n))||(N.test(n)||!S.test(n)||null!=e&&n in Object(e))}function ie(n){return n==n&&!pe(n)}function le(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}(hn&&Xn(new hn(new ArrayBuffer(1)))!=A||pn&&Xn(new pn)!=p||wn&&"[object Promise]"!=Xn(wn.resolve())||vn&&Xn(new vn)!=x||yn&&"[object WeakMap]"!=Xn(new yn))&&(Xn=function(n){var e=rn.call(n),t=e==v?n.constructor:void 0,o=t?ce(t):void 0;if(o)switch(o){case jn:return A;case _n:return p;case kn:return"[object Promise]";case An:return x;case Sn:return"[object WeakMap]"}return e});var ae=de((function(n){var e;n=null==(e=n)?"":function(n){if("string"==typeof n)return n;if(ve(n))return Bn?Bn.call(n):"";var e=n+"";return"0"==e&&1/n==-c?"-0":e}(e);var t=[];return G.test(n)&&t.push(""),n.replace(B,(function(n,e,o,i){t.push(o?i.replace(J,"$1"):e||n)})),t}));function re(n){if("string"==typeof n||ve(n))return n;var e=n+"";return"0"==e&&1/n==-c?"-0":e}function ce(n){if(null!=n){try{return ln.call(n)}catch(n){}try{return n+""}catch(n){}}return""}var se=function(n,e){return e=gn(void 0===e?n.length-1:e,0),function(){for(var t=arguments,o=-1,i=gn(t.length-e,0),l=Array(i);++o<i;)l[o]=t[e+o];o=-1;for(var a=Array(e+1);++o<e;)a[o]=t[o];return a[e]=l,P(n,this,a)}}((function(n,e){if(null==n)return[];var t=e.length;return t>1&&te(n,e[0],e[1])?e=[]:t>2&&te(e[0],e[1],e[2])&&(e=[e[0]]),Un(n,function n(e,t,o,i,l){var a=-1,r=e.length;for(o||(o=ne),l||(l=[]);++a<r;){var c=e[a];t>0&&o(c)?t>1?n(c,t-1,o,i,l):F(l,c):i||(l[l.length]=c)}return l}(e,1),[])}));function de(n,e){if("function"!=typeof n||e&&"function"!=typeof e)throw new TypeError(i);var t=function(){var o=arguments,i=e?e.apply(this,o):o[0],l=t.cache;if(l.has(i))return l.get(i);var a=n.apply(this,o);return t.cache=l.set(i,a),a};return t.cache=new(de.Cache||zn),t}function ue(n,e){return n===e||n!=n&&e!=e}function me(n){return function(n){return we(n)&&be(n)}(n)&&an.call(n,"callee")&&(!un.call(n,"callee")||rn.call(n)==d)}de.Cache=zn;var fe=Array.isArray;function be(n){return null!=n&&he(n.length)&&!ge(n)}function ge(n){var e=pe(n)?rn.call(n):"";return e==g||e==h}function he(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=s}function pe(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function we(n){return!!n&&"object"==typeof n}function ve(n){return"symbol"==typeof n||we(n)&&rn.call(n)==_}var ye=$?Y($):function(n){return we(n)&&he(n.length)&&!!O[rn.call(n)]};function xe(n){return be(n)?En(n):Yn(n)}function je(n){return n}t.exports=se}).call(this,t(289),t(434)(n))}});