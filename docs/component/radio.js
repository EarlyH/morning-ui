!function(n){function e(e){for(var t,a,d=e[0],l=e[1],u=e[2],c=0,m=[];c<d.length;c++)a=d[c],r[a]&&m.push(r[a][0]),r[a]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(n[t]=l[t]);for(s&&s(e);m.length;)m.shift()();return o.push.apply(o,u||[]),i()}function i(){for(var n,e=0;e<o.length;e++){for(var i=o[e],t=!0,d=1;d<i.length;d++){var l=i[d];0!==r[l]&&(t=!1)}t&&(o.splice(e--,1),n=a(a.s=i[0]))}return n}var t={},r={46:0};var o=[];function a(e){if(t[e])return t[e].exports;var i=t[e]={i:e,l:!1,exports:{}};return n[e].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=n,a.c=t,a.d=function(n,e,i){a.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:i})},a.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/";var d=window.webpackJsonp=window.webpackJsonp||[],l=d.push.bind(d);d.push=e,d=d.slice();for(var u=0;u<d.length;u++)e(d[u]);var s=l;o.push([315,0]),i()}({1:function(n,e){n.exports=Vue},153:function(n,e,i){"use strict";i.d(e,"a",function(){return t}),i.d(e,"b",function(){return r});var t=function(){var n=this.$createElement,e=this._self._c||n;return e("doc-component",{attrs:{page:this.page,hasPadding:!0}},[e("script",{attrs:{type:"text/markdown"}},[this._v("\n# 单选框组 `<ui-radio>`\n\n<doc-component-status page=\"radio\"></doc-component-status>\n\n[[[开始]]]\n\n定义单选框组，单选框组只能单选，若需要多选请使用`ui-checkbox`。\n\n#### 使用\n\n:::democode/html\n<div style=\"width:300px;\">\n    <ui-radio form-name=\"姓名\" :list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"></ui-radio>\n</div>\n:::\n\n#### 带边框的单选框组\n\n通过`border`样式类指定单选框组以带边框的样式显示：\n\n:::democode/html\n<div style=\"width:320px;\">\n    <ui-radio form-name=\"姓名\" class=\"border\" :list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"></ui-radio>\n</div>\n:::\n\n#### 垂直布局的单选框组\n\n:::democode/html\n<div style=\"width:320px;\">\n    <ui-radio form-name=\"姓名\" class=\"vertical\" :list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"></ui-radio>\n</div>\n:::\n\n[[[形态]]]\n\n:::preset/html\nformStatusWithStyle\n---\nuikey:radio\nstatusDefaultValue:'Tim'\nstatusMoreAttr::list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"\n:::\n\n[[[配置]]]\n\n:::preset/html\nformConfigTable\n---\n|[accept-html](#accept-html)|项目的的名称可以使用HTML|`true`<br>`false`|Boolean|`false`|\n|[list](#list)|可选项目列表|可选项目列表的对象，键名是key，键值是name用于显示|Object|`{}`|\n|[disabled-options](#disabled-options)|禁止选中的项目（`set()`方法仍然可以选中禁止的项目，但`toggle()`方法无法选中禁止的项目）。|由禁止修改项目键名(key)组成的数组|Array|`[]`|\n:::\n\n:::preset/html\nformConfigDemo\n---\nuikey:radio\nconfigDefaultValue:'Tim'\nconfigMoreAttr::list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"\n:::\n\n#### accept-html\n\n如果让`ui-radio`的显示文本，渲染成HTML，而不是字符串。可以设置`accept-html`。\n\n:::vue/html\nnew Vue({\n    el : '{$el}',\n    template : '{$template}',\n    data : function () {\n        return {\n            list : {\n                Red : '<span style=\"color:red;\">我是红色span</span>',\n                Green : '<span style=\"color:green;\">我是绿色span</span>'\n            }\n        }\n    }\n});\n---\n<div style=\"width:300px;\">\n    <ui-radio\n        form-name=\"姓名\"\n        accept-html\n        :list=\"list\"\n    ></ui-radio>\n</div>\n:::\n\n#### list\n\n:::democode/html\n<div style=\"width:300px;\">\n    <ui-radio form-name=\"姓名\" :list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"></ui-radio>\n</div>\n:::\n\n#### disabled-options\n\n被禁止的项目将无法选中：\n\n:::democode/html\n<div style=\"width:300px;\">\n    <ui-radio form-name=\"姓名\" :list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon',Shaun:'Shaun Moynihan',Emir:'Emir Ayouni'}\" :disabled-options=\"['Tim', 'Victor']\"></ui-radio>\n</div>\n:::\n\n若禁止的项目已经被选中，则组件会清空：\n\n:::democode/html\n<div style=\"width:300px;\">\n    <ui-radio form-name=\"姓名\" :list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon',Shaun:'Shaun Moynihan',Emir:'Emir Ayouni'}\" :disabled-options=\"['Tim', 'Victor']\" default-value=\"Tim\"></ui-radio>\n</div>\n:::\n\n[[[方法]]]\n\n:::preset/html\nformMethod\n---\nuikey:radio\nmethodValue:'Tim'\nmethodDefaultValue:'Tim'\nmethodMoreAttr::list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"\n:::\n\n#### toggle(key)\n\n选中单个选项。\n\n|KEY|可选|描述|接受值|值类型|默认值|\n|-|-|-|-|-|-|\n|key|NO|需要选中选项的键值|键值字符串|`String`|`undefined`|\n\n:::democode/html\n<div style=\"width:300px;\">\n    <ui-radio ref=\"demo2\" form-name=\"姓名\" :list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"></ui-radio>\n</div>\n<br>\n<ui-link js=\"morning.findVM('demo2').toggle('Tim');\">选中Tim</ui-link>\n<ui-link js=\"morning.findVM('demo2').toggle('Andrew');\">选中Andrew</ui-link>\n:::\n\n[[[事件]]]\n\n:::preset/html\nformEvent\n---\nuikey:radio\neventValue:'Tim'\neventMoreAttr::list=\"{Tim:'Tim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"\n:::\n\n[[[表单值]]]\n\n#### 值类型\n\n`String` : 字符串(键值列表`list`中的一项)\n\n#### 值过滤\n\n- 所有不支持的值类型，都会被尝试转换成`undefined`。\n- 若数不在键值列表(`list`)中，会被转换成`undefined`。\n\n#### 值格式\n\n选中项目的键值，或是未选中(`undefined`)。\n\n#### 默认值\n\n`undefined`\n\n#### 输入/输出示例\n\n:::repeat/html\nformValueType\n---\n<div>\n    <p>{$valueType}类型</p>\n    <div style=\"width:300px;\">\n        <ui-radio ref=\"demoType{$valueType}\" :list=\"{Jim:'Jim Boelaars',Andrew:'Andrew Colin Beck',Victor:'Victor Erixon'}\"></ui-radio>\n    </div>\n    <br>\n    <ui-link js=\"window.morning.findVM('demoType{$valueType}').set({$&valueContent})\">设置{$valueType}类型</ui-link>\n    <ui-link js=\"alert(window.morning.findVM('demoType{$valueType}').getJson())\">获取表单JSON值</ui-link>\n</div>\n<br>\n<br>\n:::\n\n[[[源码]]]\n\n<iframe src=\"/report/coverage/lib/components/radio/index.vue.html\" name=\"codeFrame\" frameborder=\"0\" onload=\"this.height=codeFrame.document.body.scrollHeight\"></iframe>\n\n")])])},r=[];t._withStripped=!0},314:function(n,e,i){"use strict";i.r(e);var t=i(49),r=i.n(t);for(var o in t)"default"!==o&&function(n){i.d(e,n,function(){return t[n]})}(o);var a=i(153),d=i(0),l=!1;var u=function(n){l||i(686)},s=Object(d.a)(r.a,a.a,a.b,!1,u,null,null);s.options.__file="src/docs/pages/component/radio/index.vue",e.default=s.exports},315:function(n,e,i){"use strict";var t=o(i(1)),r=o(i(314));function o(n){return n&&n.__esModule?n:{default:n}}new t.default({el:"#root",render:function(n){return n(r.default)}})},49:function(n,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t,r=i(2),o=(t=r)&&t.__esModule?t:{default:t};e.default={data:function(){return{page:"radio"}},components:{"doc-component":o.default}},n.exports=e.default},686:function(n,e){}});