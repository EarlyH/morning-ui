!function(n){function e(e){for(var r,l,a=e[0],c=e[1],u=e[2],d=0,p=[];d<a.length;d++)l=a[d],o[l]&&p.push(o[l][0]),o[l]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(n[r]=c[r]);for(s&&s(e);p.length;)p.shift()();return i.push.apply(i,u||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],r=!0,a=1;a<t.length;a++){var c=t[a];0!==o[c]&&(r=!1)}r&&(i.splice(e--,1),n=l(l.s=t[0]))}return n}var r={},o={2:0};var i=[];function l(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=n,l.c=r,l.d=function(n,e,t){l.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:t})},l.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},l.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return l.d(e,"a",e),e},l.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},l.p="/";var a=window.webpackJsonp=window.webpackJsonp||[],c=a.push.bind(a);a.push=e,a=a.slice();for(var u=0;u<a.length;u++)e(a[u]);var s=c;i.push([255,0]),t()}({1:function(n,e){n.exports=Vue},123:function(n,e,t){"use strict";t.d(e,"a",function(){return r}),t.d(e,"b",function(){return o});var r=function(){var n=this.$createElement,e=this._self._c||n;return e("doc-component",{attrs:{page:this.page,hasPadding:!0}},[e("script",{attrs:{type:"text/markdown"}},[this._v('\n# 告示 `<ui-alert>`\n\n<doc-component-status page="alert"></doc-component-status>\n\n[[[开始]]]\n\n定义一个告示，告示是一次性的信息展示组件，当告示被关闭后组件会被销毁。\n\n告示的内容支持HTML。\n\n#### 使用\n\n:::democode/html\n<ui-alert>展示的内容</ui-alert>\n:::\n\n#### 不同类型的告示\n\n通过`type`配置可以设置不通的告示类型。\n\n:::democode/html\n<ui-alert type="normal">展示的内容</ui-alert><br>\n<ui-alert type="success">展示的内容</ui-alert><br>\n<ui-alert type="warning">展示的内容</ui-alert><br>\n<ui-alert type="danger">展示的内容</ui-alert><br>\n<ui-alert type="primary">展示的内容</ui-alert><br>\n<ui-alert type="minor">展示的内容</ui-alert><br>\n<ui-alert type="info">展示的内容</ui-alert>\n:::\n\n#### 显示图标\n\n每个类型的告示内置了默认图标，通过`show-icon`配置开启：\n\n:::democode/html\n<ui-alert show-icon type="normal">展示的内容</ui-alert><br>\n<ui-alert show-icon type="success">展示的内容</ui-alert><br>\n<ui-alert show-icon type="warning">展示的内容</ui-alert><br>\n<ui-alert show-icon type="danger">展示的内容</ui-alert><br>\n<ui-alert show-icon type="primary">展示的内容</ui-alert><br>\n<ui-alert show-icon type="minor">展示的内容</ui-alert><br>\n<ui-alert show-icon type="info">展示的内容</ui-alert>\n:::\n\n告示的内容支持HTML，你也可以设置自定义的图标：\n\n:::democode/html\n<ui-alert><i class="mo-icon mo-icon-list"></i> 展示的内容</ui-alert><br>\n:::\n\n#### 可关闭\n\n:::democode/html\n<ui-alert can-close>展示的内容</ui-alert>\n:::\n\n\n[[[形态]]]\n\n#### 支持\n\n|类型|支持|默认|\n|-|-|-|\n|尺寸|不支持|-|\n|色彩|不支持|-|\n|状态|不支持|-|\n\n<a href="/guide/status.html">查看形态文档</a>\n\n\n[[[配置]]]\n\n|KEY|描述|接受值|值类型|默认值|\n|-|-|-|-|-|\n|[type](#type)|告示的类型|`\'normal\'` : 正常<br>`\'success\'` : 完成(成功)<br>`\'warning\'` : 警告<br>`\'danger\'` : 危险(失败)<br>`\'primary\'` : 重要<br>`\'minor\'` : 次要(疑问)<br>`\'info\'` : 信息<br>|String|`\'normal\'`|\n|[show-icon](#show-icon)|显示告示的默认图标，不同的`type`图标也不一样。|`true`<br>`false`|Boolean|`false`|\n|[can-close](#can-close)|告示可以被主动关闭(显示关闭链接)。|`true`<br>`false`|Boolean|`false`|\n|[close-content](#close-content)|关闭链接的内容(支持HTML)|关闭的DOM字符串|String|`\'&lt;i class="mo-icon mo-icon-close">&lt;/i>\'`|\n|[align](#align)|告示内容的对齐方式|`\'left\'` : 左对齐<br>`\'center\'` : 居中对齐<br>`\'right\'` : 右对齐|String|`\'left\'`|\n|[title](#title)|告示的标题(仅支持文本)，若为空字符串则不显示|标题字符串|String|`\'\'`|\n\n#### type\n\n:::democode/html\n<ui-alert show-icon type="normal">展示的内容</ui-alert><br>\n<ui-alert show-icon type="success">展示的内容</ui-alert><br>\n<ui-alert show-icon type="warning">展示的内容</ui-alert><br>\n<ui-alert show-icon type="danger">展示的内容</ui-alert><br>\n<ui-alert show-icon type="primary">展示的内容</ui-alert><br>\n<ui-alert show-icon type="minor">展示的内容</ui-alert><br>\n<ui-alert show-icon type="info">展示的内容</ui-alert>\n:::\n\n#### show-icon\n\n每个类型的告示内置了默认图标，通过`show-icon`配置开启：\n\n:::democode/html\n<ui-alert show-icon type="normal">展示的内容</ui-alert><br>\n<ui-alert show-icon type="success">展示的内容</ui-alert><br>\n<ui-alert show-icon type="warning">展示的内容</ui-alert><br>\n<ui-alert show-icon type="danger">展示的内容</ui-alert><br>\n<ui-alert show-icon type="primary">展示的内容</ui-alert><br>\n<ui-alert show-icon type="minor">展示的内容</ui-alert><br>\n<ui-alert show-icon type="info">展示的内容</ui-alert>\n:::\n\n#### can-close\n\n:::democode/html\n<ui-alert can-close type="normal">展示的内容</ui-alert><br>\n<ui-alert can-close type="success">展示的内容</ui-alert><br>\n<ui-alert can-close type="warning">展示的内容</ui-alert><br>\n<ui-alert can-close type="danger">展示的内容</ui-alert><br>\n<ui-alert can-close type="primary">展示的内容</ui-alert><br>\n<ui-alert can-close type="minor">展示的内容</ui-alert><br>\n<ui-alert can-close type="info">展示的内容</ui-alert>\n:::\n\n#### close-content\n\n自定义关闭的DOM：\n\n:::democode/html\n<ui-alert can-close close-content="关闭">展示的内容</ui-alert>\n:::\n\n#### align\n\n居中对齐：\n\n:::democode/html\n<ui-alert align="center">展示的内容</ui-alert>\n:::\n\n居中对齐配合`can-close`和`show-icon`:\n\n:::democode/html\n<ui-alert align="center" show-icon can-close>展示的内容</ui-alert>\n:::    \n\n右对齐：\n\n:::democode/html\n<ui-alert align="right">展示的内容</ui-alert>\n:::\n\n右对齐配合`can-close`和`show-icon`:\n\n:::democode/html\n<ui-alert align="right" show-icon can-close>展示的内容</ui-alert>\n:::\n\n#### title\n\n:::democode/html\n<ui-alert title="标题内容">展示的内容</ui-alert>\n:::\n\n配置`can-close`和`show-icon`:\n\n:::democode/html\n<ui-alert title="标题内容" show-icon can-close>展示的内容</ui-alert>\n:::\n\n[[[方法]]]\n\n#### close()\n\n关闭告示。\n\n:::democode/html\n<ui-alert ref="demo1">展示的内容</ui-alert>\n<br><br>\n<ui-link js="morning.findVM(\'demo1\').close();">关闭</ui-link>\n:::\n\n[[[事件]]]\n\n#### close\n\n当告示被关闭时触发。\n\n:::vue/html\nnew Vue({\n    el : \'{$el}\',\n    template : \'{$template}\',\n    methods : {\n        echo : function () {\n            console.log(\'demo2.console1\', \'close event!\');\n        }\n    }\n});\n---\n<div>\n    <ui-alert @close="echo" can-close>点击关闭触发</ui-alert>\n</div>\n:::\n\n#### 生命周期事件\n\n:::vue/html\nwindow.demoEventLifecycle = new Vue({\n    el : \'{$el}\',\n    template : \'{$template}\',\n    data : function () {\n        return {\n           text : \'告示\',\n           show : true\n        };\n    },\n    methods : {\n        echo : function (name) {\n            console.log(\'demoEventLifecycle.console1\', name + \' event!\');\n        }\n    }\n});\n---\n<div>\n    <ui-alert\n        ref="demoEventLifecycle"\n        v-show="show"\n        @created="echo(\'created\')"\n        @mounted="echo(\'mounted\')"\n        @before-update="echo(\'before-update\')"\n        @updated="echo(\'updated\')"\n        @before-destroy="echo(\'before-destroy\')"\n        @destroyed="echo(\'destroyed\')"\n    >{*text*}</ui-alert>\n\n    <br><br>\n\n    <ui-link js="window.demoEventLifecycle.text=\'生命周期事件\';">触发update</ui-link>\n    <ui-link js="morning.findVM(\'demoEventLifecycle\').$destroy();">触发destroy</ui-link>\n</div>\n:::\n\n\n[[[源码]]]\n\n<iframe src="/report/coverage/lib/components/alert/index.vue.html" name="codeFrame" frameborder="0" onload="this.height=codeFrame.document.body.scrollHeight"></iframe>\n\n')])])},o=[];r._withStripped=!0},254:function(n,e,t){"use strict";t.r(e);var r=t(7),o=t.n(r);for(var i in r)"default"!==i&&function(n){t.d(e,n,function(){return r[n]})}(i);var l=t(123),a=t(0),c=!1;var u=function(n){c||t(654)},s=Object(a.a)(o.a,l.a,l.b,!1,u,null,null);s.options.__file="src/docs/pages/component/alert/index.vue",e.default=s.exports},255:function(n,e,t){"use strict";var r=i(t(1)),o=i(t(254));function i(n){return n&&n.__esModule?n:{default:n}}new r.default({el:"#root",render:function(n){return n(o.default)}})},654:function(n,e){},7:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,o=t(2),i=(r=o)&&r.__esModule?r:{default:r};e.default={data:function(){return{page:"alert"}},components:{"doc-component":i.default}},n.exports=e.default}});