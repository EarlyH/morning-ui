@linkSizeFontSizeMap: 1.3, 1.1, 1, 0.8125, 0.75, 0.75, 0.75;
@linkColorHoverPercentage: 15%, 25%, 10%, 10%, 10%, 5%, 10%, 10%, 10%, 15%, 8%;
@linkColorActivePercentage: 25%, 35%, 20%, 15%, 15%, 10%, 15%, 15%, 15%, 30%, 12%;
@linkColorDisabledPercentage: 25%, 20%, 25%, 25%, 15%, 25%, 25%, 15%, 25%, 40%, 30%;

mor-link{
    display: inline-block;
    position: relative;
    line-height: 1.4em;
    height: 1.4em;
    border-bottom-width: 0;
    border-bottom-style: solid;

    &.underline:hover{
        border-bottom-width: 1px;
    }

    &.margin{
        padding: 0 0.6em;
    }

    &.loading{
        .mo-loader{
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 1em;
        }

        span{
            opacity: 0;
        }

        &:hover{
            cursor: default;
        }
    }

    each(@sizeNameMap, {
        & when (@value = 'm') {
            &,
            & .mo-icon,
            & .iconfont{
                font-size: @fontSize*extract(@linkSizeFontSizeMap, @index);;
            }
        }

        &.si-@{value}{
            &,
            & .mo-icon,
            & .iconfont{
                font-size: @fontSize*extract(@linkSizeFontSizeMap, @index);;
            }
        }
    });

    each(@colorShortNameMap, {
        & when (@value = t){
            color: extract(@colorVarMap, @index);
            border-bottom-style: extract(@colorVarMap, @index);

            .mo-loader{
                .mo-loader-path{
                    stroke: extract(@colorVarMap, @index);
                }
            }

            &:not(.st-disabled):hover,
            &.st-hover{
                color: darken(extract(@colorVarMap, @index), extract(@linkColorHoverPercentage, @index));
            }

            &:not(.st-disabled):active,
            &.st-active{
                color: darken(extract(@colorVarMap, @index), extract(@linkColorActivePercentage, @index));
            }

            &.st-disabled{
                color: lighten(extract(@colorVarMap, @index), extract(@linkColorDisabledPercentage, @index));
            }
        }

        &.co-@{value}{
            color: extract(@colorVarMap, @index);
            border-bottom-style: extract(@colorVarMap, @index);

            .mo-loader{
                .mo-loader-path{
                    stroke: extract(@colorVarMap, @index);
                }
            }

            &:not(.st-disabled):hover,
            &.st-hover{
                color: darken(extract(@colorVarMap, @index), extract(@linkColorHoverPercentage, @index));
            }

            &:not(.st-disabled):active,
            &.st-active{
                color: darken(extract(@colorVarMap, @index), extract(@linkColorActivePercentage, @index));
            }

            &.st-disabled{
                color: lighten(extract(@colorVarMap, @index), extract(@linkColorDisabledPercentage, @index));
            }
        }
    });

    each(range(11), {
        @colorName : 'colorNeutral@{value}';

        &.co-n@{value}{
            color: @@colorName;

            .mo-loader{
                .mo-loader-path{
                    stroke: @@colorName;
                }
            }

            &:not(.st-disabled):hover,
            &.st-hover{
                color: if((@value > 5), lighten(@@colorName, 15%), darken(@@colorName, 15%));
            }

            &:not(.st-disabled):active,
            &.st-active{
                color: if((@value > 5), lighten(@@colorName, 25%), darken(@@colorName, 25%));
            }

            &.st-disabled{
                color: if((@value > 5), lighten(@@colorName, 40%), darken(@@colorName, 30%));
            }
        }
    });

    &.st-normal{}

    &.st-hover{
        cursor: pointer;
    }

    &.st-active{}

    &.st-disabled{
        cursor: not-allowed !important;
    }

    &.st-disabled,
    &.st-readonly{
        border-bottom: none;
    }

    &.st-apparent{
        animation-name: apparent;
        animation-duration: 1s;
        animation-timing-function: linear;
        animation-iteration-count: infinite;

        &:hover{
            animation-name: none;
        }
    }

    // default status
    &{
        .st-normal;
    }

    &:hover{
        .st-hover;
    }
}
